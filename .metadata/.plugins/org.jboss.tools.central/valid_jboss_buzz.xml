<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" media="screen" href="/~d/styles/atom10full.xsl"?><?xml-stylesheet type="text/css" media="screen" href="http://feeds.feedburner.com/~d/styles/itemcontent.css"?><feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0"><title>JBoss Tools Aggregated Feed</title><link rel="alternate" href="http://tools.jboss.org" /><subtitle>JBoss Tools Aggregated Feed</subtitle><dc:creator>JBoss Tools</dc:creator><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="self" type="application/atom+xml" href="http://feeds.feedburner.com/jbossbuzz" /><feedburner:info uri="jbossbuzz" /><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="hub" href="http://pubsubhubbub.appspot.com/" /><entry><title>Kogito: A Modular Codegen Design Proposal</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/oS3As5ZkWYA/kogito-modular-codegen-design-proposal.html" /><category term="feed_group_name_drools" scheme="searchisko:content:tags" /><category term="feed_name_drools" scheme="searchisko:content:tags" /><author><name>Edoardo Vacchi</name></author><id>searchisko:content:id:jbossorg_blog-kogito_a_modular_codegen_design_proposal</id><updated>2020-04-23T07:45:36Z</updated><published>2020-04-23T07:45:00Z</published><content type="html">&lt;div class="markdown-here-wrapper" data-md-url="https://www.blogger.com/blogger.g?blogID=5869426#editor/target=post;postID=7640029746738508505" markdown-here-wrapper-content-modified="true"&gt;&lt;span style="color: #666666;"&gt;&lt;i&gt;Originally posted &lt;a href="https://evacchi.github.io/compilers/kogito/2020/04/23/kogito-codegen-design.html"&gt;here&lt;/a&gt;&lt;/i&gt;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="markdown-here-wrapper" data-md-url="https://www.blogger.com/blogger.g?blogID=5869426#editor/target=post;postID=7640029746738508505" markdown-here-wrapper-content-modified="true"&gt;&lt;/div&gt;&lt;div class="markdown-here-wrapper" data-md-url="https://www.blogger.com/blogger.g?blogID=5869426#editor/target=post;postID=7640029746738508505" markdown-here-wrapper-content-modified="true"&gt;My favorite topic of discussion last year was &lt;i&gt;moving computations to compile-time&lt;/i&gt;. &lt;br /&gt;&lt;div style="float: right;"&gt;&lt;br /&gt;&lt;img src="https://i.imgur.com/cHmSoB8.png" title="Reflection" /&gt;&lt;/div&gt;&lt;div style="margin: 0px 0px 1.2em !important;"&gt;In fact, I went to &lt;a href="https://youtu.be/TWfigR9wGsA"&gt;a few&lt;/a&gt; &lt;a href="https://www.youtube.com/watch?v=BUrY6On1SxM"&gt;conferences&lt;/a&gt; explaining how &lt;b&gt;moving processing out of your run-time and into build-time&lt;/b&gt;, is a &lt;b&gt;conceptually simple&lt;/b&gt; but &lt;b&gt;extremely effective way&lt;/b&gt; to make your applications lighter. This was sometimes received with &lt;b&gt;little enthusiasm&lt;/b&gt;: the idea itself is in fact far from new. Yet, it is key to a lot of the most interesting recent innovations in the Java ecosystem.&lt;/div&gt;&lt;div style="margin: 0px 0px 1.2em !important;"&gt;For better or worst, &lt;b&gt;run-time reflection&lt;/b&gt; is a peculiarity of the Java ecosystem. However, today &lt;b&gt;a lot of modern Java frameworks are embracing code generation&lt;/b&gt;; which is ironic, because, as far as I know, run-time reflection was often embraced as a reaction to slow code generation procedures. &lt;/div&gt;&lt;div style="margin: 0px 0px 1.2em !important;"&gt;In &lt;b&gt;&lt;a href="https://kogito.kie.org/"&gt;Kogito&lt;/a&gt;&lt;/b&gt;, we are using code generation to &lt;b&gt;pre-process&lt;/b&gt; and &lt;b&gt;compile&lt;/b&gt; so-called “business assets” into &lt;b&gt;executable code&lt;/b&gt;. In the following we will explore the history and the motivations for embracing code generation instead of run-time reflection, and how we plan to bring our approach to codegen forward, by &lt;b&gt;taking hints from compiler design&lt;/b&gt;.&lt;/div&gt;&lt;h2 id="run-time-vs-build-time-meta-programming" style="border-bottom: 1px solid rgb(238, 238, 238); font-size: 1.4em; font-weight: bold; margin: 1.3em 0px 1em; padding: 0px;"&gt;Run-Time vs. Build-Time Meta-Programming&lt;/h2&gt;&lt;div style="margin: 0px 0px 1.2em !important;"&gt;I believe there are many reasons why often we reach for run-time reflection, but I will name two; &lt;/div&gt;&lt;ol style="margin: 1.2em 0px; padding-left: 2em;"&gt;&lt;li style="margin: 0.5em 0px;"&gt;&lt;div style="margin: 0.5em 0px !important; margin: 0px 0px 1.2em !important;"&gt;the reflection API is “standard”: it is bundled with the JDK and it is relatively easy to use; it allows developers to implement some meta-programming logic with the tools they already know. &lt;/div&gt;&lt;/li&gt;&lt;li style="margin: 0.5em 0px;"&gt;&lt;div style="margin: 0.5em 0px !important; margin: 0px 0px 1.2em !important;"&gt;run-time reflection keeps &lt;b&gt;build time low&lt;/b&gt; and it allows for &lt;b&gt;more degrees of freedom at run-time&lt;/b&gt;. &lt;/div&gt;&lt;/li&gt;&lt;/ol&gt;&lt;div style="margin: 0px 0px 1.2em !important;"&gt;But the JDK &lt;i&gt;does&lt;/i&gt; support compile-time manipulation: although there is no “proper” macro support, there &lt;i&gt;are&lt;/i&gt; compile-time meta-programming facilities in the &lt;a href="https://docs.oracle.com/en/java/javase/11/docs/api/java.compiler/javax/annotation/processing/package-summary.html"&gt;&lt;b&gt;annotation processing framework&lt;/b&gt;&lt;/a&gt;. But then, although the annotation processor framework provides way to hook into the Java compiler and &lt;i&gt;process&lt;/i&gt; code, is does not provide a standardized set of tools to &lt;i&gt;generate&lt;/i&gt; code. Some people use &lt;a href="https://asm.ow2.io/"&gt;ASM&lt;/a&gt; for bytecode generation; other generate source code using &lt;a href="https://github.com/square/javapoet"&gt;JavaPoet&lt;/a&gt;, &lt;a href="https://javaparser.org/"&gt;JavaParser&lt;/a&gt; or other similar libraries. &lt;/div&gt;&lt;div style="margin: 0px 0px 1.2em !important;"&gt;And I believe, this is another reason, why people choose reflection: you don’t need to &lt;i&gt;generate&lt;/i&gt; code at all.&lt;/div&gt;&lt;h3 id="the-price-of-run-time-reflection" style="font-size: 1.3em; font-weight: bold; margin: 1.3em 0px 1em; padding: 0px;"&gt;The Price of Run-Time Reflection&lt;/h3&gt;&lt;div style="margin: 0px 0px 1.2em !important;"&gt;For this and other reasons code-generation has become a lesser citizen of the Java ecosystem. However, &lt;b&gt;run-time reflection comes at a price&lt;/b&gt;. From the top of my head: &lt;/div&gt;&lt;ul style="margin: 1.2em 0px; padding-left: 2em;"&gt;&lt;li style="margin: 0.5em 0px;"&gt;&lt;b&gt;your reflection logic &lt;i&gt;must&lt;/i&gt; be rock-solid&lt;/b&gt;: otherwise many compile-time errors will turn into run-time errors; i.e. errors into your reflective logic&lt;/li&gt;&lt;li style="margin: 0.5em 0px;"&gt;&lt;b&gt;moving meta-programming logic in the run-time&lt;/b&gt; of your application &lt;a href="https://www.optaplanner.org/blog/2018/01/09/JavaReflectionButMuchFaster.html"&gt;&lt;b&gt;impacts performance&lt;/b&gt;&lt;/a&gt;: not only are reflective invocations usually slower than direct invocations, but also meta-programming logic will run as part of your main program logic, inevitably adding overhead to execution. &lt;/li&gt;&lt;/ul&gt;&lt;div style="margin: 0px 0px 1.2em !important;"&gt;Traditionally, this was not regarded as a huge burden: in fact, Java programs used to be long-running and often server-side; the overhead of run-time reflection, being usually paid at application configuration and startup time, was considered irrelevant, because it was tiny, compared to the time they would run. &lt;/div&gt;&lt;h3 id="rediscovering-code-generation" style="font-size: 1.3em; font-weight: bold; margin: 1.3em 0px 1em; padding: 0px;"&gt;Rediscovering Code Generation&lt;/h3&gt;&lt;div style="float: right; padding-left: 2em;"&gt;&lt;br /&gt;&lt;img src="https://i.imgur.com/mgInxYI.png" title="The Dragon Book" /&gt;&lt;/div&gt;&lt;div style="margin: 0px 0px 1.2em !important;"&gt;Today &lt;b&gt;&lt;a href="https://micronaut.io/"&gt;a lot&lt;/a&gt; of &lt;a href="https://quarkus.io/"&gt;frameworks&lt;/a&gt;&lt;/b&gt; are actually going back to build-time code generation: &lt;b&gt;Kogito&lt;/b&gt; is one of those.&lt;/div&gt;&lt;div style="margin: 0px 0px 1.2em !important;"&gt;In the last few years, &lt;b&gt;the programming landscape &lt;a href="http://www.cdi-spec.org/news/2020/03/09/CDI_for_the_future/"&gt;has changed&lt;/a&gt;&lt;/b&gt;; for instance, constrained platforms such as Android used to have more limited support for runtime reflection different performance requirements: applications should be small and quick to start. People started to develop &lt;b&gt;microservices&lt;/b&gt; and &lt;b&gt;serverless applications&lt;/b&gt;: these services need to start very quickly, to elastically scale with the number of incoming requests. &lt;b&gt;GraalVM’s native image compiler&lt;/b&gt; is another run-time platform with additional constraints: it allows to compile a Java program into a native executable, but originally, it posed a few limitations on run-time reflection. Moreover, whereas in the past fat, long-running application servers hosted several, possibly mutable applications in a single process space, today we deploy &lt;b&gt;separate, stand-alone, immutable, containerized applications&lt;/b&gt; on Kubernetes. For all these, and other reasons, in the last few years &lt;b&gt;the Java ecosystem is rediscovering code-generation&lt;/b&gt;. &lt;/div&gt;&lt;div style="margin: 0px 0px 1.2em !important;"&gt;The Kogito code-generation procedure elaborates all the “knowledge assets” in a codebase and produces equivalent Java code that plugs into our core engines on one side, and into the Quarkus or Spring APIs to expose automatically generated REST service endpoints on the other. &lt;/div&gt;&lt;div style="margin: 0px 0px 1.2em !important;"&gt;Let’s see more in detail how this procedure works.&lt;/div&gt;&lt;h2 id="staged-compilation-in-kogito" style="border-bottom: 1px solid rgb(238, 238, 238); font-size: 1.4em; font-weight: bold; margin: 1.3em 0px 1em; padding: 0px;"&gt;Staged Compilation in Kogito&lt;/h2&gt;&lt;div style="margin: 0px 0px 1.2em !important;"&gt;In Kogito, the code-generation procedure is designed in &lt;b&gt;stages&lt;/b&gt;.&lt;br /&gt;&lt;br /&gt;&lt;div style="margin: auto; text-align: center;"&gt;&lt;img alt="Stages" src="https://i.imgur.com/YvzSkJT.png" width="70%" /&gt;&lt;/div&gt;&lt;br /&gt;First, &lt;b&gt;processes&lt;/b&gt; (BPMN files) are analyzed, then &lt;b&gt;rules&lt;/b&gt; (DRLs), then &lt;b&gt;decisions&lt;/b&gt; (DMNs). Each stage, as a result, generates Java source code; compilation is delegated to the Java compiler. In modern parlance, this would be called a &lt;i&gt;“transpiler”&lt;/i&gt;; a term that I despise, because it makes it sound like compilers do not just generate code but do some kind of magic mumbo-jumbo. But that’s another story. Whatever you want to call it, our current architecture of this procedure is rigid, and does not allow for extension&lt;/div&gt;&lt;div style="margin: 0px 0px 1.2em !important;"&gt;In fact, albeit we are processing each type of asset in a &lt;i&gt;separate stage&lt;/i&gt;, each stage is effectively a &lt;b&gt;single-pass compiler&lt;/b&gt;, because each it always terminates with the generation of the compilation target. This is the reason why it is generally better to &lt;b&gt;break down compilation into more passes&lt;/b&gt;. Each compilation pass usually produces what is called an &lt;b&gt;intermediate representation&lt;/b&gt;; the input to one stage is the output of the previous, and so on up to the final stage, where target code is actually produced.&lt;/div&gt;&lt;h3 id="compilers-and-compilation-phases" style="font-size: 1.3em; font-weight: bold; margin: 1.3em 0px 1em; padding: 0px;"&gt;Compilers and Compilation Phases&lt;/h3&gt;&lt;div style="margin: 0px 0px 1.2em !important;"&gt;In a traditional compiler, usually, one of the first stages is &lt;b&gt;parsing&lt;/b&gt; the input source code and transforming it into an internal tree representation (the &lt;i&gt;Abstract Syntax Tree&lt;/i&gt;); then usually is the &lt;b&gt;name resolution&lt;/b&gt; phase, where the names of the values and symbols that are used throughout the program are resolved; then the &lt;b&gt;type-checking phase&lt;/b&gt; verifies and validates the correctness of the program; finally &lt;b&gt;code&lt;/b&gt; is actually &lt;b&gt;generated&lt;/b&gt;.&lt;/div&gt;&lt;div style="margin: 0px 0px 1.2em !important;"&gt;In Kogito, we &lt;b&gt;parse&lt;/b&gt; knowledge assets, then we associate &lt;b&gt;names&lt;/b&gt; to each assets, and we resolve their internal structure, which may &lt;b&gt;cross-reference&lt;/b&gt; other existing assets. &lt;b&gt;Type-checking our assets means validating&lt;/b&gt; the models according to specifications and verifying these cross-references. For instance, a BPMN file may reference a Rule Unit definition and a service implementation written in Java. &lt;/div&gt;&lt;h3 id="compilers-and-mini-phases" style="font-size: 1.3em; font-weight: bold; margin: 1.3em 0px 1em; padding: 0px;"&gt;Compilers and Mini-Phases&lt;/h3&gt;&lt;div style="margin: 0px 0px 1.2em !important;"&gt;So far, our code-generation procedure has been pretty simplistic: we generated code regardless of potential errors, delegating compilation errors to the downstream Java compiler; worse, sometimes they would be caught later at run-time! This in general works, but it either produces pretty obscure compilation errors, or it moves validation too late in the pipeline: which is something that we wanted to avoid in the first place. We want to &lt;b&gt;catch errors early&lt;/b&gt; and only &lt;b&gt;generate valid code&lt;/b&gt;.&lt;/div&gt;&lt;div style="margin: 0px 0px 1.2em !important;"&gt;By refactoring our compilation phases to a staged, modular compilation architecture we will be able to catch resolution and validation errors early and present them to users in a meaningful way: only when the validation phase will be completed successfully, then we will actually generate code. But we also want our stages to be smaller, so that it is easier to &lt;b&gt;add more compilation stages&lt;/b&gt; at different points in the pipeline.&lt;/div&gt;&lt;div style="margin: auto;"&gt;&lt;img alt="Processes, Rules, Decisions" src="https://i.imgur.com/2ffP9Sl.jpg" width="100%" /&gt;&lt;/div&gt;&lt;div style="margin: 0px 0px 1.2em !important;"&gt;For instance, suppose you want to synthesize some elements (e.g. data models) that are inferred from the structure of a process. In our current architecture, the only way to produce additional assets would be to patch the existing code. By de-composing the phases as shown above, you would be able to &lt;b&gt;plug your additional &lt;a href="https://nanopass.org/"&gt;mini-phase&lt;/a&gt;&lt;/b&gt; right after “Model Validation”, so that you can be sure that all the names have been resolved, and that only valid models will be processed: you will produce an intermediate representation for the data model that you want to synthesize, and make it available during the “Cross-Referencing” phase.&lt;/div&gt;&lt;h2 id="pre-processing-assets-vs-code-scaffolding-" style="border-bottom: 1px solid rgb(238, 238, 238); font-size: 1.4em; font-weight: bold; margin: 1.3em 0px 1em; padding: 0px;"&gt;Pre-Processing Assets vs. Code Scaffolding.&lt;/h2&gt;&lt;div style="margin: 0px 0px 1.2em !important;"&gt;As briefly mentioned in the introduction, in our current architecture we are also conflating code-generation for two very different purposes.&lt;/div&gt;&lt;div style="margin: 0px 0px 1.2em !important;"&gt;The &lt;b&gt;first&lt;/b&gt; is to &lt;b&gt;pre-process&lt;/b&gt; assets to generate their &lt;b&gt;stand-alone run-time representation&lt;/b&gt;: the goal is both to reduce run-time processing and support native compilation. The output of this code-generation procedure are objects that interface directly with the internal programmatic APIs of our engines. This programmatic API, in Kogito, is currently considered an implementation detail, not supposed to be consumed by end-users. The reason is that this API is still unstable: we want to make sure to get it right, before making it public. Now, for the sake of explanation, consider a BPMN process definition: this is compiled into a class that implement the &lt;code style="background-color: #f8f8f8; border-radius: 3px; border: 1px solid rgb(234, 234, 234); display: inline; font-family: Consolas, Inconsolata, Courier, monospace; font-size: 0.85em; margin: 0px 0.15em; padding: 0px 0.3em; white-space: pre-wrap;"&gt;Process&amp;lt;T&amp;gt;&lt;/code&gt; interface of the programmatic API. By instantiating this class, you get an exact 1:1 representation of the process definition, minus parsing and preliminary analysis.&lt;/div&gt;&lt;div style="margin: 0px 0px 1.2em !important;"&gt;The &lt;b&gt;second&lt;/b&gt; purpose of code-generation is implemented as a &lt;b&gt;layer&lt;/b&gt; on top of these run-time representations; here we exposes calls into the programmatic API as &lt;b&gt;REST endpoints&lt;/b&gt;. For example, consider a process called &lt;code style="background-color: #f8f8f8; border-radius: 3px; border: 1px solid rgb(234, 234, 234); display: inline; font-family: Consolas, Inconsolata, Courier, monospace; font-size: 0.85em; margin: 0px 0.15em; padding: 0px 0.3em; white-space: pre-wrap;"&gt;MyProcess&lt;/code&gt;; the REST endpoints we generate expose REST APIs to start, execute and terminate an instance of that process. You can imagine that code to look a but like this:&lt;/div&gt;&lt;pre style="font-family: Consolas, Inconsolata, Courier, monospace; font-size: 0.85em; font-size: 1em; line-height: 1.2em; margin: 1.2em 0px;"&gt;&lt;code class="hljs language-java" style="-moz-text-size-adjust: none; background-color: #f8f8f8; background: rgb(248, 248, 248) none repeat scroll 0% 0%; border-radius: 3px; border-radius: 3px; border: 1px solid rgb(204, 204, 204); border: 1px solid rgb(234, 234, 234); color: #333333; display: block !important; display: block; display: inline; font-family: Consolas, Inconsolata, Courier, monospace; font-size: 0.85em; margin: 0px 0.15em; overflow-x: auto; overflow: auto; padding: 0.5em 0.7em; padding: 0.5em; padding: 0px 0.3em; white-space: pre-wrap; white-space: pre;"&gt;&lt;span class="hljs-annotation"&gt;@Path&lt;/span&gt;(&lt;span class="hljs-string" style="color: #dd1144;"&gt;"/MyProcess"&lt;/span&gt;)&lt;br /&gt;&lt;span class="hljs-keyword" style="color: #333333; font-weight: bold;"&gt;public&lt;/span&gt; &lt;span class="hljs-class"&gt;&lt;span class="hljs-keyword" style="color: #333333; font-weight: bold;"&gt;class&lt;/span&gt; &lt;span class="hljs-title" style="color: #990000; font-weight: bold;"&gt;MyProcessResource&lt;/span&gt; &lt;/span&gt;{&lt;br /&gt;&lt;br /&gt; &lt;span class="hljs-annotation"&gt;@Inject&lt;/span&gt;&lt;br /&gt; Process&amp;lt;MyProcess&amp;gt; p;&lt;br /&gt;&lt;br /&gt; &lt;span class="hljs-annotation"&gt;@POST&lt;/span&gt;&lt;br /&gt; &lt;span class="hljs-function"&gt;&lt;span class="hljs-keyword" style="color: #333333; font-weight: bold;"&gt;public&lt;/span&gt; MyProcess &lt;span class="hljs-title" style="color: #990000; font-weight: bold;"&gt;start&lt;/span&gt;&lt;span class="hljs-params"&gt;(MyProcess data)&lt;/span&gt; &lt;/span&gt;{&lt;br /&gt; &lt;span class="hljs-keyword" style="color: #333333; font-weight: bold;"&gt;return&lt;/span&gt; p.create(data).start();&lt;br /&gt; }&lt;br /&gt;&lt;br /&gt; &lt;span class="hljs-annotation"&gt;@DELETE&lt;/span&gt;(&lt;span class="hljs-string" style="color: #dd1144;"&gt;"/{id}"&lt;/span&gt;)&lt;br /&gt; &lt;span class="hljs-function"&gt;&lt;span class="hljs-keyword" style="color: #333333; font-weight: bold;"&gt;public&lt;/span&gt; MyProcess &lt;span class="hljs-title" style="color: #990000; font-weight: bold;"&gt;abort&lt;/span&gt;&lt;span class="hljs-params"&gt;(String id)&lt;/span&gt; &lt;/span&gt;{&lt;br /&gt; &lt;span class="hljs-keyword" style="color: #333333; font-weight: bold;"&gt;return&lt;/span&gt; = p.delete(id);&lt;br /&gt; }&lt;br /&gt;&lt;br /&gt; &lt;span class="hljs-annotation"&gt;@GET&lt;/span&gt;(&lt;span class="hljs-string" style="color: #dd1144;"&gt;"/{id}"&lt;/span&gt;)&lt;br /&gt; &lt;span class="hljs-keyword" style="color: #333333; font-weight: bold;"&gt;public&lt;/span&gt; Collection&amp;lt;ProcessInstance&amp;lt;MyProcess&amp;gt;&amp;gt; abort(String id) {&lt;br /&gt; &lt;span class="hljs-keyword" style="color: #333333; font-weight: bold;"&gt;return&lt;/span&gt; p.instances(id);&lt;br /&gt; }&lt;br /&gt; ...&lt;br /&gt;&lt;br /&gt;}&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;div style="margin: 0px 0px 1.2em !important;"&gt;Today, both the code that is generated for run-time representations and the code that implements REST endpoints is all treated as an &lt;i&gt;implementation detail&lt;/i&gt;. It is only visible in the compilation target directory of your project. And you are &lt;i&gt;not&lt;/i&gt; supposed to rely on the structure of that code in your own codebase.&lt;/div&gt;&lt;div style="margin: 0px 0px 1.2em !important;"&gt;However, we always meant this procedure to become customizable at some point, promoting it to be &lt;b&gt;scaffolding&lt;/b&gt;. &lt;/div&gt;&lt;div style="margin: 0px 0px 1.2em !important;"&gt;In the case of scaffolding, code should not be generated in your compilation target directory, but instead, it should be promoted to your &lt;i&gt;source code&lt;/i&gt; directory. We are currently working on a general solution to allow you to opt-out from code generation for specific assets, and instead, “claim” it for ownership. For instance, suppose that you want to customize &lt;code style="background-color: #f8f8f8; border-radius: 3px; border: 1px solid rgb(234, 234, 234); display: inline; font-family: Consolas, Inconsolata, Courier, monospace; font-size: 0.85em; margin: 0px 0.15em; padding: 0px 0.3em; white-space: pre-wrap;"&gt;MyProcess&lt;/code&gt;. You will be able to tell the code-generation procedure that you want customize that asset: the code-generation procedure will run once, and then you will be able to edit the generated code as regular source code.&lt;/div&gt;&lt;h2 id="conclusions" style="border-bottom: 1px solid rgb(238, 238, 238); font-size: 1.4em; font-weight: bold; margin: 1.3em 0px 1em; padding: 0px;"&gt;Conclusions&lt;/h2&gt;&lt;div style="margin: 0px 0px 1.2em !important;"&gt;You should now have a better understanding of the rationale for code generation in Kogito: in the future we are going to improve our code generation procedure to allow extensibility by plugging into the code-generation process, and customization by allowing end-users to promote code generation to scaffolding.&lt;/div&gt;&lt;div style="margin: 0px 0px 1.2em !important;"&gt;In the future we will further document how we plan to refactor our codebase to support these novel use cases. &lt;/div&gt;&lt;div style="font-size: 0em; height: 0; margin: 0; max-height: 0; max-width: 0; overflow: hidden; padding: 0; width: 0;" title="MDH:PGRpdiBzdHlsZT0iY29sb3I6ICMwMDAwMDA7YmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjtmb250 LWZhbWlseTogJydGaXJhIENvZGUnLCAnRHJvaWQgU2FucyBNb25vJywgJ21vbm9zcGFjZScsIG1v bm9zcGFjZSwgJ0Ryb2lkIFNhbnMgRmFsbGJhY2snJywgJ0Ryb2lkIFNhbnMgTW9ubycsICdtb25v c3BhY2UnLCBtb25vc3BhY2UsICdEcm9pZCBTYW5zIEZhbGxiYWNrJztmb250LXdlaWdodDogbm9y bWFsO2ZvbnQtc2l6ZTogMTRweDtsaW5lLWhlaWdodDogMTlweDt3aGl0ZS1zcGFjZTogcHJlOyI+ PGRpdj48c3BhbiBzdHlsZT0iY29sb3I6ICMwMDAwMDA7Ij4tLS08L3NwYW4+PC9kaXY+PGRpdj48 c3BhbiBzdHlsZT0iY29sb3I6ICM4MDAwMDA7Ij50aXRsZTwvc3Bhbj48c3BhbiBzdHlsZT0iY29s b3I6ICMwMDAwMDA7Ij46ICA8L3NwYW4+PHNwYW4gc3R5bGU9ImNvbG9yOiAjMDAwMGZmOyI+J0tv Z2l0bzogQSBNb2R1bGFyIENvZGVnZW4gRGVzaWduIFByb3Bvc2FsJzwvc3Bhbj48L2Rpdj48ZGl2 PjxzcGFuIHN0eWxlPSJjb2xvcjogIzgwMDAwMDsiPmNhdGVnb3JpZXM8L3NwYW4+PHNwYW4gc3R5 bGU9ImNvbG9yOiAjMDAwMDAwOyI+OiBbPC9zcGFuPjxzcGFuIHN0eWxlPSJjb2xvcjogIzAwMDBm ZjsiPkNvbXBpbGVyczwvc3Bhbj48c3BhbiBzdHlsZT0iY29sb3I6ICMwMDAwMDA7Ij4sIDwvc3Bh bj48c3BhbiBzdHlsZT0iY29sb3I6ICMwMDAwZmY7Ij5Lb2dpdG88L3NwYW4+PHNwYW4gc3R5bGU9 ImNvbG9yOiAjMDAwMDAwOyI+XTwvc3Bhbj48L2Rpdj48ZGl2PjxzcGFuIHN0eWxlPSJjb2xvcjog IzgwMDAwMDsiPmRhdGU8L3NwYW4+PHNwYW4gc3R5bGU9ImNvbG9yOiAjMDAwMDAwOyI+OiAgIDIw MjAtMDQtMjI8L3NwYW4+PC9kaXY+PGRpdj48c3BhbiBzdHlsZT0iY29sb3I6ICMwMDAwMDA7Ij4t LS08L3NwYW4+PC9kaXY+PGJyPjxkaXY+PHNwYW4gc3R5bGU9ImNvbG9yOiAjMDAwMDAwOyI+TXkg ZmF2b3JpdGUgdG9waWMgb2YgZGlzY3Vzc2lvbiBsYXN0IHllYXIgd2FzIDwvc3Bhbj48c3BhbiBz dHlsZT0iY29sb3I6ICMwMDAwMDA7Zm9udC1zdHlsZTogaXRhbGljOyI+X21vdmluZyBjb21wdXRh dGlvbnMgdG8gY29tcGlsZS10aW1lXzwvc3Bhbj48c3BhbiBzdHlsZT0iY29sb3I6ICMwMDAwMDA7 Ij4uIDwvc3Bhbj48L2Rpdj48YnI+PGRpdj48c3BhbiBzdHlsZT0iY29sb3I6ICM4MDAwMDA7Ij4m bHQ7ZGl2PC9zcGFuPjxzcGFuIHN0eWxlPSJjb2xvcjogIzAwMDAwMDsiPiA8L3NwYW4+PHNwYW4g c3R5bGU9ImNvbG9yOiAjZmYwMDAwOyI+c3R5bGU8L3NwYW4+PHNwYW4gc3R5bGU9ImNvbG9yOiAj MDAwMDAwOyI+PTwvc3Bhbj48c3BhbiBzdHlsZT0iY29sb3I6ICMwMDAwZmY7Ij4iPC9zcGFuPjxz cGFuIHN0eWxlPSJjb2xvcjogIzAwMDBmZjsiPmZsb2F0OnJpZ2h0PC9zcGFuPjxzcGFuIHN0eWxl PSJjb2xvcjogIzAwMDBmZjsiPiI8L3NwYW4+PHNwYW4gc3R5bGU9ImNvbG9yOiAjODAwMDAwOyI+ Jmd0Ozwvc3Bhbj48L2Rpdj48ZGl2PjxzcGFuIHN0eWxlPSJjb2xvcjogIzgwMDAwMDsiPiZsdDtp bWc8L3NwYW4+PHNwYW4gc3R5bGU9ImNvbG9yOiAjMDAwMDAwOyI+IDwvc3Bhbj48c3BhbiBzdHls ZT0iY29sb3I6ICNmZjAwMDA7Ij5zcmM8L3NwYW4+PHNwYW4gc3R5bGU9ImNvbG9yOiAjMDAwMDAw OyI+PTwvc3Bhbj48c3BhbiBzdHlsZT0iY29sb3I6ICMwMDAwZmY7Ij4iaHR0cHM6Ly9pLmltZ3Vy LmNvbS9jSG1Tb0I4LnBuZyI8L3NwYW4+PHNwYW4gc3R5bGU9ImNvbG9yOiAjMDAwMDAwOyI+IDwv c3Bhbj48c3BhbiBzdHlsZT0iY29sb3I6ICNmZjAwMDA7Ij50aXRsZTwvc3Bhbj48c3BhbiBzdHls ZT0iY29sb3I6ICMwMDAwMDA7Ij49PC9zcGFuPjxzcGFuIHN0eWxlPSJjb2xvcjogIzAwMDBmZjsi PiJSZWZsZWN0aW9uIjwvc3Bhbj48c3BhbiBzdHlsZT0iY29sb3I6ICMwMDAwMDA7Ij4gPC9zcGFu PjxzcGFuIHN0eWxlPSJjb2xvcjogIzgwMDAwMDsiPi8mZ3Q7PC9zcGFuPjwvZGl2PjxkaXY+PHNw YW4gc3R5bGU9ImNvbG9yOiAjODAwMDAwOyI+Jmx0Oy9kaXYmZ3Q7PC9zcGFuPjwvZGl2Pjxicj48 ZGl2PjxzcGFuIHN0eWxlPSJjb2xvcjogIzAwMDAwMDsiPkluIGZhY3QsIEkgd2VudCB0byA8L3Nw YW4+PHNwYW4gc3R5bGU9ImNvbG9yOiAjMDAwMDAwOyI+Wzwvc3Bhbj48c3BhbiBzdHlsZT0iY29s b3I6ICNhMzE1MTU7Ij5hIGZldzwvc3Bhbj48c3BhbiBzdHlsZT0iY29sb3I6ICMwMDAwMDA7Ij5d PC9zcGFuPjxzcGFuIHN0eWxlPSJjb2xvcjogIzAwMDAwMDsiPlt2ZG0xOV0gPC9zcGFuPjxzcGFu IHN0eWxlPSJjb2xvcjogIzAwMDAwMDsiPls8L3NwYW4+PHNwYW4gc3R5bGU9ImNvbG9yOiAjYTMx NTE1OyI+Y29uZmVyZW5jZXM8L3NwYW4+PHNwYW4gc3R5bGU9ImNvbG9yOiAjMDAwMDAwOyI+XTwv c3Bhbj48c3BhbiBzdHlsZT0iY29sb3I6ICMwMDAwMDA7Ij5bcWNvbnNwMTldIGV4cGxhaW5pbmcg aG93IDwvc3Bhbj48c3BhbiBzdHlsZT0iY29sb3I6ICMwMDAwODA7Zm9udC13ZWlnaHQ6IGJvbGQ7 Ij4qKm1vdmluZyBwcm9jZXNzaW5nIG91dCBvZiB5b3VyIHJ1bi10aW1lIGFuZCBpbnRvIGJ1aWxk LXRpbWUqKjwvc3Bhbj48c3BhbiBzdHlsZT0iY29sb3I6ICMwMDAwMDA7Ij4sIGlzIGEgPC9zcGFu PjxzcGFuIHN0eWxlPSJjb2xvcjogIzAwMDA4MDtmb250LXdlaWdodDogYm9sZDsiPioqY29uY2Vw dHVhbGx5IHNpbXBsZSoqPC9zcGFuPjxzcGFuIHN0eWxlPSJjb2xvcjogIzAwMDAwMDsiPiBidXQg PC9zcGFuPjxzcGFuIHN0eWxlPSJjb2xvcjogIzAwMDA4MDtmb250LXdlaWdodDogYm9sZDsiPioq ZXh0cmVtZWx5IGVmZmVjdGl2ZSB3YXkqKjwvc3Bhbj48c3BhbiBzdHlsZT0iY29sb3I6ICMwMDAw MDA7Ij4gdG8gbWFrZSB5b3VyIGFwcGxpY2F0aW9ucyBsaWdodGVyLiBUaGlzIHdhcyBzb21ldGlt ZXMgcmVjZWl2ZWQgd2l0aCA8L3NwYW4+PHNwYW4gc3R5bGU9ImNvbG9yOiAjMDAwMDgwO2ZvbnQt d2VpZ2h0OiBib2xkOyI+KipsaXR0bGUgZW50aHVzaWFzbSoqPC9zcGFuPjxzcGFuIHN0eWxlPSJj b2xvcjogIzAwMDAwMDsiPjogdGhlIGlkZWEgaXRzZWxmIGlzIGluIGZhY3QgZmFyIGZyb20gbmV3 LiBZZXQsIGl0IGlzIGtleSB0byBhIGxvdCBvZiB0aGUgbW9zdCBpbnRlcmVzdGluZyByZWNlbnQg aW5ub3ZhdGlvbnMgaW4gdGhlIEphdmEgZWNvc3lzdGVtLjwvc3Bhbj48L2Rpdj48YnI+PGRpdj48 c3BhbiBzdHlsZT0iY29sb3I6ICMwMDAwMDA7Ij5Gb3IgYmV0dGVyIG9yIHdvcnN0LCA8L3NwYW4+ PHNwYW4gc3R5bGU9ImNvbG9yOiAjMDAwMDgwO2ZvbnQtd2VpZ2h0OiBib2xkOyI+KipydW4tdGlt ZSByZWZsZWN0aW9uKio8L3NwYW4+PHNwYW4gc3R5bGU9ImNvbG9yOiAjMDAwMDAwOyI+IGlzIGEg cGVjdWxpYXJpdHkgb2YgdGhlIEphdmEgZWNvc3lzdGVtLiBIb3dldmVyLCB0b2RheSA8L3NwYW4+ PHNwYW4gc3R5bGU9ImNvbG9yOiAjMDAwMDgwO2ZvbnQtd2VpZ2h0OiBib2xkOyI+KiphIGxvdCBv ZiBtb2Rlcm4gSmF2YSBmcmFtZXdvcmtzIGFyZSBlbWJyYWNpbmcgY29kZSBnZW5lcmF0aW9uKio8 L3NwYW4+PHNwYW4gc3R5bGU9ImNvbG9yOiAjMDAwMDAwOyI+OyB3aGljaCBpcyBpcm9uaWMsIGJl Y2F1c2UsIGFzIGZhciBhcyBJIGtub3csIHJ1bi10aW1lIHJlZmxlY3Rpb24gd2FzIG9mdGVuIGVt YnJhY2VkIGFzIGEgcmVhY3Rpb24gdG8gc2xvdyBjb2RlIGdlbmVyYXRpb24gcHJvY2VkdXJlcy4g PC9zcGFuPjwvZGl2Pjxicj48ZGl2PjxzcGFuIHN0eWxlPSJjb2xvcjogIzAwMDAwMDsiPkluIDwv c3Bhbj48c3BhbiBzdHlsZT0iY29sb3I6ICMwMDAwODA7Zm9udC13ZWlnaHQ6IGJvbGQ7Ij4qKjwv c3Bhbj48c3BhbiBzdHlsZT0iY29sb3I6ICMwMDAwODA7Zm9udC13ZWlnaHQ6IGJvbGQ7Ij5bPC9z cGFuPjxzcGFuIHN0eWxlPSJjb2xvcjogI2EzMTUxNTtmb250LXdlaWdodDogYm9sZDsiPktvZ2l0 bzwvc3Bhbj48c3BhbiBzdHlsZT0iY29sb3I6ICMwMDAwODA7Zm9udC13ZWlnaHQ6IGJvbGQ7Ij5d PC9zcGFuPjxzcGFuIHN0eWxlPSJjb2xvcjogIzAwMDA4MDtmb250LXdlaWdodDogYm9sZDsiPltr b2dpdG9dKio8L3NwYW4+PHNwYW4gc3R5bGU9ImNvbG9yOiAjMDAwMDAwOyI+LCB3ZSBhcmUgdXNp bmcgY29kZSBnZW5lcmF0aW9uIHRvIDwvc3Bhbj48c3BhbiBzdHlsZT0iY29sb3I6ICMwMDAwODA7 Zm9udC13ZWlnaHQ6IGJvbGQ7Ij4qKnByZS1wcm9jZXNzKio8L3NwYW4+PHNwYW4gc3R5bGU9ImNv bG9yOiAjMDAwMDAwOyI+IGFuZCA8L3NwYW4+PHNwYW4gc3R5bGU9ImNvbG9yOiAjMDAwMDgwO2Zv bnQtd2VpZ2h0OiBib2xkOyI+Kipjb21waWxlKio8L3NwYW4+PHNwYW4gc3R5bGU9ImNvbG9yOiAj MDAwMDAwOyI+IHNvLWNhbGxlZCAiYnVzaW5lc3MgYXNzZXRzIiBpbnRvIDwvc3Bhbj48c3BhbiBz dHlsZT0iY29sb3I6ICMwMDAwODA7Zm9udC13ZWlnaHQ6IGJvbGQ7Ij4qKmV4ZWN1dGFibGUgY29k ZSoqPC9zcGFuPjxzcGFuIHN0eWxlPSJjb2xvcjogIzAwMDAwMDsiPi4gSW4gdGhlIGZvbGxvd2lu ZyB3ZSB3aWxsIGV4cGxvcmUgdGhlIGhpc3RvcnkgYW5kIHRoZSBtb3RpdmF0aW9ucyBmb3IgZW1i cmFjaW5nIGNvZGUgZ2VuZXJhdGlvbiBpbnN0ZWFkIG9mIHJ1bi10aW1lIHJlZmxlY3Rpb24sIGFu ZCBob3cgd2UgcGxhbiB0byBicmluZyBvdXIgYXBwcm9hY2ggdG8gY29kZWdlbiBmb3J3YXJkLCBi eSA8L3NwYW4+PHNwYW4gc3R5bGU9ImNvbG9yOiAjMDAwMDgwO2ZvbnQtd2VpZ2h0OiBib2xkOyI+ Kip0YWtpbmcgaGludHMgZnJvbSBjb21waWxlciBkZXNpZ24qKjwvc3Bhbj48c3BhbiBzdHlsZT0i Y29sb3I6ICMwMDAwMDA7Ij4uPC9zcGFuPjwvZGl2Pjxicj48ZGl2PjxzcGFuIHN0eWxlPSJjb2xv cjogIzgwMDAwMDtmb250LXdlaWdodDogYm9sZDsiPiMjIFJ1bi1UaW1lIHZzLiBCdWlsZC1UaW1l IE1ldGEtUHJvZ3JhbW1pbmcgPC9zcGFuPjwvZGl2Pjxicj48ZGl2PjxzcGFuIHN0eWxlPSJjb2xv cjogIzAwMDAwMDsiPkkgYmVsaWV2ZSB0aGVyZSBhcmUgbWFueSByZWFzb25zIHdoeSBvZnRlbiB3 ZSByZWFjaCBmb3IgcnVuLXRpbWUgcmVmbGVjdGlvbiwgYnV0IEkgd2lsbCBuYW1lIHR3bzsgPC9z cGFuPjwvZGl2Pjxicj48ZGl2PjxzcGFuIHN0eWxlPSJjb2xvcjogIzA0NTFhNTsiPjEuPC9zcGFu PjxzcGFuIHN0eWxlPSJjb2xvcjogIzAwMDAwMDsiPiB0aGUgcmVmbGVjdGlvbiBBUEkgaXMgInN0 YW5kYXJkIjogaXQgaXMgYnVuZGxlZCB3aXRoIHRoZSBKREsgYW5kIGl0IGlzIHJlbGF0aXZlbHkg ZWFzeSB0byB1c2U7IGl0IGFsbG93cyBkZXZlbG9wZXJzIHRvIGltcGxlbWVudCBzb21lIG1ldGEt cHJvZ3JhbW1pbmcgbG9naWMgd2l0aCB0aGUgdG9vbHMgdGhleSBhbHJlYWR5IGtub3cuIDwvc3Bh bj48L2Rpdj48YnI+PGRpdj48c3BhbiBzdHlsZT0iY29sb3I6ICMwNDUxYTU7Ij4yLjwvc3Bhbj48 c3BhbiBzdHlsZT0iY29sb3I6ICMwMDAwMDA7Ij4gcnVuLXRpbWUgcmVmbGVjdGlvbiBrZWVwcyA8 L3NwYW4+PHNwYW4gc3R5bGU9ImNvbG9yOiAjMDAwMDgwO2ZvbnQtd2VpZ2h0OiBib2xkOyI+Kipi dWlsZCB0aW1lIGxvdyoqPC9zcGFuPjxzcGFuIHN0eWxlPSJjb2xvcjogIzAwMDAwMDsiPiBhbmQg aXQgYWxsb3dzIGZvciA8L3NwYW4+PHNwYW4gc3R5bGU9ImNvbG9yOiAjMDAwMDgwO2ZvbnQtd2Vp Z2h0OiBib2xkOyI+Kiptb3JlIGRlZ3JlZXMgb2YgZnJlZWRvbSBhdCBydW4tdGltZSoqPC9zcGFu PjxzcGFuIHN0eWxlPSJjb2xvcjogIzAwMDAwMDsiPi4gPC9zcGFuPjwvZGl2Pjxicj48ZGl2Pjxz cGFuIHN0eWxlPSJjb2xvcjogIzAwMDAwMDsiPkJ1dCB0aGUgSkRLIDwvc3Bhbj48c3BhbiBzdHls ZT0iY29sb3I6ICMwMDAwMDA7Zm9udC1zdHlsZTogaXRhbGljOyI+X2RvZXNfPC9zcGFuPjxzcGFu IHN0eWxlPSJjb2xvcjogIzAwMDAwMDsiPiBzdXBwb3J0IGNvbXBpbGUtdGltZSBtYW5pcHVsYXRp b246IGFsdGhvdWdoIHRoZXJlIGlzIG5vICJwcm9wZXIiIG1hY3JvIHN1cHBvcnQsIHRoZXJlIDwv c3Bhbj48c3BhbiBzdHlsZT0iY29sb3I6ICMwMDAwMDA7Zm9udC1zdHlsZTogaXRhbGljOyI+X2Fy ZV88L3NwYW4+PHNwYW4gc3R5bGU9ImNvbG9yOiAjMDAwMDAwOyI+IGNvbXBpbGUtdGltZSBtZXRh LXByb2dyYW1taW5nIGZhY2lsaXRpZXMgaW4gdGhlIDwvc3Bhbj48c3BhbiBzdHlsZT0iY29sb3I6 ICMwMDAwMDA7Ij5bPC9zcGFuPjxzcGFuIHN0eWxlPSJjb2xvcjogI2EzMTUxNTsiPioqYW5ub3Rh dGlvbiBwcm9jZXNzaW5nIGZyYW1ld29yayoqPC9zcGFuPjxzcGFuIHN0eWxlPSJjb2xvcjogIzAw MDAwMDsiPl08L3NwYW4+PHNwYW4gc3R5bGU9ImNvbG9yOiAjMDAwMDAwOyI+W2Fubm90YXRpb25z XS4gQnV0IHRoZW4sIGFsdGhvdWdoIHRoZSBhbm5vdGF0aW9uIHByb2Nlc3NvciBmcmFtZXdvcmsg cHJvdmlkZXMgd2F5IHRvIGhvb2sgaW50byB0aGUgSmF2YSBjb21waWxlciBhbmQgPC9zcGFuPjxz cGFuIHN0eWxlPSJjb2xvcjogIzAwMDAwMDtmb250LXN0eWxlOiBpdGFsaWM7Ij5fcHJvY2Vzc188 L3NwYW4+PHNwYW4gc3R5bGU9ImNvbG9yOiAjMDAwMDAwOyI+IGNvZGUsICBpcyBkb2VzIG5vdCBw cm92aWRlIGEgc3RhbmRhcmRpemVkIHNldCBvZiB0b29scyB0byA8L3NwYW4+PHNwYW4gc3R5bGU9 ImNvbG9yOiAjMDAwMDAwO2ZvbnQtc3R5bGU6IGl0YWxpYzsiPl9nZW5lcmF0ZV88L3NwYW4+PHNw YW4gc3R5bGU9ImNvbG9yOiAjMDAwMDAwOyI+IGNvZGUuIFNvbWUgcGVvcGxlIHVzZSA8L3NwYW4+ PHNwYW4gc3R5bGU9ImNvbG9yOiAjMDAwMDAwOyI+Wzwvc3Bhbj48c3BhbiBzdHlsZT0iY29sb3I6 ICNhMzE1MTU7Ij5BU008L3NwYW4+PHNwYW4gc3R5bGU9ImNvbG9yOiAjMDAwMDAwOyI+XTwvc3Bh bj48c3BhbiBzdHlsZT0iY29sb3I6ICMwMDAwMDA7Ij5bYXNtXSBmb3IgYnl0ZWNvZGUgZ2VuZXJh dGlvbjsgb3RoZXIgZ2VuZXJhdGUgc291cmNlIGNvZGUgdXNpbmcgPC9zcGFuPjxzcGFuIHN0eWxl PSJjb2xvcjogIzAwMDAwMDsiPls8L3NwYW4+PHNwYW4gc3R5bGU9ImNvbG9yOiAjYTMxNTE1OyI+ SmF2YVBvZXQ8L3NwYW4+PHNwYW4gc3R5bGU9ImNvbG9yOiAjMDAwMDAwOyI+XTwvc3Bhbj48c3Bh biBzdHlsZT0iY29sb3I6ICMwMDAwMDA7Ij5bamF2YXBvZXRdLCA8L3NwYW4+PHNwYW4gc3R5bGU9 ImNvbG9yOiAjMDAwMDAwOyI+Wzwvc3Bhbj48c3BhbiBzdHlsZT0iY29sb3I6ICNhMzE1MTU7Ij5K YXZhUGFyc2VyPC9zcGFuPjxzcGFuIHN0eWxlPSJjb2xvcjogIzAwMDAwMDsiPl08L3NwYW4+PHNw YW4gc3R5bGU9ImNvbG9yOiAjMDAwMDAwOyI+W2phdmFwYXJzZXJdIG9yIG90aGVyIHNpbWlsYXIg bGlicmFyaWVzLiA8L3NwYW4+PC9kaXY+PGJyPjxkaXY+PHNwYW4gc3R5bGU9ImNvbG9yOiAjMDAw MDAwOyI+QW5kIEkgYmVsaWV2ZSwgdGhpcyBpcyBhbm90aGVyIHJlYXNvbiwgd2h5IHBlb3BsZSBj aG9vc2UgcmVmbGVjdGlvbjogeW91IGRvbid0IG5lZWQgdG8gPC9zcGFuPjxzcGFuIHN0eWxlPSJj b2xvcjogIzAwMDAwMDtmb250LXN0eWxlOiBpdGFsaWM7Ij5fZ2VuZXJhdGVfPC9zcGFuPjxzcGFu IHN0eWxlPSJjb2xvcjogIzAwMDAwMDsiPiBjb2RlIGF0IGFsbC48L3NwYW4+PC9kaXY+PGJyPjxk aXY+PHNwYW4gc3R5bGU9ImNvbG9yOiAjODAwMDAwO2ZvbnQtd2VpZ2h0OiBib2xkOyI+IyMjIFRo ZSBQcmljZSBvZiBSdW4tVGltZSBSZWZsZWN0aW9uPC9zcGFuPjwvZGl2Pjxicj48ZGl2PjxzcGFu IHN0eWxlPSJjb2xvcjogIzAwMDAwMDsiPkZvciB0aGlzIGFuZCBvdGhlciByZWFzb25zIGNvZGUt Z2VuZXJhdGlvbiBoYXMgYmVjb21lIGEgbGVzc2VyIGNpdGl6ZW4gb2YgdGhlIEphdmEgZWNvc3lz dGVtLiBIb3dldmVyLCA8L3NwYW4+PHNwYW4gc3R5bGU9ImNvbG9yOiAjMDAwMDgwO2ZvbnQtd2Vp Z2h0OiBib2xkOyI+KipydW4tdGltZSByZWZsZWN0aW9uIGNvbWVzIGF0IGEgcHJpY2UqKjwvc3Bh bj48c3BhbiBzdHlsZT0iY29sb3I6ICMwMDAwMDA7Ij4uIEZyb20gdGhlIHRvcCBvZiBteSBoZWFk OiA8L3NwYW4+PC9kaXY+PGJyPjxkaXY+PHNwYW4gc3R5bGU9ImNvbG9yOiAjMDQ1MWE1OyI+LTwv c3Bhbj48c3BhbiBzdHlsZT0iY29sb3I6ICMwMDAwMDA7Ij4gPC9zcGFuPjxzcGFuIHN0eWxlPSJj b2xvcjogIzAwMDA4MDtmb250LXdlaWdodDogYm9sZDsiPioqeW91ciByZWZsZWN0aW9uIGxvZ2lj IDwvc3Bhbj48c3BhbiBzdHlsZT0iY29sb3I6ICMwMDAwODA7Zm9udC1zdHlsZTogaXRhbGljOyI+ X211c3RfPC9zcGFuPjxzcGFuIHN0eWxlPSJjb2xvcjogIzAwMDA4MDtmb250LXdlaWdodDogYm9s ZDsiPiBiZSByb2NrLXNvbGlkKio8L3NwYW4+PHNwYW4gc3R5bGU9ImNvbG9yOiAjMDAwMDAwOyI+ OiBvdGhlcndpc2UgbWFueSBjb21waWxlLXRpbWUgZXJyb3JzIHdpbGwgdHVybiBpbnRvIHJ1bi10 aW1lIGVycm9yczsgaS5lLiBlcnJvcnMgaW50byB5b3VyIHJlZmxlY3RpdmUgbG9naWM8L3NwYW4+ PC9kaXY+PGRpdj48c3BhbiBzdHlsZT0iY29sb3I6ICMwNDUxYTU7Ij4tPC9zcGFuPjxzcGFuIHN0 eWxlPSJjb2xvcjogIzAwMDAwMDsiPiA8L3NwYW4+PHNwYW4gc3R5bGU9ImNvbG9yOiAjMDAwMDgw O2ZvbnQtd2VpZ2h0OiBib2xkOyI+Kiptb3ZpbmcgbWV0YS1wcm9ncmFtbWluZyBsb2dpYyBpbiB0 aGUgcnVuLXRpbWUqKjwvc3Bhbj48c3BhbiBzdHlsZT0iY29sb3I6ICMwMDAwMDA7Ij4gb2YgeW91 ciBhcHBsaWNhdGlvbiA8L3NwYW4+PHNwYW4gc3R5bGU9ImNvbG9yOiAjMDAwMDAwOyI+Wzwvc3Bh bj48c3BhbiBzdHlsZT0iY29sb3I6ICNhMzE1MTU7Ij4qKmltcGFjdHMgcGVyZm9ybWFuY2UqKjwv c3Bhbj48c3BhbiBzdHlsZT0iY29sb3I6ICMwMDAwMDA7Ij5dPC9zcGFuPjxzcGFuIHN0eWxlPSJj b2xvcjogIzAwMDAwMDsiPltyZWZsZWN0aW9uXTogbm90IG9ubHkgYXJlIHJlZmxlY3RpdmUgaW52 b2NhdGlvbnMgdXN1YWxseSBzbG93ZXIgdGhhbiBkaXJlY3QgaW52b2NhdGlvbnMsIGJ1dCBhbHNv IG1ldGEtcHJvZ3JhbW1pbmcgbG9naWMgd2lsbCBydW4gYXMgcGFydCBvZiB5b3VyIG1haW4gcHJv Z3JhbSBsb2dpYywgaW5ldml0YWJseSBhZGRpbmcgb3ZlcmhlYWQgdG8gZXhlY3V0aW9uLiA8L3Nw YW4+PC9kaXY+PGJyPjxkaXY+PHNwYW4gc3R5bGU9ImNvbG9yOiAjMDAwMDAwOyI+VHJhZGl0aW9u YWxseSwgdGhpcyB3YXMgbm90IHJlZ2FyZGVkIGFzIGEgaHVnZSBidXJkZW46IGluIGZhY3QsIEph dmEgcHJvZ3JhbXMgdXNlZCB0byBiZSBsb25nLXJ1bm5pbmcgYW5kIG9mdGVuIHNlcnZlci1zaWRl OyB0aGUgb3ZlcmhlYWQgb2YgcnVuLXRpbWUgcmVmbGVjdGlvbiwgYmVpbmcgdXN1YWxseSBwYWlk IGF0IGFwcGxpY2F0aW9uIGNvbmZpZ3VyYXRpb24gYW5kIHN0YXJ0dXAgdGltZSwgd2FzIGNvbnNp ZGVyZWQgaXJyZWxldmFudCwgYmVjYXVzZSBpdCB3YXMgdGlueSwgY29tcGFyZWQgdG8gdGhlIHRp bWUgdGhleSB3b3VsZCBydW4uIDwvc3Bhbj48L2Rpdj48YnI+PGRpdj48c3BhbiBzdHlsZT0iY29s b3I6ICM4MDAwMDA7Zm9udC13ZWlnaHQ6IGJvbGQ7Ij4jIyMgUmVkaXNjb3ZlcmluZyBDb2RlIEdl bmVyYXRpb248L3NwYW4+PC9kaXY+PGJyPjxkaXY+PHNwYW4gc3R5bGU9ImNvbG9yOiAjODAwMDAw OyI+Jmx0O2Rpdjwvc3Bhbj48c3BhbiBzdHlsZT0iY29sb3I6ICMwMDAwMDA7Ij4gPC9zcGFuPjxz cGFuIHN0eWxlPSJjb2xvcjogI2ZmMDAwMDsiPnN0eWxlPC9zcGFuPjxzcGFuIHN0eWxlPSJjb2xv cjogIzAwMDAwMDsiPj08L3NwYW4+PHNwYW4gc3R5bGU9ImNvbG9yOiAjMDAwMGZmOyI+Ijwvc3Bh bj48c3BhbiBzdHlsZT0iY29sb3I6ICMwMDAwZmY7Ij5mbG9hdDpyaWdodDsgcGFkZGluZy1sZWZ0 OiAyZW08L3NwYW4+PHNwYW4gc3R5bGU9ImNvbG9yOiAjMDAwMGZmOyI+Ijwvc3Bhbj48c3BhbiBz dHlsZT0iY29sb3I6ICM4MDAwMDA7Ij4mZ3Q7PC9zcGFuPjwvZGl2PjxkaXY+PHNwYW4gc3R5bGU9 ImNvbG9yOiAjODAwMDAwOyI+Jmx0O2ltZzwvc3Bhbj48c3BhbiBzdHlsZT0iY29sb3I6ICMwMDAw MDA7Ij4gPC9zcGFuPjxzcGFuIHN0eWxlPSJjb2xvcjogI2ZmMDAwMDsiPnNyYzwvc3Bhbj48c3Bh biBzdHlsZT0iY29sb3I6ICMwMDAwMDA7Ij49PC9zcGFuPjxzcGFuIHN0eWxlPSJjb2xvcjogIzAw MDBmZjsiPiJodHRwczovL2kuaW1ndXIuY29tL21nSW54WUkucG5nIjwvc3Bhbj48c3BhbiBzdHls ZT0iY29sb3I6ICMwMDAwMDA7Ij4gPC9zcGFuPjxzcGFuIHN0eWxlPSJjb2xvcjogI2ZmMDAwMDsi PnRpdGxlPC9zcGFuPjxzcGFuIHN0eWxlPSJjb2xvcjogIzAwMDAwMDsiPj08L3NwYW4+PHNwYW4g c3R5bGU9ImNvbG9yOiAjMDAwMGZmOyI+IlRoZSBEcmFnb24gQm9vayI8L3NwYW4+PHNwYW4gc3R5 bGU9ImNvbG9yOiAjODAwMDAwOyI+LyZndDs8L3NwYW4+PC9kaXY+PGRpdj48c3BhbiBzdHlsZT0i Y29sb3I6ICM4MDAwMDA7Ij4mbHQ7L2RpdiZndDs8L3NwYW4+PC9kaXY+PGJyPjxkaXY+PHNwYW4g c3R5bGU9ImNvbG9yOiAjMDAwMDAwOyI+VG9kYXkgPC9zcGFuPjxzcGFuIHN0eWxlPSJjb2xvcjog IzAwMDA4MDtmb250LXdlaWdodDogYm9sZDsiPioqPC9zcGFuPjxzcGFuIHN0eWxlPSJjb2xvcjog IzAwMDA4MDtmb250LXdlaWdodDogYm9sZDsiPls8L3NwYW4+PHNwYW4gc3R5bGU9ImNvbG9yOiAj YTMxNTE1O2ZvbnQtd2VpZ2h0OiBib2xkOyI+YSBsb3Q8L3NwYW4+PHNwYW4gc3R5bGU9ImNvbG9y OiAjMDAwMDgwO2ZvbnQtd2VpZ2h0OiBib2xkOyI+XTwvc3Bhbj48c3BhbiBzdHlsZT0iY29sb3I6 ICMwMDAwODA7Zm9udC13ZWlnaHQ6IGJvbGQ7Ij5bbWljcm9uYXV0XSBvZiA8L3NwYW4+PHNwYW4g c3R5bGU9ImNvbG9yOiAjMDAwMDgwO2ZvbnQtd2VpZ2h0OiBib2xkOyI+Wzwvc3Bhbj48c3BhbiBz dHlsZT0iY29sb3I6ICNhMzE1MTU7Zm9udC13ZWlnaHQ6IGJvbGQ7Ij5mcmFtZXdvcmtzPC9zcGFu PjxzcGFuIHN0eWxlPSJjb2xvcjogIzAwMDA4MDtmb250LXdlaWdodDogYm9sZDsiPl08L3NwYW4+ PHNwYW4gc3R5bGU9ImNvbG9yOiAjMDAwMDgwO2ZvbnQtd2VpZ2h0OiBib2xkOyI+W3F1YXJrdXNd Kio8L3NwYW4+PHNwYW4gc3R5bGU9ImNvbG9yOiAjMDAwMDAwOyI+IGFyZSBhY3R1YWxseSBnb2lu ZyBiYWNrIHRvIGJ1aWxkLXRpbWUgY29kZSBnZW5lcmF0aW9uOiA8L3NwYW4+PHNwYW4gc3R5bGU9 ImNvbG9yOiAjMDAwMDgwO2ZvbnQtd2VpZ2h0OiBib2xkOyI+KipLb2dpdG8qKjwvc3Bhbj48c3Bh biBzdHlsZT0iY29sb3I6ICMwMDAwMDA7Ij4gaXMgb25lIG9mIHRob3NlLjwvc3Bhbj48L2Rpdj48 YnI+PGRpdj48c3BhbiBzdHlsZT0iY29sb3I6ICMwMDAwMDA7Ij5JbiB0aGUgbGFzdCBmZXcgeWVh cnMsIDwvc3Bhbj48c3BhbiBzdHlsZT0iY29sb3I6ICMwMDAwODA7Zm9udC13ZWlnaHQ6IGJvbGQ7 Ij4qKnRoZSBwcm9ncmFtbWluZyBsYW5kc2NhcGUgPC9zcGFuPjxzcGFuIHN0eWxlPSJjb2xvcjog IzAwMDA4MDtmb250LXdlaWdodDogYm9sZDsiPls8L3NwYW4+PHNwYW4gc3R5bGU9ImNvbG9yOiAj YTMxNTE1O2ZvbnQtd2VpZ2h0OiBib2xkOyI+aGFzIGNoYW5nZWQ8L3NwYW4+PHNwYW4gc3R5bGU9 ImNvbG9yOiAjMDAwMDgwO2ZvbnQtd2VpZ2h0OiBib2xkOyI+XTwvc3Bhbj48c3BhbiBzdHlsZT0i Y29sb3I6ICMwMDAwODA7Zm9udC13ZWlnaHQ6IGJvbGQ7Ij5bY2RpbGl0ZV0qKjwvc3Bhbj48c3Bh biBzdHlsZT0iY29sb3I6ICMwMDAwMDA7Ij47IGZvciBpbnN0YW5jZSwgY29uc3RyYWluZWQgcGxh dGZvcm1zIHN1Y2ggYXMgQW5kcm9pZCB1c2VkIHRvIGhhdmUgbW9yZSBsaW1pdGVkIHN1cHBvcnQg Zm9yIHJ1bnRpbWUgcmVmbGVjdGlvbiBkaWZmZXJlbnQgcGVyZm9ybWFuY2UgcmVxdWlyZW1lbnRz OiBhcHBsaWNhdGlvbnMgc2hvdWxkIGJlIHNtYWxsIGFuZCBxdWljayB0byBzdGFydC4gUGVvcGxl IHN0YXJ0ZWQgdG8gZGV2ZWxvcCA8L3NwYW4+PHNwYW4gc3R5bGU9ImNvbG9yOiAjMDAwMDgwO2Zv bnQtd2VpZ2h0OiBib2xkOyI+KiptaWNyb3NlcnZpY2VzKio8L3NwYW4+PHNwYW4gc3R5bGU9ImNv bG9yOiAjMDAwMDAwOyI+IGFuZCA8L3NwYW4+PHNwYW4gc3R5bGU9ImNvbG9yOiAjMDAwMDgwO2Zv bnQtd2VpZ2h0OiBib2xkOyI+KipzZXJ2ZXJsZXNzIGFwcGxpY2F0aW9ucyoqPC9zcGFuPjxzcGFu IHN0eWxlPSJjb2xvcjogIzAwMDAwMDsiPjogdGhlc2Ugc2VydmljZXMgbmVlZCB0byBzdGFydCB2 ZXJ5IHF1aWNrbHksIHRvIGVsYXN0aWNhbGx5IHNjYWxlIHdpdGggdGhlIG51bWJlciBvZiBpbmNv bWluZyByZXF1ZXN0cy4gPC9zcGFuPjxzcGFuIHN0eWxlPSJjb2xvcjogIzAwMDA4MDtmb250LXdl aWdodDogYm9sZDsiPioqR3JhYWxWTSdzIG5hdGl2ZSBpbWFnZSBjb21waWxlcioqPC9zcGFuPjxz cGFuIHN0eWxlPSJjb2xvcjogIzAwMDAwMDsiPiBpcyBhbm90aGVyIHJ1bi10aW1lIHBsYXRmb3Jt IHdpdGggYWRkaXRpb25hbCBjb25zdHJhaW50czogaXQgYWxsb3dzIHRvIGNvbXBpbGUgYSBKYXZh IHByb2dyYW0gaW50byBhIG5hdGl2ZSBleGVjdXRhYmxlLCBidXQgb3JpZ2luYWxseSwgaXQgcG9z ZWQgYSBmZXcgbGltaXRhdGlvbnMgb24gcnVuLXRpbWUgcmVmbGVjdGlvbi4gTW9yZW92ZXIsIHdo ZXJlYXMgaW4gdGhlIHBhc3QgZmF0LCBsb25nLXJ1bm5pbmcgYXBwbGljYXRpb24gc2VydmVycyBo b3N0ZWQgc2V2ZXJhbCwgcG9zc2libHkgbXV0YWJsZSBhcHBsaWNhdGlvbnMgaW4gYSBzaW5nbGUg cHJvY2VzcyBzcGFjZSwgdG9kYXkgd2UgZGVwbG95IDwvc3Bhbj48c3BhbiBzdHlsZT0iY29sb3I6 ICMwMDAwODA7Zm9udC13ZWlnaHQ6IGJvbGQ7Ij4qKnNlcGFyYXRlLCBzdGFuZC1hbG9uZSwgaW1t dXRhYmxlLCBjb250YWluZXJpemVkIGFwcGxpY2F0aW9ucyoqPC9zcGFuPjxzcGFuIHN0eWxlPSJj b2xvcjogIzAwMDAwMDsiPiBvbiBLdWJlcm5ldGVzLiBGb3IgYWxsIHRoZXNlLCBhbmQgb3RoZXIg cmVhc29ucywgaW4gdGhlIGxhc3QgZmV3IHllYXJzIDwvc3Bhbj48c3BhbiBzdHlsZT0iY29sb3I6 ICMwMDAwODA7Zm9udC13ZWlnaHQ6IGJvbGQ7Ij4qKnRoZSBKYXZhIGVjb3N5c3RlbSBpcyByZWRp c2NvdmVyaW5nIGNvZGUtZ2VuZXJhdGlvbioqPC9zcGFuPjxzcGFuIHN0eWxlPSJjb2xvcjogIzAw MDAwMDsiPi4gPC9zcGFuPjwvZGl2Pjxicj48ZGl2PjxzcGFuIHN0eWxlPSJjb2xvcjogIzAwMDAw MDsiPlRoZSBLb2dpdG8gY29kZS1nZW5lcmF0aW9uIHByb2NlZHVyZSBlbGFib3JhdGVzIGFsbCB0 aGUgImtub3dsZWRnZSBhc3NldHMiIGluIGEgY29kZWJhc2UgYW5kIHByb2R1Y2VzIGVxdWl2YWxl bnQgSmF2YSBjb2RlIHRoYXQgcGx1Z3MgaW50byBvdXIgY29yZSBlbmdpbmVzIG9uIG9uZSBzaWRl LCBhbmQgaW50byB0aGUgUXVhcmt1cyBvciBTcHJpbmcgQVBJcyB0byBleHBvc2UgYXV0b21hdGlj YWxseSBnZW5lcmF0ZWQgUkVTVCBzZXJ2aWNlIGVuZHBvaW50cyBvbiB0aGUgb3RoZXIuIDwvc3Bh bj48L2Rpdj48YnI+PGRpdj48c3BhbiBzdHlsZT0iY29sb3I6ICMwMDAwMDA7Ij5MZXQncyBzZWUg bW9yZSBpbiBkZXRhaWwgaG93IHRoaXMgcHJvY2VkdXJlIHdvcmtzLjwvc3Bhbj48L2Rpdj48YnI+ PGRpdj48c3BhbiBzdHlsZT0iY29sb3I6ICM4MDAwMDA7Zm9udC13ZWlnaHQ6IGJvbGQ7Ij4jIyBT dGFnZWQgQ29tcGlsYXRpb24gaW4gS29naXRvPC9zcGFuPjwvZGl2Pjxicj48ZGl2PjxzcGFuIHN0 eWxlPSJjb2xvcjogIzAwMDAwMDsiPkluIEtvZ2l0bywgdGhlIGNvZGUtZ2VuZXJhdGlvbiBwcm9j ZWR1cmUgaXMgZGVzaWduZWQgaW4gPC9zcGFuPjxzcGFuIHN0eWxlPSJjb2xvcjogIzAwMDA4MDtm b250LXdlaWdodDogYm9sZDsiPioqc3RhZ2VzKio8L3NwYW4+PHNwYW4gc3R5bGU9ImNvbG9yOiAj MDAwMDAwOyI+LiA8L3NwYW4+PC9kaXY+PGJyPjxkaXY+PHNwYW4gc3R5bGU9ImNvbG9yOiAjMDAw MDAwOyI+ICAgICAgKy0tLS0tLS0tLS0tKyAgICAgICstLS0tLS0tLS0tLSsgICAgICArLS0tLS0t LS0tLS0rPC9zcGFuPjwvZGl2PjxkaXY+PHNwYW4gc3R5bGU9ImNvbG9yOiAjMDAwMDAwOyI+ICAg ICAgfCAgICAgICAgICAgfCAgICAgIHwgICAgICAgICAgIHwgICAgICB8ICAgICAgICAgICB8PC9z cGFuPjwvZGl2PjxkaXY+PHNwYW4gc3R5bGU9ImNvbG9yOiAjMDAwMDAwOyI+ICAgICAgfCBQcm9j ZXNzZXMgKy0tLS0tJmd0OysgICBSdWxlcyAgICstLS0tLSZndDsrIERlY2lzaW9ucyB8PC9zcGFu PjwvZGl2PjxkaXY+PHNwYW4gc3R5bGU9ImNvbG9yOiAjMDAwMDAwOyI+ICAgICAgfCAgICAgICAg ICAgfCAgICAgIHwgICAgICAgICAgIHwgICAgICB8ICAgICAgICAgICB8PC9zcGFuPjwvZGl2Pjxk aXY+PHNwYW4gc3R5bGU9ImNvbG9yOiAjMDAwMDAwOyI+ICAgICAgKy0tLS0tKy0tLS0tKyAgICAg ICstLS0tLSstLS0tLSsgICAgICArLS0tLS0rLS0tLS0rPC9zcGFuPjwvZGl2PjxkaXY+PHNwYW4g c3R5bGU9ImNvbG9yOiAjMDAwMDAwOyI+ICAgICAgICAgICAgfCAgICAgICAgICAgICAgICAgIHwg ICAgICAgICAgICAgICAgICB8PC9zcGFuPjwvZGl2PjxkaXY+PHNwYW4gc3R5bGU9ImNvbG9yOiAj MDAwMDAwOyI+ICAgICAgICAgICAgfCAgICAgICAgICAgICAgICAgIHwgICAgICAgICAgICAgICAg ICB8PC9zcGFuPjwvZGl2PjxkaXY+PHNwYW4gc3R5bGU9ImNvbG9yOiAjMDAwMDAwOyI+ICAgICAg ICstLS0tdi0tLS0rICAgICAgICArLS0tLXYtLS0tKyAgICAgICAgKy0tLS12LS0tLSs8L3NwYW4+ PC9kaXY+PGRpdj48c3BhbiBzdHlsZT0iY29sb3I6ICMwMDAwMDA7Ij4gICAgICAgfCAgICAgICAg IHwgICAgICAgIHwgICAgICAgICB8ICAgICAgICB8ICAgICAgICAgfDwvc3Bhbj48L2Rpdj48ZGl2 PjxzcGFuIHN0eWxlPSJjb2xvcjogIzAwMDAwMDsiPiAgICAgICB8IENvZGVnZW4gfCAgICAgICAg fCBDb2RlZ2VuIHwgICAgICAgIHwgQ29kZWdlbiB8PC9zcGFuPjwvZGl2PjxkaXY+PHNwYW4gc3R5 bGU9ImNvbG9yOiAjMDAwMDAwOyI+ICAgICAgIHwgICAgICAgICB8ICAgICAgICB8ICAgICAgICAg fCAgICAgICAgfCAgICAgICAgIHw8L3NwYW4+PC9kaXY+PGRpdj48c3BhbiBzdHlsZT0iY29sb3I6 ICMwMDAwMDA7Ij4gICAgICAgKy0tLS0tLS0tLSsgICAgICAgICstLS0tLS0tLS0rICAgICAgICAr LS0tLS0tLS0tKzwvc3Bhbj48L2Rpdj48YnI+PGJyPjxkaXY+PHNwYW4gc3R5bGU9ImNvbG9yOiAj MDAwMDAwOyI+Rmlyc3QsIDwvc3Bhbj48c3BhbiBzdHlsZT0iY29sb3I6ICMwMDAwODA7Zm9udC13 ZWlnaHQ6IGJvbGQ7Ij4qKnByb2Nlc3NlcyoqPC9zcGFuPjxzcGFuIHN0eWxlPSJjb2xvcjogIzAw MDAwMDsiPiAoQlBNTiBmaWxlcykgYXJlIGFuYWx5emVkLCB0aGVuIDwvc3Bhbj48c3BhbiBzdHls ZT0iY29sb3I6ICMwMDAwODA7Zm9udC13ZWlnaHQ6IGJvbGQ7Ij4qKnJ1bGVzKio8L3NwYW4+PHNw YW4gc3R5bGU9ImNvbG9yOiAjMDAwMDAwOyI+IChEUkxzKSwgdGhlbiA8L3NwYW4+PHNwYW4gc3R5 bGU9ImNvbG9yOiAjMDAwMDgwO2ZvbnQtd2VpZ2h0OiBib2xkOyI+KipkZWNpc2lvbnMqKjwvc3Bh bj48c3BhbiBzdHlsZT0iY29sb3I6ICMwMDAwMDA7Ij4gKERNTnMpLiBFYWNoIHN0YWdlLCBhcyBh IHJlc3VsdCwgZ2VuZXJhdGVzIEphdmEgc291cmNlIGNvZGU7IGNvbXBpbGF0aW9uIGlzIGRlbGVn YXRlZCB0byB0aGUgSmF2YSBjb21waWxlci4gSW4gbW9kZXJuIHBhcmxhbmNlLCB0aGlzIHdvdWxk IGJlIGNhbGxlZCBhIDwvc3Bhbj48c3BhbiBzdHlsZT0iY29sb3I6ICMwMDAwMDA7Zm9udC1zdHls ZTogaXRhbGljOyI+XyJ0cmFuc3BpbGVyIl88L3NwYW4+PHNwYW4gc3R5bGU9ImNvbG9yOiAjMDAw MDAwOyI+OyBhIHRlcm0gdGhhdCBJIGRlc3Bpc2UsIGJlY2F1c2UgaXQgbWFrZXMgaXQgc291bmQg bGlrZSBjb21waWxlcnMgZG8gbm90IGp1c3QgZ2VuZXJhdGUgY29kZSBidXQgZG8gc29tZSBraW5k IG9mIG1hZ2ljIG11bWJvLWp1bWJvLiBCdXQgdGhhdCdzIGFub3RoZXIgc3RvcnkuIFdoYXRldmVy IHlvdSB3YW50IHRvIGNhbGwgaXQsIG91ciBjdXJyZW50IGFyY2hpdGVjdHVyZSBvZiB0aGlzIHBy b2NlZHVyZSBpcyByaWdpZCwgYW5kIGRvZXMgbm90IGFsbG93IGZvciBleHRlbnNpb248L3NwYW4+ PC9kaXY+PGJyPjxkaXY+PHNwYW4gc3R5bGU9ImNvbG9yOiAjMDAwMDAwOyI+SW4gZmFjdCwgYWxi ZWl0IHdlIGFyZSBwcm9jZXNzaW5nIGVhY2ggdHlwZSBvZiBhc3NldCBpbiBhIDwvc3Bhbj48c3Bh biBzdHlsZT0iY29sb3I6ICMwMDAwMDA7Zm9udC1zdHlsZTogaXRhbGljOyI+X3NlcGFyYXRlIHN0 YWdlXzwvc3Bhbj48c3BhbiBzdHlsZT0iY29sb3I6ICMwMDAwMDA7Ij4sIGVhY2ggc3RhZ2UgaXMg ZWZmZWN0aXZlbHkgYSA8L3NwYW4+PHNwYW4gc3R5bGU9ImNvbG9yOiAjMDAwMDgwO2ZvbnQtd2Vp Z2h0OiBib2xkOyI+KipzaW5nbGUtcGFzcyBjb21waWxlcioqPC9zcGFuPjxzcGFuIHN0eWxlPSJj b2xvcjogIzAwMDAwMDsiPiwgYmVjYXVzZSBlYWNoIGl0IGFsd2F5cyB0ZXJtaW5hdGVzIHdpdGgg dGhlIGdlbmVyYXRpb24gb2YgdGhlIGNvbXBpbGF0aW9uIHRhcmdldC4gVGhpcyBpcyB0aGUgcmVh c29uIHdoeSBpdCBpcyBnZW5lcmFsbHkgYmV0dGVyIHRvIDwvc3Bhbj48c3BhbiBzdHlsZT0iY29s b3I6ICMwMDAwODA7Zm9udC13ZWlnaHQ6IGJvbGQ7Ij4qKmJyZWFrIGRvd24gY29tcGlsYXRpb24g aW50byBtb3JlIHBhc3NlcyoqPC9zcGFuPjxzcGFuIHN0eWxlPSJjb2xvcjogIzAwMDAwMDsiPi4g RWFjaCBjb21waWxhdGlvbiBwYXNzIHVzdWFsbHkgcHJvZHVjZXMgd2hhdCBpcyBjYWxsZWQgYW4g PC9zcGFuPjxzcGFuIHN0eWxlPSJjb2xvcjogIzAwMDA4MDtmb250LXdlaWdodDogYm9sZDsiPioq aW50ZXJtZWRpYXRlIHJlcHJlc2VudGF0aW9uKio8L3NwYW4+PHNwYW4gc3R5bGU9ImNvbG9yOiAj MDAwMDAwOyI+OyB0aGUgaW5wdXQgdG8gb25lIHN0YWdlIGlzIHRoZSBvdXRwdXQgb2YgdGhlIHBy ZXZpb3VzLCBhbmQgc28gb24gdXAgdG8gdGhlIGZpbmFsIHN0YWdlLCB3aGVyZSB0YXJnZXQgY29k ZSBpcyBhY3R1YWxseSBwcm9kdWNlZC48L3NwYW4+PC9kaXY+PGJyPjxkaXY+PHNwYW4gc3R5bGU9 ImNvbG9yOiAjODAwMDAwO2ZvbnQtd2VpZ2h0OiBib2xkOyI+IyMjIENvbXBpbGVycyBhbmQgQ29t cGlsYXRpb24gUGhhc2VzPC9zcGFuPjwvZGl2Pjxicj48ZGl2PjxzcGFuIHN0eWxlPSJjb2xvcjog IzAwMDAwMDsiPkluIGEgdHJhZGl0aW9uYWwgY29tcGlsZXIsIHVzdWFsbHksIG9uZSBvZiB0aGUg Zmlyc3Qgc3RhZ2VzIGlzIDwvc3Bhbj48c3BhbiBzdHlsZT0iY29sb3I6ICMwMDAwODA7Zm9udC13 ZWlnaHQ6IGJvbGQ7Ij4qKnBhcnNpbmcqKjwvc3Bhbj48c3BhbiBzdHlsZT0iY29sb3I6ICMwMDAw MDA7Ij4gdGhlIGlucHV0IHNvdXJjZSBjb2RlIGFuZCB0cmFuc2Zvcm1pbmcgaXQgaW50byBhbiBp bnRlcm5hbCB0cmVlIHJlcHJlc2VudGF0aW9uICh0aGUgPC9zcGFuPjxzcGFuIHN0eWxlPSJjb2xv cjogIzAwMDAwMDtmb250LXN0eWxlOiBpdGFsaWM7Ij4qQWJzdHJhY3QgU3ludGF4IFRyZWUqPC9z cGFuPjxzcGFuIHN0eWxlPSJjb2xvcjogIzAwMDAwMDsiPik7IHRoZW4gdXN1YWxseSBpcyB0aGUg PC9zcGFuPjxzcGFuIHN0eWxlPSJjb2xvcjogIzAwMDA4MDtmb250LXdlaWdodDogYm9sZDsiPioq bmFtZSByZXNvbHV0aW9uKio8L3NwYW4+PHNwYW4gc3R5bGU9ImNvbG9yOiAjMDAwMDAwOyI+IHBo YXNlLCB3aGVyZSB0aGUgbmFtZXMgb2YgdGhlIHZhbHVlcyBhbmQgc3ltYm9scyB0aGF0IGFyZSB1 c2VkIHRocm91Z2hvdXQgdGhlIHByb2dyYW0gYXJlIHJlc29sdmVkOyB0aGVuIHRoZSA8L3NwYW4+ PHNwYW4gc3R5bGU9ImNvbG9yOiAjMDAwMDgwO2ZvbnQtd2VpZ2h0OiBib2xkOyI+Kip0eXBlLWNo ZWNraW5nIHBoYXNlKio8L3NwYW4+PHNwYW4gc3R5bGU9ImNvbG9yOiAjMDAwMDAwOyI+IHZlcmlm aWVzIGFuZCB2YWxpZGF0ZXMgdGhlIGNvcnJlY3RuZXNzIG9mIHRoZSBwcm9ncmFtOyBmaW5hbGx5 IDwvc3Bhbj48c3BhbiBzdHlsZT0iY29sb3I6ICMwMDAwODA7Zm9udC13ZWlnaHQ6IGJvbGQ7Ij4q KmNvZGUqKjwvc3Bhbj48c3BhbiBzdHlsZT0iY29sb3I6ICMwMDAwMDA7Ij4gaXMgYWN0dWFsbHkg PC9zcGFuPjxzcGFuIHN0eWxlPSJjb2xvcjogIzAwMDA4MDtmb250LXdlaWdodDogYm9sZDsiPioq Z2VuZXJhdGVkKio8L3NwYW4+PHNwYW4gc3R5bGU9ImNvbG9yOiAjMDAwMDAwOyI+Ljwvc3Bhbj48 L2Rpdj48YnI+PGRpdj48c3BhbiBzdHlsZT0iY29sb3I6ICMwMDAwMDA7Ij5JbiBLb2dpdG8sIHdl IDwvc3Bhbj48c3BhbiBzdHlsZT0iY29sb3I6ICMwMDAwODA7Zm9udC13ZWlnaHQ6IGJvbGQ7Ij4q KnBhcnNlKio8L3NwYW4+PHNwYW4gc3R5bGU9ImNvbG9yOiAjMDAwMDAwOyI+IGtub3dsZWRnZSBh c3NldHMsIHRoZW4gd2UgYXNzb2NpYXRlIDwvc3Bhbj48c3BhbiBzdHlsZT0iY29sb3I6ICMwMDAw ODA7Zm9udC13ZWlnaHQ6IGJvbGQ7Ij4qKm5hbWVzKio8L3NwYW4+PHNwYW4gc3R5bGU9ImNvbG9y OiAjMDAwMDAwOyI+IHRvIGVhY2ggYXNzZXRzLCBhbmQgd2UgcmVzb2x2ZSB0aGVpciBpbnRlcm5h bCBzdHJ1Y3R1cmUsIHdoaWNoIG1heSA8L3NwYW4+PHNwYW4gc3R5bGU9ImNvbG9yOiAjMDAwMDgw O2ZvbnQtd2VpZ2h0OiBib2xkOyI+Kipjcm9zcy1yZWZlcmVuY2UqKjwvc3Bhbj48c3BhbiBzdHls ZT0iY29sb3I6ICMwMDAwMDA7Ij4gb3RoZXIgZXhpc3RpbmcgYXNzZXRzLiA8L3NwYW4+PHNwYW4g c3R5bGU9ImNvbG9yOiAjMDAwMDgwO2ZvbnQtd2VpZ2h0OiBib2xkOyI+KipUeXBlLWNoZWNraW5n IG91ciBhc3NldHMgbWVhbnMgdmFsaWRhdGluZyoqPC9zcGFuPjxzcGFuIHN0eWxlPSJjb2xvcjog IzAwMDAwMDsiPiB0aGUgbW9kZWxzIGFjY29yZGluZyB0byBzcGVjaWZpY2F0aW9ucyBhbmQgdmVy aWZ5aW5nIHRoZXNlIGNyb3NzLXJlZmVyZW5jZXMuIEZvciBpbnN0YW5jZSwgYSBCUE1OIGZpbGUg bWF5IHJlZmVyZW5jZSBhIFJ1bGUgVW5pdCBkZWZpbml0aW9uIGFuZCBhIHNlcnZpY2UgaW1wbGVt ZW50YXRpb24gd3JpdHRlbiBpbiBKYXZhLiA8L3NwYW4+PC9kaXY+PGJyPjxkaXY+PHNwYW4gc3R5 bGU9ImNvbG9yOiAjODAwMDAwO2ZvbnQtd2VpZ2h0OiBib2xkOyI+IyMjIENvbXBpbGVycyBhbmQg TWluaS1QaGFzZXM8L3NwYW4+PC9kaXY+PGJyPjxkaXY+PHNwYW4gc3R5bGU9ImNvbG9yOiAjMDAw MDAwOyI+U28gZmFyLCBvdXIgY29kZS1nZW5lcmF0aW9uIHByb2NlZHVyZSBoYXMgYmVlbiBwcmV0 dHkgc2ltcGxpc3RpYzogd2UgZ2VuZXJhdGVkIGNvZGUgcmVnYXJkbGVzcyBvZiBwb3RlbnRpYWwg ZXJyb3JzLCBkZWxlZ2F0aW5nIGNvbXBpbGF0aW9uIGVycm9ycyB0byB0aGUgZG93bnN0cmVhbSBK YXZhIGNvbXBpbGVyOyB3b3JzZSwgc29tZXRpbWVzIHRoZXkgd291bGQgYmUgY2F1Z2h0IGxhdGVy IGF0IHJ1bi10aW1lISBUaGlzIGluIGdlbmVyYWwgd29ya3MsIGJ1dCBpdCBlaXRoZXIgcHJvZHVj ZXMgcHJldHR5IG9ic2N1cmUgY29tcGlsYXRpb24gZXJyb3JzLCBvciBpdCBtb3ZlcyB2YWxpZGF0 aW9uIHRvbyBsYXRlIGluIHRoZSBwaXBlbGluZTogd2hpY2ggaXMgc29tZXRoaW5nIHRoYXQgd2Ug d2FudGVkIHRvIGF2b2lkIGluIHRoZSBmaXJzdCBwbGFjZS4gV2Ugd2FudCB0byA8L3NwYW4+PHNw YW4gc3R5bGU9ImNvbG9yOiAjMDAwMDgwO2ZvbnQtd2VpZ2h0OiBib2xkOyI+KipjYXRjaCBlcnJv cnMgZWFybHkqKjwvc3Bhbj48c3BhbiBzdHlsZT0iY29sb3I6ICMwMDAwMDA7Ij4gYW5kIG9ubHkg PC9zcGFuPjxzcGFuIHN0eWxlPSJjb2xvcjogIzAwMDA4MDtmb250LXdlaWdodDogYm9sZDsiPioq Z2VuZXJhdGUgdmFsaWQgY29kZSoqPC9zcGFuPjxzcGFuIHN0eWxlPSJjb2xvcjogIzAwMDAwMDsi Pi48L3NwYW4+PC9kaXY+PGJyPjxkaXY+PHNwYW4gc3R5bGU9ImNvbG9yOiAjMDAwMDAwOyI+Qnkg cmVmYWN0b3Jpbmcgb3VyIGNvbXBpbGF0aW9uIHBoYXNlcyB0byBhIHN0YWdlZCwgbW9kdWxhciBj b21waWxhdGlvbiBhcmNoaXRlY3R1cmUgd2Ugd2lsbCBiZSBhYmxlIHRvIGNhdGNoIHJlc29sdXRp b24gYW5kIHZhbGlkYXRpb24gZXJyb3JzIGVhcmx5IGFuZCBwcmVzZW50IHRoZW0gdG8gdXNlcnMg aW4gYSBtZWFuaW5nZnVsIHdheTogb25seSB3aGVuIHRoZSB2YWxpZGF0aW9uIHBoYXNlIHdpbGwg YmUgY29tcGxldGVkIHN1Y2Nlc3NmdWxseSwgdGhlbiB3ZSB3aWxsIGFjdHVhbGx5IGdlbmVyYXRl IGNvZGUuIEJ1dCB3ZSBhbHNvIHdhbnQgb3VyIHN0YWdlcyB0byBiZSBzbWFsbGVyLCBzbyB0aGF0 IGl0IGlzIGVhc2llciB0byA8L3NwYW4+PHNwYW4gc3R5bGU9ImNvbG9yOiAjMDAwMDgwO2ZvbnQt d2VpZ2h0OiBib2xkOyI+KiphZGQgbW9yZSBjb21waWxhdGlvbiBzdGFnZXMqKjwvc3Bhbj48c3Bh biBzdHlsZT0iY29sb3I6ICMwMDAwMDA7Ij4gYXQgZGlmZmVyZW50IHBvaW50cyBpbiB0aGUgcGlw ZWxpbmUuPC9zcGFuPjwvZGl2Pjxicj48ZGl2PjxzcGFuIHN0eWxlPSJjb2xvcjogIzAwMDAwMDsi PiAgICBQcm9jZXNzZXMsIFJ1bGVzLCBEZWNpc2lvbnM6PC9zcGFuPjwvZGl2Pjxicj48ZGl2Pjxz cGFuIHN0eWxlPSJjb2xvcjogIzAwMDAwMDsiPiAgICArLS0tLS0tLS0tLS0tLS0tLS0rICAgICAg Ky0tLS0tLS0tLS0tLS0tLS0tLSsgICAgICArLS0tLS0tLS0tLS0tLS0tLS0tLSsgICAgICArLS0t LS0tLS0tLS0tLS0tLS0rPC9zcGFuPjwvZGl2PjxkaXY+PHNwYW4gc3R5bGU9ImNvbG9yOiAjMDAw MDAwOyI+ICAgIHwgICAgICAgICAgICAgICAgIHwgICAgICB8ICAgICAgICAgICAgICAgICAgfCAg ICAgIHwgICAgICAgICAgICAgICAgICAgfCAgICAgIHwgICAgICAgICAgICAgICAgIHw8L3NwYW4+ PC9kaXY+PGRpdj48c3BhbiBzdHlsZT0iY29sb3I6ICMwMDAwMDA7Ij4gICAgfCBOYW1lIFJlc29s dXRpb24gKy0tLS0tJmd0OysgTW9kZWwgVmFsaWRhdGlvbiArLS0tLS0mZ3Q7KyBDcm9zcy1SZWZl cmVuY2luZyArLS0tLS0mZ3Q7KyBDb2RlLUdlbmVyYXRpb24gfDwvc3Bhbj48L2Rpdj48ZGl2Pjxz cGFuIHN0eWxlPSJjb2xvcjogIzAwMDAwMDsiPiAgICB8ICAgICAgICAgICAgICAgICB8ICAgICAg fCAgICAgICAgICAgICAgICAgIHwgICAgICB8ICAgICAgICAgICAgICAgICAgIHwgICAgICB8ICAg ICAgICAgICAgICAgICB8PC9zcGFuPjwvZGl2PjxkaXY+PHNwYW4gc3R5bGU9ImNvbG9yOiAjMDAw MDAwOyI+ICAgICstLS0tLS0tLS0tLS0tLS0tLSsgICAgICArLS0tLS0tLS0tLS0tLS0tLS0tKyAg ICAgICstLS0tLS0tLS0tLS0tLS0tLS0tKyAgICAgICstLS0tLS0tLS0tLS0tLS0tLSs8L3NwYW4+ PC9kaXY+PGJyPjxicj48ZGl2PjxzcGFuIHN0eWxlPSJjb2xvcjogIzAwMDAwMDsiPkZvciBpbnN0 YW5jZSwgc3VwcG9zZSB5b3Ugd2FudCB0byBzeW50aGVzaXplIHNvbWUgZWxlbWVudHMgKGUuZy4g ZGF0YSBtb2RlbHMpIHRoYXQgYXJlIGluZmVycmVkIGZyb20gdGhlIHN0cnVjdHVyZSBvZiBhIHBy b2Nlc3MuIEluIG91ciBjdXJyZW50IGFyY2hpdGVjdHVyZSwgdGhlIG9ubHkgd2F5IHRvIHByb2R1 Y2UgYWRkaXRpb25hbCBhc3NldHMgd291bGQgYmUgdG8gcGF0Y2ggdGhlIGV4aXN0aW5nIGNvZGUu IEJ5IGRlLWNvbXBvc2luZyB0aGUgcGhhc2VzIGFzIHNob3duIGFib3ZlLCB5b3Ugd291bGQgYmUg YWJsZSB0byA8L3NwYW4+PHNwYW4gc3R5bGU9ImNvbG9yOiAjMDAwMDgwO2ZvbnQtd2VpZ2h0OiBi b2xkOyI+KipwbHVnIHlvdXIgYWRkaXRpb25hbCA8L3NwYW4+PHNwYW4gc3R5bGU9ImNvbG9yOiAj MDAwMDgwO2ZvbnQtd2VpZ2h0OiBib2xkOyI+Wzwvc3Bhbj48c3BhbiBzdHlsZT0iY29sb3I6ICNh MzE1MTU7Zm9udC13ZWlnaHQ6IGJvbGQ7Ij5taW5pLXBoYXNlPC9zcGFuPjxzcGFuIHN0eWxlPSJj b2xvcjogIzAwMDA4MDtmb250LXdlaWdodDogYm9sZDsiPl08L3NwYW4+PHNwYW4gc3R5bGU9ImNv bG9yOiAjMDAwMDgwO2ZvbnQtd2VpZ2h0OiBib2xkOyI+W25hbm9wYXNzXSoqPC9zcGFuPjxzcGFu IHN0eWxlPSJjb2xvcjogIzAwMDAwMDsiPiByaWdodCBhZnRlciAiTW9kZWwgVmFsaWRhdGlvbiIs IHNvIHRoYXQgeW91IGNhbiBiZSBzdXJlIHRoYXQgYWxsIHRoZSBuYW1lcyBoYXZlIGJlZW4gcmVz b2x2ZWQsIGFuZCB0aGF0IG9ubHkgdmFsaWQgbW9kZWxzIHdpbGwgYmUgcHJvY2Vzc2VkOiB5b3Ug d2lsbCBwcm9kdWNlIGFuIGludGVybWVkaWF0ZSByZXByZXNlbnRhdGlvbiBmb3IgdGhlIGRhdGEg bW9kZWwgdGhhdCB5b3Ugd2FudCB0byBzeW50aGVzaXplLCBhbmQgbWFrZSBpdCBhdmFpbGFibGUg ZHVyaW5nIHRoZSAiQ3Jvc3MtUmVmZXJlbmNpbmciIHBoYXNlLjwvc3Bhbj48L2Rpdj48YnI+PGRp dj48c3BhbiBzdHlsZT0iY29sb3I6ICM4MDAwMDA7Zm9udC13ZWlnaHQ6IGJvbGQ7Ij4jIyBQcmUt UHJvY2Vzc2luZyBBc3NldHMgdnMuIENvZGUgU2NhZmZvbGRpbmcuPC9zcGFuPjwvZGl2Pjxicj48 ZGl2PjxzcGFuIHN0eWxlPSJjb2xvcjogIzAwMDAwMDsiPkFzIGJyaWVmbHkgbWVudGlvbmVkIGlu IHRoZSBpbnRyb2R1Y3Rpb24sIGluIG91ciBjdXJyZW50IGFyY2hpdGVjdHVyZSB3ZSBhcmUgYWxz byBjb25mbGF0aW5nIGNvZGUtZ2VuZXJhdGlvbiBmb3IgdHdvIHZlcnkgZGlmZmVyZW50IHB1cnBv c2VzLjwvc3Bhbj48L2Rpdj48YnI+PGRpdj48c3BhbiBzdHlsZT0iY29sb3I6ICMwMDAwMDA7Ij5U aGUgPC9zcGFuPjxzcGFuIHN0eWxlPSJjb2xvcjogIzAwMDA4MDtmb250LXdlaWdodDogYm9sZDsi PioqZmlyc3QqKjwvc3Bhbj48c3BhbiBzdHlsZT0iY29sb3I6ICMwMDAwMDA7Ij4gaXMgdG8gPC9z cGFuPjxzcGFuIHN0eWxlPSJjb2xvcjogIzAwMDA4MDtmb250LXdlaWdodDogYm9sZDsiPioqcHJl LXByb2Nlc3MqKjwvc3Bhbj48c3BhbiBzdHlsZT0iY29sb3I6ICMwMDAwMDA7Ij4gYXNzZXRzIHRv IGdlbmVyYXRlIHRoZWlyIDwvc3Bhbj48c3BhbiBzdHlsZT0iY29sb3I6ICMwMDAwODA7Zm9udC13 ZWlnaHQ6IGJvbGQ7Ij4qKnN0YW5kLWFsb25lIHJ1bi10aW1lIHJlcHJlc2VudGF0aW9uKio8L3Nw YW4+PHNwYW4gc3R5bGU9ImNvbG9yOiAjMDAwMDAwOyI+OiB0aGUgZ29hbCBpcyBib3RoIHRvIHJl ZHVjZSBydW4tdGltZSBwcm9jZXNzaW5nIGFuZCBzdXBwb3J0IG5hdGl2ZSBjb21waWxhdGlvbi4g VGhlIG91dHB1dCBvZiB0aGlzIGNvZGUtZ2VuZXJhdGlvbiBwcm9jZWR1cmUgYXJlIG9iamVjdHMg dGhhdCBpbnRlcmZhY2UgZGlyZWN0bHkgd2l0aCB0aGUgaW50ZXJuYWwgcHJvZ3JhbW1hdGljIEFQ SXMgb2Ygb3VyIGVuZ2luZXMuIFRoaXMgcHJvZ3JhbW1hdGljIEFQSSwgaW4gS29naXRvLCBpcyBj dXJyZW50bHkgY29uc2lkZXJlZCBhbiBpbXBsZW1lbnRhdGlvbiBkZXRhaWwsIG5vdCBzdXBwb3Nl ZCB0byBiZSBjb25zdW1lZCBieSBlbmQtdXNlcnMuIFRoZSByZWFzb24gaXMgdGhhdCB0aGlzIEFQ SSBpcyBzdGlsbCB1bnN0YWJsZTogd2Ugd2FudCB0byBtYWtlIHN1cmUgdG8gZ2V0IGl0IHJpZ2h0 LCBiZWZvcmUgbWFraW5nIGl0IHB1YmxpYy4gTm93LCBmb3IgdGhlIHNha2Ugb2YgZXhwbGFuYXRp b24sIGNvbnNpZGVyIGEgQlBNTiBwcm9jZXNzIGRlZmluaXRpb246IHRoaXMgaXMgY29tcGlsZWQg aW50byBhIGNsYXNzIHRoYXQgaW1wbGVtZW50IHRoZSA8L3NwYW4+PHNwYW4gc3R5bGU9ImNvbG9y OiAjODAwMDAwOyI+YFByb2Nlc3MmbHQ7VCZndDtgPC9zcGFuPjxzcGFuIHN0eWxlPSJjb2xvcjog IzAwMDAwMDsiPiBpbnRlcmZhY2Ugb2YgdGhlIHByb2dyYW1tYXRpYyBBUEkuIEJ5IGluc3RhbnRp YXRpbmcgdGhpcyBjbGFzcywgeW91IGdldCBhbiBleGFjdCAxOjEgcmVwcmVzZW50YXRpb24gb2Yg dGhlIHByb2Nlc3MgZGVmaW5pdGlvbiwgbWludXMgcGFyc2luZyBhbmQgcHJlbGltaW5hcnkgYW5h bHlzaXMuPC9zcGFuPjwvZGl2Pjxicj48ZGl2PjxzcGFuIHN0eWxlPSJjb2xvcjogIzAwMDAwMDsi PlRoZSA8L3NwYW4+PHNwYW4gc3R5bGU9ImNvbG9yOiAjMDAwMDgwO2ZvbnQtd2VpZ2h0OiBib2xk OyI+KipzZWNvbmQqKjwvc3Bhbj48c3BhbiBzdHlsZT0iY29sb3I6ICMwMDAwMDA7Ij4gcHVycG9z ZSBvZiBjb2RlLWdlbmVyYXRpb24gaXMgaW1wbGVtZW50ZWQgYXMgYSA8L3NwYW4+PHNwYW4gc3R5 bGU9ImNvbG9yOiAjMDAwMDgwO2ZvbnQtd2VpZ2h0OiBib2xkOyI+KipsYXllcioqPC9zcGFuPjxz cGFuIHN0eWxlPSJjb2xvcjogIzAwMDAwMDsiPiBvbiB0b3Agb2YgdGhlc2UgcnVuLXRpbWUgcmVw cmVzZW50YXRpb25zOyBoZXJlIHdlIGV4cG9zZXMgY2FsbHMgaW50byB0aGUgcHJvZ3JhbW1hdGlj IEFQSSBhcyA8L3NwYW4+PHNwYW4gc3R5bGU9ImNvbG9yOiAjMDAwMDgwO2ZvbnQtd2VpZ2h0OiBi b2xkOyI+KipSRVNUIGVuZHBvaW50cyoqPC9zcGFuPjxzcGFuIHN0eWxlPSJjb2xvcjogIzAwMDAw MDsiPi4gRm9yIGV4YW1wbGUsIGNvbnNpZGVyIGEgcHJvY2VzcyBjYWxsZWQgPC9zcGFuPjxzcGFu IHN0eWxlPSJjb2xvcjogIzgwMDAwMDsiPmBNeVByb2Nlc3NgPC9zcGFuPjxzcGFuIHN0eWxlPSJj b2xvcjogIzAwMDAwMDsiPjsgdGhlIFJFU1QgZW5kcG9pbnRzIHdlIGdlbmVyYXRlIGV4cG9zZSBS RVNUIEFQSXMgdG8gc3RhcnQsIGV4ZWN1dGUgYW5kIHRlcm1pbmF0ZSBhbiBpbnN0YW5jZSBvZiB0 aGF0IHByb2Nlc3MuIFlvdSBjYW4gaW1hZ2luZSB0aGF0IGNvZGUgdG8gbG9vayBhIGJ1dCBsaWtl IHRoaXM6PC9zcGFuPjwvZGl2Pjxicj48ZGl2PjxzcGFuIHN0eWxlPSJjb2xvcjogIzAwMDAwMDsi PmBgYGphdmE8L3NwYW4+PC9kaXY+PGRpdj48c3BhbiBzdHlsZT0iY29sb3I6ICMwMDAwMDA7Ij5A PC9zcGFuPjxzcGFuIHN0eWxlPSJjb2xvcjogIzI2N2Y5OTsiPlBhdGg8L3NwYW4+PHNwYW4gc3R5 bGU9ImNvbG9yOiAjMDAwMDAwOyI+KDwvc3Bhbj48c3BhbiBzdHlsZT0iY29sb3I6ICNhMzE1MTU7 Ij4iL015UHJvY2VzcyI8L3NwYW4+PHNwYW4gc3R5bGU9ImNvbG9yOiAjMDAwMDAwOyI+KTwvc3Bh bj48L2Rpdj48ZGl2PjxzcGFuIHN0eWxlPSJjb2xvcjogIzAwMDBmZjsiPnB1YmxpYzwvc3Bhbj48 c3BhbiBzdHlsZT0iY29sb3I6ICMwMDAwMDA7Ij4gPC9zcGFuPjxzcGFuIHN0eWxlPSJjb2xvcjog IzAwMDBmZjsiPmNsYXNzPC9zcGFuPjxzcGFuIHN0eWxlPSJjb2xvcjogIzAwMDAwMDsiPiA8L3Nw YW4+PHNwYW4gc3R5bGU9ImNvbG9yOiAjMjY3Zjk5OyI+TXlQcm9jZXNzUmVzb3VyY2U8L3NwYW4+ PHNwYW4gc3R5bGU9ImNvbG9yOiAjMDAwMDAwOyI+IHs8L3NwYW4+PC9kaXY+PGRpdj48c3BhbiBz dHlsZT0iY29sb3I6ICMwMDAwMDA7Ij4gIDwvc3Bhbj48L2Rpdj48ZGl2PjxzcGFuIHN0eWxlPSJj b2xvcjogIzAwMDAwMDsiPiAgQDwvc3Bhbj48c3BhbiBzdHlsZT0iY29sb3I6ICMyNjdmOTk7Ij5J bmplY3Q8L3NwYW4+PC9kaXY+PGRpdj48c3BhbiBzdHlsZT0iY29sb3I6ICMwMDAwMDA7Ij4gIDwv c3Bhbj48c3BhbiBzdHlsZT0iY29sb3I6ICMyNjdmOTk7Ij5Qcm9jZXNzPC9zcGFuPjxzcGFuIHN0 eWxlPSJjb2xvcjogIzAwMDAwMDsiPiZsdDs8L3NwYW4+PHNwYW4gc3R5bGU9ImNvbG9yOiAjMjY3 Zjk5OyI+TXlQcm9jZXNzPC9zcGFuPjxzcGFuIHN0eWxlPSJjb2xvcjogIzAwMDAwMDsiPiZndDsg PC9zcGFuPjxzcGFuIHN0eWxlPSJjb2xvcjogIzAwMTA4MDsiPnA8L3NwYW4+PHNwYW4gc3R5bGU9 ImNvbG9yOiAjMDAwMDAwOyI+Ozwvc3Bhbj48L2Rpdj48YnI+PGRpdj48c3BhbiBzdHlsZT0iY29s b3I6ICMwMDAwMDA7Ij4gIEA8L3NwYW4+PHNwYW4gc3R5bGU9ImNvbG9yOiAjMjY3Zjk5OyI+UE9T VDwvc3Bhbj48L2Rpdj48ZGl2PjxzcGFuIHN0eWxlPSJjb2xvcjogIzAwMDAwMDsiPiAgPC9zcGFu PjxzcGFuIHN0eWxlPSJjb2xvcjogIzAwMDBmZjsiPnB1YmxpYzwvc3Bhbj48c3BhbiBzdHlsZT0i Y29sb3I6ICMwMDAwMDA7Ij4gPC9zcGFuPjxzcGFuIHN0eWxlPSJjb2xvcjogIzI2N2Y5OTsiPk15 UHJvY2Vzczwvc3Bhbj48c3BhbiBzdHlsZT0iY29sb3I6ICMwMDAwMDA7Ij4gPC9zcGFuPjxzcGFu IHN0eWxlPSJjb2xvcjogIzc5NWUyNjsiPnN0YXJ0PC9zcGFuPjxzcGFuIHN0eWxlPSJjb2xvcjog IzAwMDAwMDsiPig8L3NwYW4+PHNwYW4gc3R5bGU9ImNvbG9yOiAjMjY3Zjk5OyI+TXlQcm9jZXNz PC9zcGFuPjxzcGFuIHN0eWxlPSJjb2xvcjogIzAwMDAwMDsiPiA8L3NwYW4+PHNwYW4gc3R5bGU9 ImNvbG9yOiAjMDAxMDgwOyI+ZGF0YTwvc3Bhbj48c3BhbiBzdHlsZT0iY29sb3I6ICMwMDAwMDA7 Ij4pIHs8L3NwYW4+PC9kaXY+PGRpdj48c3BhbiBzdHlsZT0iY29sb3I6ICMwMDAwMDA7Ij4gICAg PC9zcGFuPjxzcGFuIHN0eWxlPSJjb2xvcjogI2FmMDBkYjsiPnJldHVybjwvc3Bhbj48c3BhbiBz dHlsZT0iY29sb3I6ICMwMDAwMDA7Ij4gPC9zcGFuPjxzcGFuIHN0eWxlPSJjb2xvcjogIzAwMTA4 MDsiPnA8L3NwYW4+PHNwYW4gc3R5bGU9ImNvbG9yOiAjMDAwMDAwOyI+Ljwvc3Bhbj48c3BhbiBz dHlsZT0iY29sb3I6ICM3OTVlMjY7Ij5jcmVhdGU8L3NwYW4+PHNwYW4gc3R5bGU9ImNvbG9yOiAj MDAwMDAwOyI+KGRhdGEpLjwvc3Bhbj48c3BhbiBzdHlsZT0iY29sb3I6ICM3OTVlMjY7Ij5zdGFy dDwvc3Bhbj48c3BhbiBzdHlsZT0iY29sb3I6ICMwMDAwMDA7Ij4oKTs8L3NwYW4+PC9kaXY+PGRp dj48c3BhbiBzdHlsZT0iY29sb3I6ICMwMDAwMDA7Ij4gIH08L3NwYW4+PC9kaXY+PGJyPjxkaXY+ PHNwYW4gc3R5bGU9ImNvbG9yOiAjMDAwMDAwOyI+ICBAPC9zcGFuPjxzcGFuIHN0eWxlPSJjb2xv cjogIzI2N2Y5OTsiPkRFTEVURTwvc3Bhbj48c3BhbiBzdHlsZT0iY29sb3I6ICMwMDAwMDA7Ij4o PC9zcGFuPjxzcGFuIHN0eWxlPSJjb2xvcjogI2EzMTUxNTsiPiIve2lkfSI8L3NwYW4+PHNwYW4g c3R5bGU9ImNvbG9yOiAjMDAwMDAwOyI+KTwvc3Bhbj48L2Rpdj48ZGl2PjxzcGFuIHN0eWxlPSJj b2xvcjogIzAwMDAwMDsiPiAgPC9zcGFuPjxzcGFuIHN0eWxlPSJjb2xvcjogIzAwMDBmZjsiPnB1 YmxpYzwvc3Bhbj48c3BhbiBzdHlsZT0iY29sb3I6ICMwMDAwMDA7Ij4gPC9zcGFuPjxzcGFuIHN0 eWxlPSJjb2xvcjogIzI2N2Y5OTsiPk15UHJvY2Vzczwvc3Bhbj48c3BhbiBzdHlsZT0iY29sb3I6 ICMwMDAwMDA7Ij4gPC9zcGFuPjxzcGFuIHN0eWxlPSJjb2xvcjogIzc5NWUyNjsiPmFib3J0PC9z cGFuPjxzcGFuIHN0eWxlPSJjb2xvcjogIzAwMDAwMDsiPig8L3NwYW4+PHNwYW4gc3R5bGU9ImNv bG9yOiAjMjY3Zjk5OyI+U3RyaW5nPC9zcGFuPjxzcGFuIHN0eWxlPSJjb2xvcjogIzAwMDAwMDsi PiA8L3NwYW4+PHNwYW4gc3R5bGU9ImNvbG9yOiAjMDAxMDgwOyI+aWQ8L3NwYW4+PHNwYW4gc3R5 bGU9ImNvbG9yOiAjMDAwMDAwOyI+KSB7PC9zcGFuPjwvZGl2PjxkaXY+PHNwYW4gc3R5bGU9ImNv bG9yOiAjMDAwMDAwOyI+ICAgIDwvc3Bhbj48c3BhbiBzdHlsZT0iY29sb3I6ICNhZjAwZGI7Ij5y ZXR1cm48L3NwYW4+PHNwYW4gc3R5bGU9ImNvbG9yOiAjMDAwMDAwOyI+ID0gPC9zcGFuPjxzcGFu IHN0eWxlPSJjb2xvcjogIzAwMTA4MDsiPnA8L3NwYW4+PHNwYW4gc3R5bGU9ImNvbG9yOiAjMDAw MDAwOyI+Ljwvc3Bhbj48c3BhbiBzdHlsZT0iY29sb3I6ICM3OTVlMjY7Ij5kZWxldGU8L3NwYW4+ PHNwYW4gc3R5bGU9ImNvbG9yOiAjMDAwMDAwOyI+KGlkKTs8L3NwYW4+PC9kaXY+PGRpdj48c3Bh biBzdHlsZT0iY29sb3I6ICMwMDAwMDA7Ij4gIH08L3NwYW4+PC9kaXY+PGJyPjxkaXY+PHNwYW4g c3R5bGU9ImNvbG9yOiAjMDAwMDAwOyI+ICBAPC9zcGFuPjxzcGFuIHN0eWxlPSJjb2xvcjogIzI2 N2Y5OTsiPkdFVDwvc3Bhbj48c3BhbiBzdHlsZT0iY29sb3I6ICMwMDAwMDA7Ij4oPC9zcGFuPjxz cGFuIHN0eWxlPSJjb2xvcjogI2EzMTUxNTsiPiIve2lkfSI8L3NwYW4+PHNwYW4gc3R5bGU9ImNv bG9yOiAjMDAwMDAwOyI+KTwvc3Bhbj48L2Rpdj48ZGl2PjxzcGFuIHN0eWxlPSJjb2xvcjogIzAw MDAwMDsiPiAgPC9zcGFuPjxzcGFuIHN0eWxlPSJjb2xvcjogIzAwMDBmZjsiPnB1YmxpYzwvc3Bh bj48c3BhbiBzdHlsZT0iY29sb3I6ICMwMDAwMDA7Ij4gPC9zcGFuPjxzcGFuIHN0eWxlPSJjb2xv cjogIzI2N2Y5OTsiPkNvbGxlY3Rpb248L3NwYW4+PHNwYW4gc3R5bGU9ImNvbG9yOiAjMDAwMDAw OyI+Jmx0Ozwvc3Bhbj48c3BhbiBzdHlsZT0iY29sb3I6ICMyNjdmOTk7Ij5Qcm9jZXNzSW5zdGFu Y2U8L3NwYW4+PHNwYW4gc3R5bGU9ImNvbG9yOiAjMDAwMDAwOyI+Jmx0Ozwvc3Bhbj48c3BhbiBz dHlsZT0iY29sb3I6ICMyNjdmOTk7Ij5NeVByb2Nlc3M8L3NwYW4+PHNwYW4gc3R5bGU9ImNvbG9y OiAjMDAwMDAwOyI+Jmd0OyZndDsgPC9zcGFuPjxzcGFuIHN0eWxlPSJjb2xvcjogIzc5NWUyNjsi PmFib3J0PC9zcGFuPjxzcGFuIHN0eWxlPSJjb2xvcjogIzAwMDAwMDsiPig8L3NwYW4+PHNwYW4g c3R5bGU9ImNvbG9yOiAjMjY3Zjk5OyI+U3RyaW5nPC9zcGFuPjxzcGFuIHN0eWxlPSJjb2xvcjog IzAwMDAwMDsiPiA8L3NwYW4+PHNwYW4gc3R5bGU9ImNvbG9yOiAjMDAxMDgwOyI+aWQ8L3NwYW4+ PHNwYW4gc3R5bGU9ImNvbG9yOiAjMDAwMDAwOyI+KSB7PC9zcGFuPjwvZGl2PjxkaXY+PHNwYW4g c3R5bGU9ImNvbG9yOiAjMDAwMDAwOyI+ICAgIDwvc3Bhbj48c3BhbiBzdHlsZT0iY29sb3I6ICNh ZjAwZGI7Ij5yZXR1cm48L3NwYW4+PHNwYW4gc3R5bGU9ImNvbG9yOiAjMDAwMDAwOyI+IDwvc3Bh bj48c3BhbiBzdHlsZT0iY29sb3I6ICMwMDEwODA7Ij5wPC9zcGFuPjxzcGFuIHN0eWxlPSJjb2xv cjogIzAwMDAwMDsiPi48L3NwYW4+PHNwYW4gc3R5bGU9ImNvbG9yOiAjNzk1ZTI2OyI+aW5zdGFu Y2VzPC9zcGFuPjxzcGFuIHN0eWxlPSJjb2xvcjogIzAwMDAwMDsiPihpZCk7PC9zcGFuPjwvZGl2 PjxkaXY+PHNwYW4gc3R5bGU9ImNvbG9yOiAjMDAwMDAwOyI+ICB9PC9zcGFuPjwvZGl2PjxkaXY+ PHNwYW4gc3R5bGU9ImNvbG9yOiAjMDAwMDAwOyI+ICAuLi48L3NwYW4+PC9kaXY+PGJyPjxkaXY+ PHNwYW4gc3R5bGU9ImNvbG9yOiAjMDAwMDAwOyI+fTwvc3Bhbj48L2Rpdj48ZGl2PjxzcGFuIHN0 eWxlPSJjb2xvcjogIzAwMDAwMDsiPmBgYDwvc3Bhbj48L2Rpdj48YnI+PGJyPjxkaXY+PHNwYW4g c3R5bGU9ImNvbG9yOiAjMDAwMDAwOyI+VG9kYXksIGJvdGggdGhlIGNvZGUgdGhhdCBpcyBnZW5l cmF0ZWQgZm9yIHJ1bi10aW1lIHJlcHJlc2VudGF0aW9ucyBhbmQgdGhlIGNvZGUgdGhhdCBpbXBs ZW1lbnRzIFJFU1QgZW5kcG9pbnRzIGlzIGFsbCB0cmVhdGVkIGFzIGFuIDwvc3Bhbj48c3BhbiBz dHlsZT0iY29sb3I6ICMwMDAwMDA7Zm9udC1zdHlsZTogaXRhbGljOyI+KmltcGxlbWVudGF0aW9u IGRldGFpbCo8L3NwYW4+PHNwYW4gc3R5bGU9ImNvbG9yOiAjMDAwMDAwOyI+LiBJdCBpcyBvbmx5 IHZpc2libGUgaW4gdGhlIGNvbXBpbGF0aW9uIHRhcmdldCBkaXJlY3Rvcnkgb2YgeW91ciBwcm9q ZWN0LiBBbmQgeW91IGFyZSA8L3NwYW4+PHNwYW4gc3R5bGU9ImNvbG9yOiAjMDAwMDAwO2ZvbnQt c3R5bGU6IGl0YWxpYzsiPl9ub3RfPC9zcGFuPjxzcGFuIHN0eWxlPSJjb2xvcjogIzAwMDAwMDsi PiBzdXBwb3NlZCB0byByZWx5IG9uIHRoZSBzdHJ1Y3R1cmUgb2YgdGhhdCBjb2RlIGluIHlvdXIg b3duIGNvZGViYXNlLjwvc3Bhbj48L2Rpdj48YnI+PGRpdj48c3BhbiBzdHlsZT0iY29sb3I6ICMw MDAwMDA7Ij5Ib3dldmVyLCB3ZSBhbHdheXMgbWVhbnQgdGhpcyBwcm9jZWR1cmUgdG8gYmVjb21l IGN1c3RvbWl6YWJsZSBhdCBzb21lIHBvaW50LCBwcm9tb3RpbmcgaXQgdG8gYmUgPC9zcGFuPjxz cGFuIHN0eWxlPSJjb2xvcjogIzAwMDA4MDtmb250LXdlaWdodDogYm9sZDsiPioqc2NhZmZvbGRp bmcqKjwvc3Bhbj48c3BhbiBzdHlsZT0iY29sb3I6ICMwMDAwMDA7Ij4uIDwvc3Bhbj48L2Rpdj48 YnI+PGRpdj48c3BhbiBzdHlsZT0iY29sb3I6ICMwMDAwMDA7Ij5JbiB0aGUgY2FzZSBvZiBzY2Fm Zm9sZGluZywgY29kZSBzaG91bGQgbm90IGJlIGdlbmVyYXRlZCBpbiB5b3VyIGNvbXBpbGF0aW9u IHRhcmdldCBkaXJlY3RvcnksIGJ1dCBpbnN0ZWFkLCBpdCBzaG91bGQgYmUgcHJvbW90ZWQgdG8g eW91ciA8L3NwYW4+PHNwYW4gc3R5bGU9ImNvbG9yOiAjMDAwMDAwO2ZvbnQtc3R5bGU6IGl0YWxp YzsiPl9zb3VyY2UgY29kZV88L3NwYW4+PHNwYW4gc3R5bGU9ImNvbG9yOiAjMDAwMDAwOyI+IGRp cmVjdG9yeS4gV2UgYXJlIGN1cnJlbnRseSB3b3JraW5nIG9uIGEgZ2VuZXJhbCBzb2x1dGlvbiB0 byBhbGxvdyB5b3UgdG8gb3B0LW91dCBmcm9tIGNvZGUgZ2VuZXJhdGlvbiBmb3Igc3BlY2lmaWMg YXNzZXRzLCBhbmQgaW5zdGVhZCwgImNsYWltIiBpdCBmb3Igb3duZXJzaGlwLiBGb3IgaW5zdGFu Y2UsIHN1cHBvc2UgdGhhdCB5b3Ugd2FudCB0byBjdXN0b21pemUgPC9zcGFuPjxzcGFuIHN0eWxl PSJjb2xvcjogIzgwMDAwMDsiPmBNeVByb2Nlc3NgPC9zcGFuPjxzcGFuIHN0eWxlPSJjb2xvcjog IzAwMDAwMDsiPi4gWW91IHdpbGwgYmUgYWJsZSB0byB0ZWxsIHRoZSBjb2RlLWdlbmVyYXRpb24g cHJvY2VkdXJlIHRoYXQgeW91IHdhbnQgY3VzdG9taXplIHRoYXQgYXNzZXQ6IHRoZSBjb2RlLWdl bmVyYXRpb24gcHJvY2VkdXJlIHdpbGwgcnVuIG9uY2UsIGFuZCB0aGVuIHlvdSB3aWxsIGJlIGFi bGUgdG8gZWRpdCB0aGUgZ2VuZXJhdGVkIGNvZGUgYXMgcmVndWxhciBzb3VyY2UgY29kZS48L3Nw YW4+PC9kaXY+PGJyPjxkaXY+PHNwYW4gc3R5bGU9ImNvbG9yOiAjODAwMDAwO2ZvbnQtd2VpZ2h0 OiBib2xkOyI+IyMgQ29uY2x1c2lvbnM8L3NwYW4+PC9kaXY+PGJyPjxkaXY+PHNwYW4gc3R5bGU9 ImNvbG9yOiAjMDAwMDAwOyI+WW91IHNob3VsZCBub3cgaGF2ZSBhIGJldHRlciB1bmRlcnN0YW5k aW5nIG9mIHRoZSByYXRpb25hbGUgZm9yIGNvZGUgZ2VuZXJhdGlvbiBpbiBLb2dpdG86IGluIHRo ZSBmdXR1cmUgd2UgYXJlIGdvaW5nIHRvIGltcHJvdmUgb3VyIGNvZGUgZ2VuZXJhdGlvbiBwcm9j ZWR1cmUgdG8gYWxsb3cgZXh0ZW5zaWJpbGl0eSBieSBwbHVnZ2luZyBpbnRvIHRoZSBjb2RlLWdl bmVyYXRpb24gcHJvY2VzcywgYW5kIGN1c3RvbWl6YXRpb24gYnkgYWxsb3dpbmcgZW5kLXVzZXJz IHRvIHByb21vdGUgY29kZSBnZW5lcmF0aW9uIHRvIHNjYWZmb2xkaW5nLjwvc3Bhbj48L2Rpdj48 YnI+PGRpdj48c3BhbiBzdHlsZT0iY29sb3I6ICMwMDAwMDA7Ij5JbiB0aGUgZnV0dXJlIHdlIHdp bGwgZnVydGhlciBkb2N1bWVudCBob3cgd2UgcGxhbiB0byByZWZhY3RvciBvdXIgY29kZWJhc2Ug dG8gc3VwcG9ydCB0aGVzZSBub3ZlbCB1c2UgY2FzZXMuIDwvc3Bhbj48L2Rpdj48YnI+PGRpdj48 c3BhbiBzdHlsZT0iY29sb3I6ICMwMDAwMDA7Ij5ba29naXRvXTogPC9zcGFuPjxzcGFuIHN0eWxl PSJjb2xvcjogIzAwMDAwMDt0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsiPmh0dHBzOi8va29n aXRvLmtpZS5vcmc8L3NwYW4+PC9kaXY+PGRpdj48c3BhbiBzdHlsZT0iY29sb3I6ICMwMDAwMDA7 Ij5bdmRtMTldOiA8L3NwYW4+PHNwYW4gc3R5bGU9ImNvbG9yOiAjMDAwMDAwO3RleHQtZGVjb3Jh dGlvbjogdW5kZXJsaW5lOyI+aHR0cHM6Ly95b3V0dS5iZS9UV2ZpZ1I5d0dzQTwvc3Bhbj48L2Rp dj48ZGl2PjxzcGFuIHN0eWxlPSJjb2xvcjogIzAwMDAwMDsiPltxY29uc3AxOV06IDwvc3Bhbj48 c3BhbiBzdHlsZT0iY29sb3I6ICMwMDAwMDA7dGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7Ij5o dHRwczovL3d3dy55b3V0dWJlLmNvbS93YXRjaD92PUJVclk2T24xU3hNPC9zcGFuPjwvZGl2Pjxk aXY+PHNwYW4gc3R5bGU9ImNvbG9yOiAjMDAwMDAwOyI+W2Fubm90YXRpb25zXTogPC9zcGFuPjxz cGFuIHN0eWxlPSJjb2xvcjogIzAwMDAwMDt0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsiPmh0 dHBzOi8vZG9jcy5vcmFjbGUuY29tL2VuL2phdmEvamF2YXNlLzExL2RvY3MvYXBpL2phdmEuY29t cGlsZXIvamF2YXgvYW5ub3RhdGlvbi9wcm9jZXNzaW5nL3BhY2thZ2Utc3VtbWFyeS5odG1sPC9z cGFuPjwvZGl2PjxkaXY+PHNwYW4gc3R5bGU9ImNvbG9yOiAjMDAwMDAwOyI+W2FzbV06IDwvc3Bh bj48c3BhbiBzdHlsZT0iY29sb3I6ICMwMDAwMDA7dGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7 Ij5odHRwczovL2FzbS5vdzIuaW8vPC9zcGFuPjwvZGl2PjxkaXY+PHNwYW4gc3R5bGU9ImNvbG9y OiAjMDAwMDAwOyI+W2phdmFwb2V0XTogPC9zcGFuPjxzcGFuIHN0eWxlPSJjb2xvcjogIzAwMDAw MDt0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsiPmh0dHBzOi8vZ2l0aHViLmNvbS9zcXVhcmUv amF2YXBvZXQ8L3NwYW4+PC9kaXY+PGRpdj48c3BhbiBzdHlsZT0iY29sb3I6ICMwMDAwMDA7Ij5b amF2YXBhcnNlcl06IDwvc3Bhbj48c3BhbiBzdHlsZT0iY29sb3I6ICMwMDAwMDA7dGV4dC1kZWNv cmF0aW9uOiB1bmRlcmxpbmU7Ij5odHRwczovL2phdmFwYXJzZXIub3JnLzwvc3Bhbj48c3BhbiBz dHlsZT0iY29sb3I6ICMwMDAwMDA7Ij4gPC9zcGFuPjwvZGl2PjxkaXY+PHNwYW4gc3R5bGU9ImNv bG9yOiAjMDAwMDAwOyI+W3JlZmxlY3Rpb25dOiA8L3NwYW4+PHNwYW4gc3R5bGU9ImNvbG9yOiAj MDAwMDAwO3RleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lOyI+aHR0cHM6Ly93d3cub3B0YXBsYW5u ZXIub3JnL2Jsb2cvMjAxOC8wMS8wOS9KYXZhUmVmbGVjdGlvbkJ1dE11Y2hGYXN0ZXIuaHRtbDwv c3Bhbj48L2Rpdj48ZGl2PjxzcGFuIHN0eWxlPSJjb2xvcjogIzAwMDAwMDsiPltuYW5vcGFzc106 IDwvc3Bhbj48c3BhbiBzdHlsZT0iY29sb3I6ICMwMDAwMDA7dGV4dC1kZWNvcmF0aW9uOiB1bmRl cmxpbmU7Ij5odHRwczovL25hbm9wYXNzLm9yZy88L3NwYW4+PC9kaXY+PGRpdj48c3BhbiBzdHls ZT0iY29sb3I6ICMwMDAwMDA7Ij5bbWljcm9uYXV0XTogPC9zcGFuPjxzcGFuIHN0eWxlPSJjb2xv cjogIzAwMDAwMDt0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsiPmh0dHBzOi8vbWljcm9uYXV0 LmlvPC9zcGFuPjwvZGl2PjxkaXY+PHNwYW4gc3R5bGU9ImNvbG9yOiAjMDAwMDAwOyI+W3F1YXJr dXNdOiA8L3NwYW4+PHNwYW4gc3R5bGU9ImNvbG9yOiAjMDAwMDAwO3RleHQtZGVjb3JhdGlvbjog dW5kZXJsaW5lOyI+aHR0cHM6Ly9xdWFya3VzLmlvPC9zcGFuPjwvZGl2PjxkaXY+PHNwYW4gc3R5 bGU9ImNvbG9yOiAjMDAwMDAwOyI+W2NkaWxpdGVdOiA8L3NwYW4+PHNwYW4gc3R5bGU9ImNvbG9y OiAjMDAwMDAwO3RleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lOyI+aHR0cDovL3d3dy5jZGktc3Bl Yy5vcmcvbmV3cy8yMDIwLzAzLzA5L0NESV9mb3JfdGhlX2Z1dHVyZS88L3NwYW4+PC9kaXY+PGJy Pjxicj48L2Rpdj4="&gt;​&lt;/div&gt;&lt;/div&gt;&lt;div class="feedflare"&gt; &lt;a href="http://feeds.athico.com/~ff/DroolsAtom?a=3ENKNbYB92c:N90xu2dViAg:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/DroolsAtom?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.athico.com/~ff/DroolsAtom?a=3ENKNbYB92c:N90xu2dViAg:gIN9vFwOqvQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/DroolsAtom?i=3ENKNbYB92c:N90xu2dViAg:gIN9vFwOqvQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.athico.com/~ff/DroolsAtom?a=3ENKNbYB92c:N90xu2dViAg:dnMXMwOfBR0"&gt;&lt;img src="http://feeds.feedburner.com/~ff/DroolsAtom?d=dnMXMwOfBR0" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.athico.com/~ff/DroolsAtom?a=3ENKNbYB92c:N90xu2dViAg:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/DroolsAtom?i=3ENKNbYB92c:N90xu2dViAg:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.athico.com/~ff/DroolsAtom?a=3ENKNbYB92c:N90xu2dViAg:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/DroolsAtom?i=3ENKNbYB92c:N90xu2dViAg:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.athico.com/~ff/DroolsAtom?a=3ENKNbYB92c:N90xu2dViAg:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/DroolsAtom?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.athico.com/~ff/DroolsAtom?a=3ENKNbYB92c:N90xu2dViAg:jWeZv7XsJd0"&gt;&lt;img src="http://feeds.feedburner.com/~ff/DroolsAtom?d=jWeZv7XsJd0" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/DroolsAtom/~4/3ENKNbYB92c" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/oS3As5ZkWYA" height="1" width="1" alt=""/&gt;</content><summary>Originally posted here My favorite topic of discussion last year was moving computations to compile-time. In fact, I went to a few conferences explaining how moving processing out of your run-time and into build-time, is a conceptually simple but extremely effective way to make your applications lighter. This was sometimes received with little enthusiasm: the idea itself is in fact far from new. Y...</summary><dc:creator>Edoardo Vacchi</dc:creator><dc:date>2020-04-23T07:45:00Z</dc:date><feedburner:origLink>http://feeds.athico.com/~r/DroolsAtom/~3/3ENKNbYB92c/kogito-modular-codegen-design-proposal.html</feedburner:origLink></entry><entry><title>Report from the February 2020 ISO C++ meeting (Core Language Working Group)</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/xMWzVwa0Q9Y/" /><category term="C++" /><category term="Linux" /><category term="Open source" /><category term="c++ concepts" /><category term="g++" /><category term="gcc" /><category term="red hat developer toolset" /><author><name>Jason Merrill</name></author><id>https://developers.redhat.com/blog/?p=695497</id><updated>2020-04-23T07:00:39Z</updated><published>2020-04-23T07:00:39Z</published><content type="html">&lt;p&gt;The first International Organization for Standardization (ISO) C++ meeting of 2020 happened in Prague, Czechia. It was our first time meeting in Prague, though I&amp;#8217;ve been there a few times for the GNU Tools Cauldron. Two of us from Red Hat attended: Jonathan Wakely serves on the ISO C++ Standards Committee Library Working Group (LWG), and I am part of the Core Language Working Group (CWG). (You can see the ISO C++ committee structure &lt;a href="https://isocpp.org/std/the-committee" target="_blank" target="_blank" rel="nofollow" noreferrer"&gt;here&lt;/a&gt;.)&lt;/p&gt; &lt;p&gt;This was our second meeting after sending the C++20 draft standard out for comments from the ISO C++ national bodies. We finished responses to the last round of comments. That went well, and at the end of the week, we voted to send the resulting C++20 standard to the national bodies for ratification.&lt;/p&gt; &lt;p&gt;In the next sections, I&amp;#8217;ll share the thinking behind some of our decisions. Note that this report addresses mostly lower-level issues, unlike my usual trip reports.&lt;/p&gt; &lt;h2&gt;Concepts&lt;/h2&gt; &lt;p&gt;As part of my work on &lt;a href="https://en.cppreference.com/w/cpp/language/constraints" target="_blank" target="_blank" rel="nofollow" noreferrer"&gt;concepts&lt;/a&gt;, I contributed wording to the resolution of two closely connected issues.&lt;/p&gt; &lt;h3&gt;Clarify declaration matching&lt;/h3&gt; &lt;p&gt;The first issue is documented in &lt;a href="https://github.com/cplusplus/nbballot/issues/103" target="_blank" target="_blank" rel="nofollow" noreferrer"&gt;CA104 13.04 [temp.constr]: Clarify declaration matching and partial ordering requiring substitution into constraints&lt;/a&gt;. Normally, we try to avoid substituting directly into constraints as written in a requires-clause. Instead, we prefer substitution only on atomic constraints as part of determining whether requirements have been satisfied.&lt;/p&gt; &lt;p&gt;In the case of comparing a declaration at namespace scope to a declaration in an instantiation of a class template, however, we must allow a direct substitution in some instances. One example is determining whether a specialization matches:&lt;/p&gt; &lt;pre&gt;template &amp;#60;class T&amp;#62; struct A { template &amp;#60;class U&amp;#62; U f(U) requires C&amp;#60;typename T::type&amp;#62;; template &amp;#60;class U&amp;#62; U f(U) requires C&amp;#60;T&amp;#62;; }; // Substitute int for T in above requirements to find match. template &amp;#60;&amp;#62; template &amp;#60;class U&amp;#62; U A&amp;#60;int&amp;#62;::f(U) requires C&amp;#60;int&amp;#62; { } &lt;/pre&gt; &lt;h3&gt;Hidden non-template friends&lt;/h3&gt; &lt;p&gt;The second issue is from &lt;a href="https://github.com/cplusplus/nbballot/issues/114" target="_blank" target="_blank" rel="nofollow" noreferrer"&gt;US115 13.6.4 [temp.friend]: Hidden non-template friends need a requires-clause&lt;/a&gt;. Until now, it was considered ill-formed for a non-template friend declaration to have a requires-clause. The ISO C++ committee reasoned that it would be unclear whether the non-template friend declaration was trying to match a given constrained overload, or if it was trying to declare friendship only if the requirements are satisfied. We determined that removing constraints on non-template functions renders the first concern meaningless. The second concern remains an undesirable difference from constraint semantics in all other situations.&lt;/p&gt; &lt;p&gt;If the friend is defined in the class body, then having a requires-clause makes just as much sense as it does on a member function. That is, the clause can be used to define a particular operation for a class template, depending on the characteristics of the template arguments. The library was already allowing this behavior even though the language said it was invalid.&lt;/p&gt; &lt;p&gt;We resolved to allow the requires-clause on a friend that is defined in a templated class. To avoid the kind of substitution needed for partial specialization matching (as shown in the code sample), we said that any friend template with a constraint that depends on a template parameter of the class must also be defined in the class body. If the constraint only depends on the friend&amp;#8217;s template parameters, it can be a declaration to match with a template defined at namespace scope.&lt;/p&gt; &lt;h3&gt;Changing concept values&lt;/h3&gt; &lt;p&gt;Continuing with concepts, we addressed &lt;em&gt;&lt;a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2020/p2104r0.html" target="_blank" target="_blank" rel="nofollow" noreferrer"&gt;Disallow changing concept values&lt;/a&gt;&lt;/em&gt;. This paper resolves GB046 as &amp;#8220;accepted with modifications.&amp;#8221;&lt;/p&gt; &lt;p&gt;We noticed when working on concepts in the G++ compiler that the draft allowed the satisfaction of a declaration to vary within a translation unit. This meant, for example, that a declaration could be satisfied by a class becoming complete. Supporting this change slows down the compiler because we could no longer remember the results of a previous check across events such as completing a class definition. The decision to disallow changing concept values means that we don&amp;#8217;t have to worry about that problem, and we can speed up the compiler again. As a caveat, the current resolution breaks a fair amount of concept code, so more investigation is needed.&lt;/p&gt; &lt;h3&gt;Function template constraints&lt;/h3&gt; &lt;p&gt;For the &lt;em&gt;&lt;a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2020/p2113r0.html" target="_blank" target="_blank" rel="nofollow" noreferrer"&gt;Proposed resolution for 2019 comment CA 112&lt;/a&gt;,&lt;/em&gt; we resolved to clarify that a function template can only be considered more constrained than another if the template parameters are otherwise equivalent.&lt;/p&gt; &lt;h2&gt;Modules&lt;/h2&gt; &lt;p&gt;We addressed three proposals dealing with the complications of entities that were once local to a translation unit. In a module interface unit, such entities could become visible to importing translation units:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;em&gt;&lt;a href="http://wg21.link/p1815r2" target="_blank" target="_blank" rel="nofollow" noreferrer"&gt;P1815R2: Translation-unit-local entities&lt;/a&gt;&lt;/em&gt; makes it ill-formed for an exported declaration to expose a translation-local entity.&lt;/li&gt; &lt;li&gt;&lt;em&gt;&lt;a href="http://wg21.link/p1779r3" target="_blank" target="_blank" rel="nofollow" noreferrer"&gt;P1779R3: ABI isolation for member functions&lt;/a&gt;&lt;/em&gt; makes functions defined in a class body within a module no longer implicitly &lt;em&gt;inline&lt;/em&gt;, so that they can use local entities without exposing them.&lt;/li&gt; &lt;li&gt;&lt;a href="http://wg21.link/p2115r0" target="_blank" target="_blank" rel="nofollow" noreferrer"&gt;&lt;em&gt;P2115R0: Merging of multiple definitions for unnamed unscoped enumerations&lt;/em&gt;&lt;/a&gt; deals with how we merge unnamed file-scope enumerations from header files that might not have the same set of enumerators in different translation units.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Each of these patterns previously violated the &lt;em&gt;one definition rule&lt;/em&gt; (ODR) but worked in practice. Note that a compiler is free to inline a function that is not declared &lt;code&gt;inline&lt;/code&gt;, so the P1779 change need not affect performance. On ELF targets such as GNU/Linux, which allow symbols to be overridden by other definitions, the GNU Compiler Collection (GCC) currently does not inline replaceable functions unless the user specifies &lt;code&gt;-fno-semantic-interposition&lt;/code&gt;. We could address this issue in the GCC Modules implementation by assuming no interposition for functions defined in a module interface unit.&lt;/p&gt; &lt;h2&gt;Miscellaneous&lt;/h2&gt; &lt;p&gt;We also addressed several miscellaneous papers. One of these, &lt;a href="http://wg21.link/p0593r6" target="_blank" target="_blank" rel="nofollow" noreferrer"&gt;&lt;em&gt;P0593R6:&lt;/em&gt; Implicit creation of objects for low-level object manipulation&lt;/a&gt;, offers a new model for when objects are considered to have been created in &lt;code&gt;malloc&lt;/code&gt;ed memory or a &lt;code&gt;char&lt;/code&gt; buffer. Any objects necessary are considered to have been created implicitly by the &lt;code&gt;malloc&lt;/code&gt; or creation of the buffer. The new model should bring more clarity to type-based aliasing rules in C++.&lt;/p&gt; &lt;p&gt;We also addressed the proposal &lt;em&gt;&lt;a href="http://wg21.link/p1957r2" target="_blank" target="_blank" rel="nofollow" noreferrer"&gt;P1957R2: Converting from T* to bool should be considered narrowing&lt;/a&gt;&lt;/em&gt;. It was surprising to realize that we had not previously considered a pointer-to-bool conversion to be narrowing; however, experimentation suggests that making that change would result in far more bugs than false positives.&lt;/p&gt; &lt;p&gt;The resolution to &lt;em&gt;&lt;a href="http://wg21.link/p1937r2" target="_blank" target="_blank" rel="nofollow" noreferrer"&gt;P1937R2: Fixing inconsistencies between constexpr and consteval functions&lt;/a&gt;&lt;/em&gt; states that a &lt;code&gt;consteval&lt;/code&gt; call can no longer be immediately evaluated in an unevaluated context.&lt;/p&gt; &lt;h2&gt;Conclusion&lt;/h2&gt; &lt;p&gt;The &lt;a href="https://isocpp.org/std/meetings-and-participation/upcoming-meetings" target="_blank" target="_blank" rel="nofollow" noreferrer"&gt;next meeting&lt;/a&gt; was scheduled for June 2020 in Varna, Bulgaria. It has been postponed indefinitely due to COVID-19.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F04%2F23%2Freport-from-the-february-2020-iso-c-meeting-core-language-working-group%2F&amp;#38;linkname=Report%20from%20the%20February%202020%20ISO%20C%2B%2B%20meeting%20%28Core%20Language%20Working%20Group%29" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F04%2F23%2Freport-from-the-february-2020-iso-c-meeting-core-language-working-group%2F&amp;#38;linkname=Report%20from%20the%20February%202020%20ISO%20C%2B%2B%20meeting%20%28Core%20Language%20Working%20Group%29" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F04%2F23%2Freport-from-the-february-2020-iso-c-meeting-core-language-working-group%2F&amp;#38;linkname=Report%20from%20the%20February%202020%20ISO%20C%2B%2B%20meeting%20%28Core%20Language%20Working%20Group%29" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F04%2F23%2Freport-from-the-february-2020-iso-c-meeting-core-language-working-group%2F&amp;#38;linkname=Report%20from%20the%20February%202020%20ISO%20C%2B%2B%20meeting%20%28Core%20Language%20Working%20Group%29" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F04%2F23%2Freport-from-the-february-2020-iso-c-meeting-core-language-working-group%2F&amp;#38;linkname=Report%20from%20the%20February%202020%20ISO%20C%2B%2B%20meeting%20%28Core%20Language%20Working%20Group%29" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F04%2F23%2Freport-from-the-february-2020-iso-c-meeting-core-language-working-group%2F&amp;#38;linkname=Report%20from%20the%20February%202020%20ISO%20C%2B%2B%20meeting%20%28Core%20Language%20Working%20Group%29" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F04%2F23%2Freport-from-the-february-2020-iso-c-meeting-core-language-working-group%2F&amp;#38;linkname=Report%20from%20the%20February%202020%20ISO%20C%2B%2B%20meeting%20%28Core%20Language%20Working%20Group%29" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F04%2F23%2Freport-from-the-february-2020-iso-c-meeting-core-language-working-group%2F&amp;#038;title=Report%20from%20the%20February%202020%20ISO%20C%2B%2B%20meeting%20%28Core%20Language%20Working%20Group%29" data-a2a-url="https://developers.redhat.com/blog/2020/04/23/report-from-the-february-2020-iso-c-meeting-core-language-working-group/" data-a2a-title="Report from the February 2020 ISO C++ meeting (Core Language Working Group)"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/04/23/report-from-the-february-2020-iso-c-meeting-core-language-working-group/"&gt;Report from the February 2020 ISO C++ meeting (Core Language Working Group)&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/xMWzVwa0Q9Y" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;The first International Organization for Standardization (ISO) C++ meeting of 2020 happened in Prague, Czechia. It was our first time meeting in Prague, though I&amp;#8217;ve been there a few times for the GNU Tools Cauldron. Two of us from Red Hat attended: Jonathan Wakely serves on the ISO C++ Standards Committee Library Working Group (LWG), [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/04/23/report-from-the-february-2020-iso-c-meeting-core-language-working-group/"&gt;Report from the February 2020 ISO C++ meeting (Core Language Working Group)&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;</summary><post-id xmlns="com-wordpress:feed-additions:1">695497</post-id><dc:creator>Jason Merrill</dc:creator><dc:date>2020-04-23T07:00:39Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2020/04/23/report-from-the-february-2020-iso-c-meeting-core-language-working-group/</feedburner:origLink></entry><entry><title>Knative Cookbook: Building Effective Serverless Applications with Kubernetes and OpenShift</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/6BrrbbNqzf4/" /><category term="Event-Driven" /><category term="Kubernetes" /><category term="Microservices" /><category term="Serverless" /><category term="cloud native" /><category term="Knative" /><category term="knative eventing" /><category term="kubernetes-native" /><category term="openshift" /><author><name>Kamesh Sampath</name></author><id>https://developers.redhat.com/blog/?p=709338</id><updated>2020-04-23T07:00:19Z</updated><published>2020-04-23T07:00:19Z</published><content type="html">&lt;p&gt;&lt;span style="font-weight: 400;"&gt;&lt;a target="_blank" rel="nofollow" href="https://en.wikipedia.org/wiki/Serverless_computing"&gt;Serverless architecture&lt;/a&gt; has recently taken center stage in cloud-native application deployment: Enterprises started to see the benefits that serverless applications bring to them, such as agility, rapid deployment, and resource cost optimization. As with any other new technology, there were multiple ways to approach and employ serverless technologies, such as Function-as-a-Service (FaaS) and Backend-as-a-Service (BaaS)—that is, running your applications as ephemeral containers—with the ability to scale up and down automatically.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span id="more-709338"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/books/knative-cookbook"&gt;&lt;img class=" aligncenter wp-image-710187 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2020/04/Knative_Cookbook_Cover-1024x659.png" src="https://developers.redhat.com/blog/wp-content/uploads/2020/04/Knative_Cookbook_Cover-1024x659.png" alt="Knative Cookbook front and back cover" width="640" height="412" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/04/Knative_Cookbook_Cover-1024x659.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/04/Knative_Cookbook_Cover-300x193.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/04/Knative_Cookbook_Cover-768x494.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a target="_blank" rel="nofollow" href="https://knative.dev"&gt;&lt;span style="font-weight: 400;"&gt;Knative&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt; was started with the simple goal of having a Kubernetes-native platform to build, deploy, and manage your serverless workloads. Kubernetes solves a lot of cloud-native application problems, but with a fair bit of complexity, especially from the perspective of deployment. To make a simple service deployment with Kubernetes, a developer has to write a minimum of two &lt;/span&gt;&lt;a target="_blank" rel="nofollow" href="https://yaml.org"&gt;&lt;span style="font-weight: 400;"&gt;YAMLs&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt; (such as a Deployment service) and then perform the necessary plumbing work to expose the service to the outside world. This complexity causes an application developer to spend more time crafting the YAMLs and other core platform tasks rather than focusing on the business need.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;Let me explain this issue with an example. Say that I want to deploy a hello world kind of application and expose the service. First, I need to create a deployment, so here I created a deployment called &lt;code&gt;myboot&lt;/code&gt;:&lt;/p&gt; &lt;p&gt;View the code on &lt;a target="_blank" rel="nofollow" href="https://gist.github.com/kameshsampath/8a1083d57ce83237029c41ab2ac82611"&gt;Gist&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Next, I need to expose this deployment as a service named &lt;code&gt;myboot&lt;/code&gt; (for example, an Application-as-a-Service):&lt;/p&gt; &lt;p&gt;View the code on &lt;a target="_blank" rel="nofollow" href="https://gist.github.com/kameshsampath/1bd96f24e25371f280863ee8522fdab9"&gt;Gist&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;But wait, do I need to write these elaborate YAMLs every time I want to deploy my application as a service? Unfortunately, I did, until Knative was born. Knative solves these Kubernetes problems by providing all essential middleware primitives via a simpler deployment model. On Knative you can deploy any modern application workload, such as monolithic applications, microservices, or even tiny functions. Knative can run in any cloud platform that runs Kubernetes, which gives enterprises more agility and flexibility in running their serverless workloads without relying on cloud vendor-specific features.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;Let me show you how simpler your deployment is when you deploy the same &lt;code&gt;myboot&lt;/code&gt; as a Knative service:&lt;/p&gt; &lt;p&gt;View the code on &lt;a target="_blank" rel="nofollow" href="https://gist.github.com/kameshsampath/a28fe7848c89f655a3b7c611979dae27"&gt;Gist&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Though the simpler deployment model is a key feature offered by Knative, there is much more to Knative than that. This is where w&lt;span style="font-weight: 400;"&gt;e—as part of the Red Hat Developer Program—thought it would be awesome to help developers dive into Knative quickly and easily, which gave birth to the&lt;/span&gt; &lt;a target="_blank" rel="nofollow" href="https://github.com/redhat-developer-demos/knative-tutorial"&gt;&lt;span style="font-weight: 400;"&gt;Knative Tutorial&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt;. This tutorial not only provides the getting started experience for Knative but also prepares you for the next level.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;The fact there are many ways to do serverless has resulted in confusion among developers, with the following questions being raised immediately:&lt;/span&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;span style="font-weight: 400;"&gt;What implementation should I choose: FaaS or BaaS?&lt;/span&gt;&lt;/li&gt; &lt;li&gt;What is the quickest way to get started?&lt;/li&gt; &lt;li&gt;What are the use cases for which I can apply serverless technology?&lt;/li&gt; &lt;li&gt;How do I measure the benefits?&lt;/li&gt; &lt;li&gt;What tools I should use to develop serverless applications?&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;We had the same set of questions when we started to explore serverless technology as part of writing the Knative Tutorial. The problems and challenges that we faced during our research became the crux of the Knative cookbook. &lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;As the Knative project picked up momentum, it became obvious that there should be a guide book that could provide practical applications of Knative and typical how-to scenarios. Seeing this need is what caused Burr Sutter and me to create the &lt;em&gt;Knative Cookbook&lt;/em&gt;, which covers the following topics:&lt;/span&gt;&lt;/p&gt; &lt;ul&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;Installing Knative into your Kubernetes cluster.&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;Auto-scaling to zero.&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;Scaling up to handle request spikes.&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;Responding to external event stimuli in a serverless way.&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;Using Apache Kafka with Knative Eventing.&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;Using&lt;/span&gt; &lt;a href="https://developers.redhat.com/topics/kubernetes/"&gt;&lt;span style="font-weight: 400;"&gt;Kubernetes&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt;,&lt;/span&gt; &lt;a target="_blank" rel="nofollow" href="https://knative.dev"&gt;&lt;span style="font-weight: 400;"&gt;Knative&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt;,&lt;/span&gt; &lt;a target="_blank" rel="nofollow" href="https://kafka.apache.org"&gt;&lt;span style="font-weight: 400;"&gt;Kafka&lt;/span&gt;&lt;/a&gt;,&lt;span style="font-weight: 400;"&gt; and&lt;/span&gt; &lt;a target="_blank" rel="nofollow" href="https://github.com/apache/camel-k/"&gt;&lt;span style="font-weight: 400;"&gt;Kamel&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt; for &lt;a href="https://developers.redhat.com/devnation/tech-talks/4K-Kubernetes-with-Knative-Kafka-and-Kamel/watch/"&gt;4K cloud-native computing&lt;/a&gt;.&lt;/span&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;&lt;a href="https://developers.redhat.com/books/knative-cookbook/?v=1"&gt;Download the &lt;em&gt;Knative Cookbook &lt;/em&gt;here&lt;/a&gt;, and we hope that this ebook will be of great assistance on your Knative journey!&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F04%2F23%2Fknative-cookbook-building-effective-serverless-applications-with-kubernetes-and-openshift%2F&amp;#38;linkname=Knative%20Cookbook%3A%20Building%20Effective%20Serverless%20Applications%20with%20Kubernetes%20and%20OpenShift" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F04%2F23%2Fknative-cookbook-building-effective-serverless-applications-with-kubernetes-and-openshift%2F&amp;#38;linkname=Knative%20Cookbook%3A%20Building%20Effective%20Serverless%20Applications%20with%20Kubernetes%20and%20OpenShift" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F04%2F23%2Fknative-cookbook-building-effective-serverless-applications-with-kubernetes-and-openshift%2F&amp;#38;linkname=Knative%20Cookbook%3A%20Building%20Effective%20Serverless%20Applications%20with%20Kubernetes%20and%20OpenShift" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F04%2F23%2Fknative-cookbook-building-effective-serverless-applications-with-kubernetes-and-openshift%2F&amp;#38;linkname=Knative%20Cookbook%3A%20Building%20Effective%20Serverless%20Applications%20with%20Kubernetes%20and%20OpenShift" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F04%2F23%2Fknative-cookbook-building-effective-serverless-applications-with-kubernetes-and-openshift%2F&amp;#38;linkname=Knative%20Cookbook%3A%20Building%20Effective%20Serverless%20Applications%20with%20Kubernetes%20and%20OpenShift" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F04%2F23%2Fknative-cookbook-building-effective-serverless-applications-with-kubernetes-and-openshift%2F&amp;#38;linkname=Knative%20Cookbook%3A%20Building%20Effective%20Serverless%20Applications%20with%20Kubernetes%20and%20OpenShift" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F04%2F23%2Fknative-cookbook-building-effective-serverless-applications-with-kubernetes-and-openshift%2F&amp;#38;linkname=Knative%20Cookbook%3A%20Building%20Effective%20Serverless%20Applications%20with%20Kubernetes%20and%20OpenShift" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F04%2F23%2Fknative-cookbook-building-effective-serverless-applications-with-kubernetes-and-openshift%2F&amp;#038;title=Knative%20Cookbook%3A%20Building%20Effective%20Serverless%20Applications%20with%20Kubernetes%20and%20OpenShift" data-a2a-url="https://developers.redhat.com/blog/2020/04/23/knative-cookbook-building-effective-serverless-applications-with-kubernetes-and-openshift/" data-a2a-title="Knative Cookbook: Building Effective Serverless Applications with Kubernetes and OpenShift"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/04/23/knative-cookbook-building-effective-serverless-applications-with-kubernetes-and-openshift/"&gt;Knative Cookbook: Building Effective Serverless Applications with Kubernetes and OpenShift&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/6BrrbbNqzf4" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;Serverless architecture has recently taken center stage in cloud-native application deployment: Enterprises started to see the benefits that serverless applications bring to them, such as agility, rapid deployment, and resource cost optimization. As with any other new technology, there were multiple ways to approach and employ serverless technologies, such as Function-as-a-Service (FaaS) and Backend-as-a-Service (BaaS)—that [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/04/23/knative-cookbook-building-effective-serverless-applications-with-kubernetes-and-openshift/"&gt;Knative Cookbook: Building Effective Serverless Applications with Kubernetes and OpenShift&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;</summary><post-id xmlns="com-wordpress:feed-additions:1">709338</post-id><dc:creator>Kamesh Sampath</dc:creator><dc:date>2020-04-23T07:00:19Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2020/04/23/knative-cookbook-building-effective-serverless-applications-with-kubernetes-and-openshift/</feedburner:origLink></entry><entry><title>Kogito 0.9.1 released</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/uV-Ql2PcxwU/kogito-091-released.html" /><category term="Announcement" scheme="searchisko:content:tags" /><category term="feed_group_name_jbpm" scheme="searchisko:content:tags" /><category term="feed_name_kverlaen" scheme="searchisko:content:tags" /><category term="kogito" scheme="searchisko:content:tags" /><category term="release" scheme="searchisko:content:tags" /><author><name>Kris Verlaenen</name></author><id>searchisko:content:id:jbossorg_blog-kogito_0_9_1_released</id><updated>2020-04-22T16:01:31Z</updated><published>2020-04-22T16:01:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;&lt;div style="text-align: justify;"&gt;We are glad to announce the Kogito 0.9.1 release is now available!&amp;nbsp; This goes hand in hand with the &lt;a href="https://github.com/kiegroup/kogito-tooling/releases/tag/0.3.1"&gt;Kogito Tooling 0.3.1 release&lt;/a&gt;.&lt;/div&gt;&lt;div style="text-align: justify;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;From a feature point of view there are only minor changes compared to 0.9.0, but on top of bug fixing we have also spent quite some time on following areas:&lt;/div&gt;&lt;ul style="text-align: justify;"&gt;&lt;li&gt;&lt;a href="https://docs.jboss.org/kogito/release/latest/html_single/"&gt;Kogito documentation&lt;/a&gt; is now available&lt;/li&gt;&lt;li&gt;&lt;a href="https://kogito.kie.org/"&gt;Kogito website&lt;/a&gt; was updated with updated getting started and community sections&lt;/li&gt;&lt;li&gt;&lt;a href="https://github.com/kiegroup/kogito-examples"&gt;Kogito examples&lt;/a&gt; were updated and improved&lt;/li&gt;&lt;/ul&gt;&lt;div style="text-align: justify;"&gt;This is a milestone for us as we wanted to bring an end-to-end story and focus on our documentation and getting started experience to help you with your first steps on Kogito.&amp;nbsp; Take a look and let us know if you have further questions or recommendations!&lt;/div&gt;&lt;div style="text-align: justify;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;New to Kogito?&amp;nbsp;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;Check out our website &lt;a href="https://kogito.kie.org/"&gt;https://kogito.kie.org/&lt;/a&gt;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;Click on the "Get Started" button.&lt;/div&gt;&lt;div style="text-align: justify;"&gt;&lt;br /&gt;&lt;/div&gt;All artefacts are available now:&lt;br /&gt;&lt;ul style="text-align: left;"&gt;&lt;li&gt;Kogito runtime artefacts are &lt;a href="https://search.maven.org/search?q=kogito"&gt;available on Maven Central&lt;/a&gt;&lt;/li&gt;&lt;li&gt;Kogito examples can be found &lt;a href="https://github.com/kiegroup/kogito-examples"&gt;here&lt;/a&gt; &lt;/li&gt;&lt;li&gt;Kogito images are available on &lt;a href="https://quay.io/search?q=kogito"&gt;quay&lt;/a&gt;&lt;/li&gt;&lt;li&gt;Kogito operator is available in the OperatorHub in OpenShift &lt;/li&gt;&lt;li&gt;Kogito tooling 0.3.1 artefacts are available &lt;a href="https://github.com/kiegroup/kogito-tooling/releases/tag/0.3.1"&gt;here&lt;/a&gt; &lt;/li&gt;&lt;/ul&gt;&lt;div style="text-align: justify;"&gt;As announced last week we've also &lt;a href="https://kverlaen.blogspot.com/2020/04/new-community-channels-on-zulip-chat.html"&gt;introduced a chat channel&lt;/a&gt; where you can reach the core team or interface with the community, so hope to see you all there !&lt;/div&gt;&lt;div style="text-align: justify;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;Detailed release notes for 0.9.1 in JIRA can be found &lt;a href="https://issues.redhat.com/secure/ReleaseNote.jspa?projectId=12322421&amp;amp;version=12345302"&gt;here&lt;/a&gt;.&lt;/div&gt;&lt;div style="text-align: justify;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="text-align: justify;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/uV-Ql2PcxwU" height="1" width="1" alt=""/&gt;</content><summary>We are glad to announce the Kogito 0.9.1 release is now available!  This goes hand in hand with the Kogito Tooling 0.3.1 release. From a feature point of view there are only minor changes compared to 0.9.0, but on top of bug fixing we have also spent quite some time on following areas: Kogito documentation is now available Kogito website was updated with updated getting started and community secti...</summary><dc:creator>Kris Verlaenen</dc:creator><dc:date>2020-04-22T16:01:00Z</dc:date><feedburner:origLink>http://kverlaen.blogspot.com/2020/04/kogito-091-released.html</feedburner:origLink></entry><entry><title>Getting started with JavaScript application development</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/Y7QIgrjUpDM/" /><category term="JavaScript" /><category term="Node.js" /><category term="UI/UX" /><category term="JavaScript framework" /><category term="patternfly" /><category term="react" /><category term="ReactJS" /><author><name>Dana Gutride</name></author><id>https://developers.redhat.com/blog/?p=698117</id><updated>2020-04-22T07:00:46Z</updated><published>2020-04-22T07:00:46Z</published><content type="html">&lt;p&gt;For many developers who have never built a &lt;a href="https://developers.redhat.com/blog/category/javascript/"&gt;JavaScript&lt;/a&gt; web application before, the first steps can be daunting. Our development team has the opportunity to interact with both students that are just getting started and developers with lengthy experience building out complex applications. Even seasoned back-end developers often ask where they can get started with JavaScript. Our response is invariably, &amp;#8220;Don&amp;#8217;t just read. You need to start building things, play with the language to see what it can do.&amp;#8221;&lt;/p&gt; &lt;h2&gt;JavaScript frameworks&lt;/h2&gt; &lt;p&gt;Many times they also ask, “Which framework should I learn?” JavaScript frameworks like Angular, Vue, or React generate a lot of excitement, but they confuse the picture of where to start. At this stage, many developers might not want to choose a framework at all, so that they don&amp;#8217;t lock themselves into a specific technology. If you wonder about these same things, you’re not alone. Fortunately, there are plenty of free resources to help you get started with learning how to build enterprise-quality JavaScript applications.&lt;/p&gt; &lt;p&gt;&lt;span id="more-698117"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;The other great piece of news is that the JavaScript framework you choose shouldn&amp;#8217;t have an impact on your application&amp;#8217;s user experience in the end. If you&amp;#8217;re putting your content and information architecture first, the framework becomes simply an implementation detail. Speaking from personal experience, it&amp;#8217;s easy to get excited about a specific framework, but that can lead to long-term disappointment in an environment that changes rapidly. Instead, understanding JavaScript at its core will prepare you for quality web development well into the future.&lt;/p&gt; &lt;p&gt;With that in mind, I wanted to break down an approach that can help you prepare for the world of front-end development. Many of these areas I&amp;#8217;ll discuss are common across the entire ecosystem of JavaScript development, and the skills learned here are transferable. Instead of only explaining how to start with these, I also wanted to compile a list of resources that can be valuable for getting started.&lt;/p&gt; &lt;p&gt;I look at the application developer growth process as having two basic steps. In the first step, you learn the JavaScript ecosystem, and then web application architecture. Learning about the JavaScript ecosystem involves learning JavaScript and practicing JavaScript coding. You can then build your first &lt;a href="https://developers.redhat.com/blog/category/node-js/"&gt;Node.js&lt;/a&gt; application.&lt;/p&gt; &lt;p&gt;The second step, understanding web application architecture, involves two stages as well. You need to transition your JavaScript skills into building a web application and making architectural decisions for your code. Then, you can make build and deployment decisions for your application. Let&amp;#8217;s take these steps one-by-one. I won&amp;#8217;t go into too many details, I’ll just outline the steps and provide resources that can help with making these choices.&lt;/p&gt; &lt;h2&gt;The JavaScript ecosystem&lt;/h2&gt; &lt;p&gt;We&amp;#8217;ll start with the first step&amp;#8217;s two stages, which lead to you writing your first Node.js application.&lt;/p&gt; &lt;h3&gt;Learn JavaScript and practice writing JavaScript code&lt;/h3&gt; &lt;p&gt;The Mozilla Developer Network (MDN) has a great resource for coming up to speed on JavaScript. &lt;a target="_blank" rel="nofollow" href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/A_re-introduction_to_JavaScript"&gt;This JavaScript reintroduction&lt;/a&gt; can help with a high-level overview of the basics and it takes 30–60 minutes to complete. Once you are familiar with the basics, it&amp;#8217;s important to dive deeper into the language. This part will take time, but understanding the power of JavaScript and some quirks of the language will prove to be invaluable.&lt;/p&gt; &lt;p&gt;JavaScript understanding also provides a solid foundation for any front-end development effort. All frameworks that target browsers end up using JavaScript in some form or another in order to accomplish interactivity. For a deeper dive, the MDN documentation provides a much more &lt;a target="_blank" rel="nofollow" href="https://developer.mozilla.org/en-US/docs/Learn/Getting_started_with_the_web"&gt;in-depth tutorial&lt;/a&gt;. I&amp;#8217;ve also found &lt;a target="_blank" rel="nofollow" href="https://github.com/getify/You-Dont-Know-JS/blob/2nd-ed/README.md"&gt;You don&amp;#8217;t know JS Yet&lt;/a&gt; to be an indispensable resource for developers expanding their JavaScript knowledge. The author describes this resource as &amp;#8220;a series of books diving deep into the core mechanisms of the JavaScript language.&amp;#8221;&lt;/p&gt; &lt;h3&gt;Building your first Node application&lt;/h3&gt; &lt;p&gt;Now that you have a grasp on the language, it&amp;#8217;s likely that the tutorials mentioned above resulted in a Node application to run your JavaScript. If not, it&amp;#8217;s helpful to understand the Node.js ecosystem. Browsers can run JavaScript without any help, but a web application that builds upon open source libraries and takes advantage of compiling and bundling assets is essential. This need requires the use of Node.js. To get started with Node.js, I&amp;#8217;d recommend starting by exploring Node with this &lt;a target="_blank" rel="nofollow" href="https://nodejs.dev/introduction-to-nodejs"&gt;introduction to Node.js&lt;/a&gt;. After that, &lt;a target="_blank" rel="nofollow" href="https://nodejs.dev/"&gt;Nodejs.dev&lt;/a&gt; also has information on how to install Node.js locally and get started.&lt;/p&gt; &lt;p&gt;Node can be used to execute JavaScript files outside the browser. It is also a key part of building and working with web applications. Node includes a package manager called NPM, which you might have heard of. A key part of NPM is the &lt;code&gt;package.json&lt;/code&gt; file that is described in detail also on the &lt;a target="_blank" rel="nofollow" href="https://nodejs.dev/the-package-json-guide"&gt;Nodejs.dev site&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Most developers will become very familiar with &lt;a target="_blank" rel="nofollow" href="https://docs.npmjs.com/cli/init"&gt;running &lt;code&gt;npm init&lt;/code&gt;&lt;/a&gt; in an empty directory. This action is almost always the first step in building a Node-based web application. Once the &lt;code&gt;package.json&lt;/code&gt; file exists, you can add commands to the &lt;code&gt;scripts: {}&lt;/code&gt; section to execute commands. For example, you could add something like this:&lt;/p&gt; &lt;pre&gt;"scripts": { "hello": "echo \"hello\"" }&lt;/pre&gt; &lt;p&gt;Save the &lt;code&gt;package.json&lt;/code&gt; file. Then, from the command line, run:&lt;/p&gt; &lt;pre&gt;$ npm run hello&lt;/pre&gt; &lt;p&gt;You should see the output: &lt;code&gt;"hello"&lt;/code&gt;. The scripts section of this file is powerful. I encourage you to become familiar with &lt;code&gt;package.json&lt;/code&gt; and how to execute commands using it.&lt;/p&gt; &lt;p&gt;Now that you have JavaScript foundations and an understanding of how to use Node.js at a high level, it&amp;#8217;s time to start building your JavaScript web application. There are many choices to make, but without going too far down this rabbit hole, let’s jump into the next steps.&lt;/p&gt; &lt;h2&gt;Understanding web application architecture&lt;/h2&gt; &lt;p&gt;Now let&amp;#8217;s get into the second step&amp;#8217;s two stages, which lead to making your build and deployment decisions for your application.&lt;/p&gt; &lt;h3&gt;Transition JavaScript skills to web applications and their architecture&lt;/h3&gt; &lt;p&gt;Putting thought into your application architecture before you write a single line of code is an important starting point. I&amp;#8217;ve seen many applications refactored when the developer didn&amp;#8217;t consider how their application would scale. A component folder with only five files looks organized, but once there are 100 files, it&amp;#8217;s hard to find what you are looking for. Any decision that will impact every single JavaScript file you potentially create should be carefully considered up-front.&lt;/p&gt; &lt;p&gt;It&amp;#8217;s easy to become overwhelmed by this process and get stuck in an indecision loop. You can break out of that by identifying established tooling and learning from the examples of others who have done this time and again. To this end, as you make many decisions while building your software, these are good issues to consider before writing any code:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;JavaScript framework choice&lt;/li&gt; &lt;li&gt;File/folder structure for expansion&lt;/li&gt; &lt;li&gt;CSS architecture&lt;/li&gt; &lt;li&gt;Typescript or not&lt;/li&gt; &lt;li&gt;Code linting&lt;/li&gt; &lt;li&gt;Test approach&lt;/li&gt; &lt;li&gt;Routing&lt;/li&gt; &lt;li&gt;State management and caching layer&lt;/li&gt; &lt;/ul&gt; &lt;h3&gt;Make build and deployment decisions for your application&lt;/h3&gt; &lt;p&gt;Once your basic code architecture decisions are made, you&amp;#8217;ll need to decide on how developers will build and work with the code. You&amp;#8217;ll also need to look at how the final code will be compiled for production delivery. Earlier choices about frameworks can make these next decisions easier: There are often build tools that come naturally with those frameworks.&lt;/p&gt; &lt;p&gt;I have also found that these decisions are easier to change later on because these layers generally sit outside of the code. Choosing standard tooling options such as webpack or gulp helps quite a bit when considering the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Local developer environment&lt;/li&gt; &lt;li&gt;Source maps&lt;/li&gt; &lt;li&gt;Module bundler&lt;/li&gt; &lt;li&gt;Production optimization&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;On the &lt;a target="_blank" rel="nofollow" href="https://www.patternfly.org/"&gt;PatternFly&lt;/a&gt; team, we&amp;#8217;ve put quite a bit of energy and our combined experience into documenting and implementing web application architecture. Our goal is to help teams get started using PatternFly quickly. If you&amp;#8217;re not familiar with PatternFly, it&amp;#8217;s an open source design system with guidelines, resources, and more to help you give your application a professional look and feel.&lt;/p&gt; &lt;p&gt;We&amp;#8217;ve more recently focused on delivering React-based applications since we found that the majority of our users were standardizing on that framework. To get started with ReactJS, I&amp;#8217;d encourage you to review the &lt;a target="_blank" rel="nofollow" href="https://reactjs.org/docs/getting-started.html"&gt;Getting Started page&lt;/a&gt; on &lt;a target="_blank" rel="nofollow" href="http://reactjs.org"&gt;reactjs.org&lt;/a&gt;. If you are a designer and want to start learning more about ReactJS development, &lt;a target="_blank" rel="nofollow" href="https://reactfordesigners.com/"&gt;React for designers&lt;/a&gt; is another great resource.&lt;/p&gt; &lt;p&gt;Finally, if you&amp;#8217;d like to see all of this in action, check out a &lt;a target="_blank" rel="nofollow" href="https://github.com/patternfly/patternfly-react-seed"&gt;ReactJS starter application&lt;/a&gt; for getting started with PatternFly.&lt;/p&gt; &lt;h2&gt;Final thought&lt;/h2&gt; &lt;p&gt;The JavaScript ecosystem is a lot of fun to work with, but it changes rapidly. While that can be overwhelming to many of us who like stability, focusing on the basics and then applying that core knowledge to your web applications will help you be a successful web application developer.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F04%2F22%2Fgetting-started-with-javascript-application-development%2F&amp;#38;linkname=Getting%20started%20with%20JavaScript%20application%20development" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F04%2F22%2Fgetting-started-with-javascript-application-development%2F&amp;#38;linkname=Getting%20started%20with%20JavaScript%20application%20development" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F04%2F22%2Fgetting-started-with-javascript-application-development%2F&amp;#38;linkname=Getting%20started%20with%20JavaScript%20application%20development" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F04%2F22%2Fgetting-started-with-javascript-application-development%2F&amp;#38;linkname=Getting%20started%20with%20JavaScript%20application%20development" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F04%2F22%2Fgetting-started-with-javascript-application-development%2F&amp;#38;linkname=Getting%20started%20with%20JavaScript%20application%20development" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F04%2F22%2Fgetting-started-with-javascript-application-development%2F&amp;#38;linkname=Getting%20started%20with%20JavaScript%20application%20development" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F04%2F22%2Fgetting-started-with-javascript-application-development%2F&amp;#38;linkname=Getting%20started%20with%20JavaScript%20application%20development" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F04%2F22%2Fgetting-started-with-javascript-application-development%2F&amp;#038;title=Getting%20started%20with%20JavaScript%20application%20development" data-a2a-url="https://developers.redhat.com/blog/2020/04/22/getting-started-with-javascript-application-development/" data-a2a-title="Getting started with JavaScript application development"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/04/22/getting-started-with-javascript-application-development/"&gt;Getting started with JavaScript application development&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/Y7QIgrjUpDM" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;For many developers who have never built a JavaScript web application before, the first steps can be daunting. Our development team has the opportunity to interact with both students that are just getting started and developers with lengthy experience building out complex applications. Even seasoned back-end developers often ask where they can get started with [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/04/22/getting-started-with-javascript-application-development/"&gt;Getting started with JavaScript application development&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;</summary><post-id xmlns="com-wordpress:feed-additions:1">698117</post-id><dc:creator>Dana Gutride</dc:creator><dc:date>2020-04-22T07:00:46Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2020/04/22/getting-started-with-javascript-application-development/</feedburner:origLink></entry><entry><title>Red Hat Summit 2020 - Ask the Experts: Hybrid Multicloud Pitfalls</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/5rWpTr2P068/red-hat-summit-2020-ask-the-experts-hybrid-multicloud-pitfalls.html" /><category term="cloud" scheme="searchisko:content:tags" /><category term="conference" scheme="searchisko:content:tags" /><category term="feed_group_name_global" scheme="searchisko:content:tags" /><category term="feed_name_ericschabell" scheme="searchisko:content:tags" /><category term="FUSE" scheme="searchisko:content:tags" /><category term="JBoss" scheme="searchisko:content:tags" /><category term="openshift" scheme="searchisko:content:tags" /><author><name>Eric D. Schabell</name></author><id>searchisko:content:id:jbossorg_blog-red_hat_summit_2020_ask_the_experts_hybrid_multicloud_pitfalls</id><updated>2020-04-21T05:00:14Z</updated><published>2020-04-21T05:00:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-H7ZvSF3ZqxY/XmoTVcPCGWI/AAAAAAAAw-M/b0S7OheY2moOxjM4LIRrcYjd87jWA69-ACPcBGAYYCw/s1600/summit-virtual-event.jpeg" imageanchor="1" style="clear: left; float: left; margin-bottom: 1em; margin-right: 1em;"&gt;&lt;img alt="Red Hat Summit" border="0" data-original-height="400" data-original-width="800" height="160" src="https://1.bp.blogspot.com/-H7ZvSF3ZqxY/XmoTVcPCGWI/AAAAAAAAw-M/b0S7OheY2moOxjM4LIRrcYjd87jWA69-ACPcBGAYYCw/s320/summit-virtual-event.jpeg" title="" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;This year the annual event &lt;a href="http://redhat.com/en/summit" target="_blank"&gt;Red Hat Summit&lt;/a&gt; is going to be &lt;a href="https://www.schabell.org/2020/03/red-hat-summit-2020-now-free-virtual-event.html" target="_blank"&gt;virtual and free for all to attend&lt;/a&gt; this year from 28-29 April 2020.&lt;br /&gt;&lt;br /&gt;The &lt;a href="https://www.redhat.com/en/summit/agenda/agenda-at-a-glance" target="_blank"&gt;agenda is online&lt;/a&gt; and you can &lt;a href="https://summit.redhat.com/conference/sessions" target="_blank"&gt;search for your favorite&lt;/a&gt; topic, session type, or speakers too.&lt;br /&gt;&lt;br /&gt;An interesting aspect of this huge event is not only that it's online, but that it's going to span all three regions around the globe. You can watch the sessions, participate in hands-on labs, enjoy keynontes, and event ask experts live questions on specific topics up for discussion. You get to do all that in the following regions:&lt;br /&gt;&lt;br /&gt;&lt;ul style="text-align: left;"&gt;&lt;li&gt;NA + LATAM&lt;/li&gt;&lt;li&gt;EMEA&lt;/li&gt;&lt;li&gt;APAC&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;What this means for you is that if you are adventurous, you can catch the sessions you want to see in your timezone and solve conflicts by swinging back around in one of the other timezones. The best of both worlds awaits you at this showcase of open source technologies.&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;What can I offer you at Red Hat Summit 2020?&lt;br /&gt;&lt;a name='more'&gt;&lt;/a&gt;&lt;br /&gt;This year, not only can you catch my session with Christina Lin, &lt;i&gt;Concept to Reality: An Advanced Agile Integration Blueprint, &lt;/i&gt;but you can also join me with Roel Hodzelmans in an &lt;i&gt;Ask the Experts&lt;/i&gt;&amp;nbsp;session.&lt;br /&gt;&lt;a href="https://1.bp.blogspot.com/-nmPa6b86VWo/XpbK3NUGqCI/AAAAAAAAxC0/hgbqZKGq0U4W0nnxeceP7m-suk2DhqJQwCNcBGAsYHQ/s1600/Screenshot%2B2020-04-15%2Bat%2B10.50.16.png" imageanchor="1" style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"&gt;&lt;img alt="Concept to reality" border="0" data-original-height="902" data-original-width="1600" height="180" src="https://1.bp.blogspot.com/-nmPa6b86VWo/XpbK3NUGqCI/AAAAAAAAxC0/hgbqZKGq0U4W0nnxeceP7m-suk2DhqJQwCNcBGAsYHQ/s320/Screenshot%2B2020-04-15%2Bat%2B10.50.16.png" title="" width="320" /&gt;&lt;/a&gt;&lt;br /&gt;Our session is going to be run in all three regions as follows:&lt;br /&gt;&lt;br /&gt;&lt;h3 style="text-align: left;"&gt;&lt;b&gt;&lt;i&gt;Concept to reality: An advanced agile integration blueprint&lt;/i&gt;&lt;/b&gt;&lt;/h3&gt;&lt;i&gt;Are you all in on the concept of agile integration or just getting your toe in the water? Are you an expert or just getting started with concepts like integration, microservices, message integration, process integration, APIs, and all the things that make your customers experience the best it can be?&lt;/i&gt;&lt;br /&gt;&lt;i&gt;&lt;br /&gt;&lt;/i&gt;&lt;i&gt;In this breakout session, there's something for all levels. We'll:&lt;/i&gt;&lt;br /&gt;&lt;i&gt;&lt;br /&gt;&lt;/i&gt;&lt;i&gt;• Walk you through the architecture concepts with whiteboard diagrams, easy-to-grasp images, with a bottom-up approach to connecting the dots of integration architecture concepts.&lt;/i&gt;&lt;br /&gt;&lt;i&gt;• Take a look at an integration architecture blueprint based on 3 successful customer integration solutions.&lt;/i&gt;&lt;br /&gt;&lt;i&gt;• Present research results on these solution architectures for a clear blueprint for matching them to your own architectures or helping solidify your plans for architecting successful integration solutions.&lt;/i&gt;&lt;br /&gt;&lt;i&gt;&lt;br /&gt;&lt;/i&gt;&lt;i&gt;&lt;a href="https://summit.redhat.com/conference/sessions/details/c8c8008f-6e4f-45dc-84c5-647d7abc63a4?sb=false" target="_blank"&gt;Location: NA + LATAM (EDT timezone)&lt;/a&gt;&lt;/i&gt;&lt;br /&gt;&lt;i&gt;Date: Tue, 28 April 2020&lt;/i&gt;&lt;br /&gt;&lt;i&gt;Time: 16:00-17:00&lt;/i&gt;&lt;br /&gt;&lt;br /&gt;&lt;i&gt;&lt;a href="https://summit.redhat.com/conference/sessions/details/fcde0cdc-3022-480a-bd89-55957afc8536?sb=false" target="_blank"&gt;Location: EMEA (CET timezone)&lt;/a&gt;&lt;/i&gt;&lt;br /&gt;&lt;i&gt;Date: Wed, 29 April 2020&lt;/i&gt;&lt;br /&gt;&lt;i&gt;Time: 07:00-08:00&lt;/i&gt;&lt;br /&gt;&lt;br /&gt;&lt;i&gt;&lt;a href="https://summit.redhat.com/conference/sessions/details/afbbfd0a-1702-49c5-9062-211cfbf6271d?sb=false" target="_blank"&gt;Location: APAC (SGT timezone)&lt;/a&gt;&lt;/i&gt;&lt;br /&gt;&lt;i&gt;Date: Wed, 29 April 2020&lt;/i&gt;&lt;br /&gt;&lt;i&gt;Time: 12:00-13:00&lt;/i&gt;&lt;br /&gt;&lt;a href="https://1.bp.blogspot.com/-FiuZUtQ9Wuo/XpbZMVXKfSI/AAAAAAAAxDA/WCyhk7CCrWgS7v27Wl8Ed_pN3UnTOVsegCNcBGAsYHQ/s1600/Screenshot%2B2020-04-15%2Bat%2B11.51.35.png" imageanchor="1" style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"&gt;&lt;img alt="hybrid multicloud pitfalls" border="0" data-original-height="899" data-original-width="1600" height="179" src="https://1.bp.blogspot.com/-FiuZUtQ9Wuo/XpbZMVXKfSI/AAAAAAAAxDA/WCyhk7CCrWgS7v27Wl8Ed_pN3UnTOVsegCNcBGAsYHQ/s320/Screenshot%2B2020-04-15%2Bat%2B11.51.35.png" title="" width="320" /&gt;&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;Our ask the experts session will run only in EMEA once:&lt;br /&gt;&lt;br /&gt;&lt;h3 style="text-align: left;"&gt;&lt;i&gt;&lt;b&gt;Ask the Experts: Hybrid Multicloud Pitfalls&lt;/b&gt;&lt;/i&gt;&lt;/h3&gt;&lt;i&gt;The daily hype is all around you. From cloud, hybrid cloud, to hybrid multicloud, you’re told this is the way to ensure a digital future for your business. These choices you’ve got to make don’t preclude the daily work of enhancing your customer's experience and agile delivery of those applications. Let us take you on a journey, looking closely at what hybrid multicloud means for your business, the decisions being made about delivering applications, and dealing with legacy applications, likely the most important resources to your business. Join us for insights into real customer experiences and discussions around the three top lessons learned as they transitioned into hybrid multicloud environments.&lt;/i&gt;&lt;br /&gt;&lt;i&gt;&lt;br /&gt;&lt;/i&gt;&lt;i&gt;Note: The speakers have spent the last 6 years working with customers making their digital journeys a reality and speak first hand about the top lessons learned deploying new and existing applications.&lt;/i&gt;&lt;br /&gt;&lt;i&gt;&lt;br /&gt;&lt;/i&gt;&lt;i&gt;&lt;a href="https://www.redhat.com/en/summit/agenda/agenda-at-a-glance" target="_blank"&gt;Location: EMEA (CET timezone)&lt;/a&gt;&lt;/i&gt;&lt;br /&gt;&lt;i&gt;Date: Wed, 29 April 2020&lt;/i&gt;&lt;br /&gt;&lt;i&gt;Time: 18:00 - 18:30&lt;/i&gt;&lt;br /&gt;&lt;i&gt;Moderator: Roel Hodzelmans&lt;/i&gt;&lt;br /&gt;&lt;i&gt;&lt;br /&gt;&lt;/i&gt;Hope to see you there at one of our sessions or at the ask the experts event. If there are any questions after attending any of the above, &lt;a href="https://www.schabell.org/p/contact.html" target="_blank"&gt;please feel free to reach out.&lt;/a&gt;&lt;/div&gt;&lt;div class="feedflare"&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=S5TdOWumwAQ:or-uUnuQvos:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=S5TdOWumwAQ:or-uUnuQvos:63t7Ie-LG7Y"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=63t7Ie-LG7Y" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=S5TdOWumwAQ:or-uUnuQvos:4cEx4HpKnUU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=S5TdOWumwAQ:or-uUnuQvos:4cEx4HpKnUU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=S5TdOWumwAQ:or-uUnuQvos:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=S5TdOWumwAQ:or-uUnuQvos:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=S5TdOWumwAQ:or-uUnuQvos:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=S5TdOWumwAQ:or-uUnuQvos:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=S5TdOWumwAQ:or-uUnuQvos:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=S5TdOWumwAQ:or-uUnuQvos:gIN9vFwOqvQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=S5TdOWumwAQ:or-uUnuQvos:gIN9vFwOqvQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/schabell/jboss/~4/S5TdOWumwAQ" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/5rWpTr2P068" height="1" width="1" alt=""/&gt;</content><summary>This year the annual event Red Hat Summit is going to be virtual and free for all to attend this year from 28-29 April 2020. The agenda is online and you can search for your favorite topic, session type, or speakers too. An interesting aspect of this huge event is not only that it's online, but that it's going to span all three regions around the globe. You can watch the sessions, participate in h...</summary><dc:creator>Eric D. Schabell</dc:creator><dc:date>2020-04-21T05:00:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/schabell/jboss/~3/S5TdOWumwAQ/red-hat-summit-2020-ask-the-experts-hybrid-multicloud-pitfalls.html</feedburner:origLink></entry><entry><title>Red Hat CodeReady Workspaces 2.1: Improved cloud tools bring more languages, better flow</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/Fez34aT7_gs/" /><category term="Eclipse Che" /><category term="Kubernetes" /><category term="Microservices" /><category term="Quarkus" /><category term="Red Hat CodeReady Workspaces" /><category term="VS Code" /><category term="CodeReady Workspaces" /><category term="Gradle" /><category term="MicroProfile" /><category term="OpenShift Operator" /><category term="serverless" /><author><name>Florent Benoit</name></author><id>https://developers.redhat.com/blog/?p=704197</id><updated>2020-04-20T17:47:08Z</updated><published>2020-04-20T17:47:08Z</published><content type="html">&lt;p&gt;We are pleased to announce the release of &lt;a href="https://developers.redhat.com/products/codeready-workspaces/overview"&gt; Red Hat CodeReady Workspaces 2.1&lt;/a&gt;. Based on &lt;a href="https://www.eclipse.org/che/getting-started/cloud/?sc_cid=701f2000000RtqCAAS" target="_blank" target="_blank" rel="nofollow" noreferrer"&gt;Eclipse Che&lt;/a&gt;, its upstream project, CodeReady Workspaces is a &lt;a href="https://developers.redhat.com/openshift/"&gt;Red Hat OpenShift&lt;/a&gt;-native developer environment enabling developer teams for cloud-native development.&lt;/p&gt; &lt;p&gt;CodeReady Workspaces 2.1 is available now on OpenShift 3.11 and OpenShift 4.3+.&lt;/p&gt; &lt;p&gt;This new version introduces:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Dashboard:&lt;/strong&gt; A new onboarding flow.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Quarkus:&lt;/strong&gt; A new workspace gets you started with &lt;a href="https://developers.redhat.com/topics/quarkus/"&gt;Quarkus&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Languages:&lt;/strong&gt; The addition of .NET Core 3.1, Java 11, and Camel DSL (Apache Camel K).&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Other:&lt;/strong&gt; Editor and AirGap improvements.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;span id="more-704197"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;Last, but not least, CodeReady Workspaces 2.1 now always uses secure communications with HTTPS.&lt;/p&gt; &lt;h2&gt;&lt;b&gt;New onboarding flow&lt;/b&gt;&lt;/h2&gt; &lt;p&gt;CodeReady Workspaces 2.1 provides a new onboarding flow from its dashboard, as shown in Figure 1. This page appears by default when there is no workspace.&lt;/p&gt; &lt;div id="attachment_704387" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/04/img_5e8c1278e54cf.png"&gt;&lt;img aria-describedby="caption-attachment-704387" class="wp-image-704387 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/04/img_5e8c1278e54cf-1024x541.png" alt="CodeReady Workspaces Getting Started Dashboard page" width="640" height="338" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/04/img_5e8c1278e54cf-1024x541.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/04/img_5e8c1278e54cf-300x159.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/04/img_5e8c1278e54cf-768x406.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2020/04/img_5e8c1278e54cf.png 1600w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-704387" class="wp-caption-text"&gt;Figure 1: Create new workspaces faster with the new onboarding flow.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;The getting started page allows you to create a new workspace quickly, offering a single button to create the workspace without anything to configure. For example, there are no devfiles or options, making this the smoothest and easiest onboarding process for users. The new icons, titles, and descriptions also help you to identify the technology at a glance.&lt;/p&gt; &lt;h2&gt;&lt;b&gt;Overall workspace creation&lt;/b&gt;&lt;/h2&gt; &lt;p&gt;The dashboard now proposes options to enable/disable temporary storage and displays the &lt;a href="https://developers.redhat.com/topics/kubernetes/"&gt;Kubernetes&lt;/a&gt; namespace used when creating a workspace, as shown in Figure 2.&lt;/p&gt; &lt;div id="attachment_704397" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/04/img_5e8c1293b79ed.png"&gt;&lt;img aria-describedby="caption-attachment-704397" class="wp-image-704397" src="https://developers.redhat.com/blog/wp-content/uploads/2020/04/img_5e8c1293b79ed.png" alt="The CodeReady WorkSpaces 2.1 New Workspace -&amp;#62; Ready-To-Go Stack dialog box." width="640" height="509" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/04/img_5e8c1293b79ed.png 942w, https://developers.redhat.com/blog/wp-content/uploads/2020/04/img_5e8c1293b79ed-300x239.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/04/img_5e8c1293b79ed-768x611.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-704397" class="wp-caption-text"&gt;Figure 2: Set up temporary storage and view this workspace&amp;#8217;s Kubernetes namespace.&lt;/p&gt;&lt;/div&gt; &lt;h2&gt;&lt;b&gt;Quarkus workspace creation&lt;/b&gt;&lt;/h2&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/04/img_5e8c12b49d611.png"&gt;&lt;img class="wp-image-704407 alignleft" src="https://developers.redhat.com/blog/wp-content/uploads/2020/04/img_5e8c12b49d611.png" alt="" width="139" height="110" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;You can now create a Quarkus workspace from the getting started page. By default, this step provides a create, read, update, and delete (CRUD) service. This workspace contains ready-to-use commands to start developer mode or debug the service. It’s then easy to see live updates when doing code changes.&lt;/p&gt; &lt;p&gt;This workspace also contains the &lt;a href="https://github.com/redhat-developer/vscode-quarkus" target="_blank" target="_blank" rel="nofollow" noreferrer"&gt;Red Hat VS Code Quarkus plug-in&lt;/a&gt; to generate a new project, provide snippets, and so on as shown in Figures 3 and 4.&lt;/p&gt; &lt;div id="attachment_704417" style="width: 551px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/04/img_5e8c12c280dac.png"&gt;&lt;img aria-describedby="caption-attachment-704417" class="wp-image-704417 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/04/img_5e8c12c280dac.png" alt="CodeReady Workspaces 2.1 Red Hat VS Code Quarkus plug-in with &amp;#34;qu&amp;#34; typed at the prompt to show the options that start with &amp;#34;Qu.&amp;#34;" width="541" height="118" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/04/img_5e8c12c280dac.png 541w, https://developers.redhat.com/blog/wp-content/uploads/2020/04/img_5e8c12c280dac-300x65.png 300w" sizes="(max-width: 541px) 100vw, 541px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-704417" class="wp-caption-text"&gt;Figure 3: Generate your new Quarkus project quickly by selecting the features you need.&lt;/p&gt;&lt;/div&gt; &lt;div id="attachment_704427" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/04/img_5e8c12d1378cd.png"&gt;&lt;img aria-describedby="caption-attachment-704427" class="wp-image-704427 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/04/img_5e8c12d1378cd-1024x956.png" alt="CodeReady Workspaces 2.1 Quarkus workspace with the &amp;#34;Getting started with Quarkus&amp;#34; file displayed" width="640" height="598" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/04/img_5e8c12d1378cd-1024x956.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/04/img_5e8c12d1378cd-300x280.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/04/img_5e8c12d1378cd-768x717.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2020/04/img_5e8c12d1378cd.png 1130w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-704427" class="wp-caption-text"&gt;Figure 4: Browse the plug-in to access common VS Code commands.&lt;/p&gt;&lt;/div&gt; &lt;h2&gt;Language updates&lt;/h2&gt; &lt;p&gt;CodeReady Workspaces 2.1 offers the following language updates.&lt;/p&gt; &lt;h3&gt;&lt;b&gt;.NET 3.1&lt;/b&gt;&lt;/h3&gt; &lt;p&gt;This is a major update. The previous version of CodeReady Workspaces provided version 2.1.&lt;/p&gt; &lt;h3&gt;&lt;b&gt;Camel DSL (Apache Camel K)&lt;/b&gt;&lt;/h3&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/04/img_5e8c14501ac54.png"&gt;&lt;img class="wp-image-704477 alignleft" src="https://developers.redhat.com/blog/wp-content/uploads/2020/04/img_5e8c14501ac54.png" alt="" width="139" height="125" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href="https://camel.apache.org/camel-k/latest/index.html" target="_blank" target="_blank" rel="nofollow" noreferrer"&gt;Apache Camel K&lt;/a&gt; is a lightweight integration framework built from Apache Camel that runs natively on Kubernetes and is specifically designed for serverless and microservice architectures. Users of Camel K can now instantly run integration code written in Camel DSL on their preferred cloud platform, such as OpenShift.&lt;/p&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;h3&gt;&lt;b&gt;Java: Java 11 and Gradle&lt;/b&gt;&lt;/h3&gt; &lt;p&gt;&lt;a href="https://gradle.org/" target="_blank" target="_blank" rel="nofollow" noreferrer"&gt;Gradle&lt;/a&gt; support is now available as a build tool. Java workspaces can use Maven or Gradle when working on Java projects. Also, there is a new Java 11 plug-in in addition to the existing Java 8 plug-in. These two java versions have LTS support.&lt;/p&gt; &lt;p&gt;You can try Java 11 with a dedicated stack, including a user image based on Java 11. The &lt;code&gt;java&lt;/code&gt;/&lt;code&gt;javac&lt;/code&gt; tools are installed along with one container for IntelliSense using the &lt;a href="https://github.com/redhat-developer/vscode-java" target="_blank" target="_blank" rel="nofollow" noreferrer"&gt;Red Hat VS Code Java&lt;/a&gt; plug-in.&lt;/p&gt; &lt;h2&gt;&lt;b&gt;Air gap improvements&lt;/b&gt;&lt;/h2&gt; &lt;p&gt;By using OpenShift 4.3, it is now possible to follow &lt;a href="https://docs.openshift.com/container-platform/4.3/operators/olm-restricted-networks.html" target="_blank" target="_blank" rel="nofollow" noreferrer"&gt;the restricted network setup&lt;/a&gt; to configure a CodeReady Workspaces Operator. CRW is also compatible with the &lt;a href="https://docs.openshift.com/container-platform/4.2/operators/olm-restricted-networks.html" target="_blank" target="_blank" rel="nofollow" noreferrer"&gt;OpenShift 4.2 restricted network setup&lt;/a&gt;, though this option involves more manual steps.&lt;/p&gt; &lt;p&gt;When &lt;a href="https://developers.redhat.com/products/openshift" target="_blank" rel="noopener noreferrer"&gt;Red Hat OpenShift Container Platform&lt;/a&gt; is installed on restricted networks, also known as a disconnected cluster, the Operator Lifecycle Manager (OLM) can no longer use the default OperatorHub sources because they require full Internet connectivity. Cluster administrators can now disable those default sources and create local mirrors so that OLM can install and manage Operators from the local sources instead.&lt;/p&gt; &lt;h2&gt;&lt;b&gt;Editor improvements&lt;/b&gt;&lt;/h2&gt; &lt;p&gt;We have many improvements toward VS Code API compatibility. More plug-ins are now compliant with our internal editor based on top of Eclipse Theia. Also, there are many small enhancements; for example, the file tree, where empty space is reduced (Figures 5 and 6).&lt;/p&gt; &lt;div id="attachment_704447" style="width: 232px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/04/img_5e8c12f3c8860.png"&gt;&lt;img aria-describedby="caption-attachment-704447" class="wp-image-704447 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/04/img_5e8c12f3c8860.png" alt="Screenshot of the previous file tree's spacing" width="222" height="220" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/04/img_5e8c12f3c8860.png 222w, https://developers.redhat.com/blog/wp-content/uploads/2020/04/img_5e8c12f3c8860-150x150.png 150w" sizes="(max-width: 222px) 100vw, 222px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-704447" class="wp-caption-text"&gt;Figure 5: The previous version.&lt;/p&gt;&lt;/div&gt; &lt;div id="attachment_704457" style="width: 210px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/04/img_5e8c13058fb1f.png"&gt;&lt;img aria-describedby="caption-attachment-704457" class="wp-image-704457 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/04/img_5e8c13058fb1f.png" alt="Screenshot of the new file tree spacing" width="200" height="187" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-704457" class="wp-caption-text"&gt;Figure 6: The new version.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;In addition, terminal tabs now show the container name, as shown in Figure 7.&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/04/img_5e8c122bc9648.png"&gt;&lt;img class="alignnone wp-image-704377" src="https://developers.redhat.com/blog/wp-content/uploads/2020/04/img_5e8c122bc9648.png" alt="" width="819" height="54" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/04/img_5e8c122bc9648.png 1600w, https://developers.redhat.com/blog/wp-content/uploads/2020/04/img_5e8c122bc9648-300x20.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/04/img_5e8c122bc9648-768x51.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2020/04/img_5e8c122bc9648-1024x68.png 1024w" sizes="(max-width: 819px) 100vw, 819px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;And when you clone Git projects, there is no more prompt asking where to store the project to clone. The new default is in the &lt;code&gt;/projects&lt;/code&gt; folder.&lt;/p&gt; &lt;h2&gt;&lt;b&gt;Try CodeReady Workspaces 2.1 now&lt;/b&gt;&lt;/h2&gt; &lt;p&gt;CodeReady Workspaces 2.1 is available now on OpenShift 3.11 and OpenShift 4.x. To try it out:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;If you are using OpenShift 3.11, you can &lt;a href="https://access.redhat.com/documentation/en-us/red_hat_codeready_workspaces/2.1/html/installation_guide/installing-codeready-workspaces-on-openshift-3-using-the-operator_crw" target="_blank" target="_blank" rel="nofollow" noreferrer"&gt;find Installation instructions here&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;If you are using OpenShift 4.x, you can install directly from OperatorHub. &lt;a target="_blank" rel="nofollow" href="https://access.redhat.com/documentation/en-us/red_hat_codeready_workspaces/2.1/html/installation_guide/installing-codeready-workspaces-on-ocp-4_crw"&gt;Follow the documentation here&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/products/codeready-workspaces/download"&gt;Download the Red Hat CodeReady Workspaces CLI&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;Go to the &lt;a href="https://developers.redhat.com/products/codeready-workspaces"&gt;Red Hat CodeReady Workspaces Product Page&lt;/a&gt;.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F04%2F20%2Fred-hat-codeready-workspaces-2-1-improved-cloud-tools-bring-more-languages-better-flow%2F&amp;#38;linkname=Red%20Hat%20CodeReady%20Workspaces%202.1%3A%20Improved%20cloud%20tools%20bring%20more%20languages%2C%20better%20flow" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F04%2F20%2Fred-hat-codeready-workspaces-2-1-improved-cloud-tools-bring-more-languages-better-flow%2F&amp;#38;linkname=Red%20Hat%20CodeReady%20Workspaces%202.1%3A%20Improved%20cloud%20tools%20bring%20more%20languages%2C%20better%20flow" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F04%2F20%2Fred-hat-codeready-workspaces-2-1-improved-cloud-tools-bring-more-languages-better-flow%2F&amp;#38;linkname=Red%20Hat%20CodeReady%20Workspaces%202.1%3A%20Improved%20cloud%20tools%20bring%20more%20languages%2C%20better%20flow" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F04%2F20%2Fred-hat-codeready-workspaces-2-1-improved-cloud-tools-bring-more-languages-better-flow%2F&amp;#38;linkname=Red%20Hat%20CodeReady%20Workspaces%202.1%3A%20Improved%20cloud%20tools%20bring%20more%20languages%2C%20better%20flow" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F04%2F20%2Fred-hat-codeready-workspaces-2-1-improved-cloud-tools-bring-more-languages-better-flow%2F&amp;#38;linkname=Red%20Hat%20CodeReady%20Workspaces%202.1%3A%20Improved%20cloud%20tools%20bring%20more%20languages%2C%20better%20flow" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F04%2F20%2Fred-hat-codeready-workspaces-2-1-improved-cloud-tools-bring-more-languages-better-flow%2F&amp;#38;linkname=Red%20Hat%20CodeReady%20Workspaces%202.1%3A%20Improved%20cloud%20tools%20bring%20more%20languages%2C%20better%20flow" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F04%2F20%2Fred-hat-codeready-workspaces-2-1-improved-cloud-tools-bring-more-languages-better-flow%2F&amp;#38;linkname=Red%20Hat%20CodeReady%20Workspaces%202.1%3A%20Improved%20cloud%20tools%20bring%20more%20languages%2C%20better%20flow" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F04%2F20%2Fred-hat-codeready-workspaces-2-1-improved-cloud-tools-bring-more-languages-better-flow%2F&amp;#038;title=Red%20Hat%20CodeReady%20Workspaces%202.1%3A%20Improved%20cloud%20tools%20bring%20more%20languages%2C%20better%20flow" data-a2a-url="https://developers.redhat.com/blog/2020/04/20/red-hat-codeready-workspaces-2-1-improved-cloud-tools-bring-more-languages-better-flow/" data-a2a-title="Red Hat CodeReady Workspaces 2.1: Improved cloud tools bring more languages, better flow"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/04/20/red-hat-codeready-workspaces-2-1-improved-cloud-tools-bring-more-languages-better-flow/"&gt;Red Hat CodeReady Workspaces 2.1: Improved cloud tools bring more languages, better flow&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/Fez34aT7_gs" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;We are pleased to announce the release of Red Hat CodeReady Workspaces 2.1. Based on Red Hat VS Code Quarkus plug-in to generate a new project, provide snippets, and so on as shown in Figures 3 and 4. Language updates CodeReady Workspaces 2.1 offers the following language updates. .NET 3.1 This is a major update. [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/04/20/red-hat-codeready-workspaces-2-1-improved-cloud-tools-bring-more-languages-better-flow/"&gt;Red Hat CodeReady Workspaces 2.1: Improved cloud tools bring more languages, better flow&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;</summary><post-id xmlns="com-wordpress:feed-additions:1">704197</post-id><dc:creator>Florent Benoit</dc:creator><dc:date>2020-04-20T17:47:08Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2020/04/20/red-hat-codeready-workspaces-2-1-improved-cloud-tools-bring-more-languages-better-flow/</feedburner:origLink></entry><entry><title>Hybrid clouds with JGroups and Skupper</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/eEgLWNr6Fx8/hybrid-clouds-with-jgroups-and-skupper.html" /><category term="feed_group_name_jgroups" scheme="searchisko:content:tags" /><category term="feed_name_belasblog" scheme="searchisko:content:tags" /><author><name>Bela Ban</name></author><id>searchisko:content:id:jbossorg_blog-hybrid_clouds_with_jgroups_and_skupper</id><updated>2020-04-20T10:45:59Z</updated><published>2020-04-20T10:45:00Z</published><content type="html">This is a follow-up post on [&lt;a href="http://belaban.blogspot.com/2019/12/spanning-jgroups-kubernetes-based.html"&gt;1&lt;/a&gt;], which showed how to connect two Kubernetes-based hybrid clouds (Google GKE and AWS EKS) with JGroups' TUNNEL and GossipRouter.&lt;br /&gt;&lt;br /&gt;Meanwhile, I've discovered &lt;a href="https://skupper.io/"&gt;Skupper&lt;/a&gt;, which (1) simplifies this task and (as a bonus) (2) encrypts the data exchanged between different clouds.&lt;br /&gt;&lt;br /&gt;In this post, I'm going to provide step-by-step instructions on how to connect a Google Kubernetes Engine (GKE) cluster with a cluster running on my local box.&lt;br /&gt;&lt;br /&gt;To run the demo yourself, you must have Skupper installed and a GKE account. However, any other cloud provider works, too.&lt;br /&gt;&lt;br /&gt;For the local cloud, I'm using docker-desktop. Alternatively, minikube could be used.&lt;br /&gt;&lt;br /&gt;So let's get cracking, and start the GKE cluster. To avoid having to switch contexts with kubectl all the time, I suggest start 2 separate shells and set KUBECONFIG for the public (GKE) cloud to a copy of config:&lt;br /&gt;&lt;br /&gt;Shell 1 (GKE): &lt;span style="font-family: &amp;quot;Courier New&amp;quot;, Courier, monospace;"&gt;cp .kube/config .kube/gke; export KUBECONFIG=$HOME/.kube/gke&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;Now start a GKE cluster (in shell 1):&lt;br /&gt;&lt;span style="font-family: &amp;quot;Courier New&amp;quot;, Courier, monospace;"&gt;gcloud container clusters create gke&amp;nbsp; --num-nodes 4&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;NOTE: if you use a different cloud, simply start your cluster and set kubectl's context to point to your cluster. The rest of the instructions below apply regardless of the specific cloud. &lt;br /&gt;&lt;br /&gt;This sets the Kubernetes context (shell 1):&lt;span style="font-family: &amp;quot;Courier New&amp;quot;, Courier, monospace;"&gt;&amp;nbsp;&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: &amp;quot;Courier New&amp;quot;, Courier, monospace;"&gt;kubectl config current-context&lt;br /&gt;gke_ispnperftest_us-central1-a_gke &lt;/span&gt;&lt;br /&gt;&lt;span style="font-size: small;"&gt;&lt;span style="font-family: &amp;quot;Courier New&amp;quot;, Courier, monospace;"&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;In shell 2, confirm that the context is local:&lt;br /&gt;&lt;span style="font-family: &amp;quot;Courier New&amp;quot;, Courier, monospace;"&gt;kubectl config current-context&lt;br /&gt;docker-desktop &lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: &amp;quot;Courier New&amp;quot;, Courier, monospace;"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;br /&gt;&lt;br /&gt;This shows Kubernetes is pointing to docker-desktop.&lt;br /&gt;&lt;br /&gt;Let's now start a GossipRouter in both clouds. To do this, we have to modify the YAML used in [1] slightly:&lt;br /&gt;&lt;span style="font-family: &amp;quot;Courier New&amp;quot;, Courier, monospace;"&gt;curl https://raw.githubusercontent.com/belaban/jgroups-docker/master/yaml/gossiprouter.yaml &amp;gt; gossiprouter.yaml&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;Now comment lines 42-43:&lt;br /&gt;&lt;span style="font-family: &amp;quot;Courier New&amp;quot;, Courier, monospace;"&gt;spec:&lt;br /&gt;#&amp;nbsp; type: LoadBalancer&lt;br /&gt;#&amp;nbsp; externalTrafficPolicy: Local&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;This is needed by Skupper which requires a service to be exposed as a &lt;b&gt;ClusterIP&lt;/b&gt; and not a &lt;b&gt;LoadBalancer&lt;/b&gt;.&lt;br /&gt;&lt;br /&gt;Now deploy it &lt;b&gt;in both shells&lt;/b&gt;:&lt;br /&gt;&lt;span style="font-family: &amp;quot;Courier New&amp;quot;, Courier, monospace;"&gt;kubectl apply -f gossiprouter.yaml&lt;br /&gt;deployment.apps/gossiprouter created&lt;br /&gt;service/gossiprouter created&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;Now it is time to initialize Skupper &lt;b&gt;in both shells&lt;/b&gt;:&lt;br /&gt;&lt;span style="font-family: &amp;quot;Courier New&amp;quot;, Courier, monospace;"&gt;skupper init&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: &amp;quot;Courier New&amp;quot;, Courier, monospace;"&gt;Waiting for LoadBalancer IP or hostname...&lt;br /&gt;Skupper is now installed in namespace 'default'.&amp;nbsp; Use 'skupper status' to get more information.&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;This installs some pods and services/proxies:&lt;br /&gt;&lt;span style="font-family: &amp;quot;Courier New&amp;quot;, Courier, monospace;"&gt;kubectl get po,svc&lt;br /&gt;NAME&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; READY&amp;nbsp;&amp;nbsp; STATUS&amp;nbsp;&amp;nbsp;&amp;nbsp; RESTARTS&amp;nbsp;&amp;nbsp; AGE&lt;br /&gt;pod/gossiprouter-6d6dcd6d79-q9p2f&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 1/1&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Running&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 4m6s&lt;br /&gt;pod/skupper-proxy-controller-dcf99c6bf-whns4&amp;nbsp;&amp;nbsp; 1/1&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Running&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 86s&lt;br /&gt;pod/skupper-router-7976948d9f-b58wn&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 1/1&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Running&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 2m50s&lt;br /&gt;&lt;br /&gt;NAME&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; TYPE&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; CLUSTER-IP&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; EXTERNAL-IP&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; PORT(S)&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; AGE&lt;br /&gt;service/gossiprouter&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; ClusterIP&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 10.27.252.196&amp;nbsp;&amp;nbsp; &amp;lt;none&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 8787/TCP,9000/TCP,12001/TCP&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 4m6s&lt;br /&gt;service/kubernetes&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; ClusterIP&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 10.27.240.1&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;none&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 443/TCP&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 27m&lt;br /&gt;service/skupper-controller&amp;nbsp;&amp;nbsp; LoadBalancer&amp;nbsp;&amp;nbsp; 10.27.241.112&amp;nbsp;&amp;nbsp; 35.223.80.171&amp;nbsp;&amp;nbsp;&amp;nbsp; 8080:30508/TCP&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 2m49s&lt;br /&gt;service/skupper-internal&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; LoadBalancer&amp;nbsp;&amp;nbsp; 10.27.243.17&amp;nbsp;&amp;nbsp;&amp;nbsp; 35.192.126.100&amp;nbsp;&amp;nbsp; 55671:30671/TCP,45671:31522/TCP&amp;nbsp;&amp;nbsp; 2m48s&lt;br /&gt;service/skupper-messaging&amp;nbsp;&amp;nbsp;&amp;nbsp; ClusterIP&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 10.27.247.95&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;none&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 5671/TCP&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 2m49s&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;Next, we create a connection token in one of the clouds. This creates a file containing a certificate and keys that allows a Skupper instance in one cluster to connect to a Skupper instance in another cluster.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;Note that this file must be kept secret as it contains the private keys of the (server) Skupper instance!&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;We only need to connect from one cloud to the other, Skupper will automatically create a bi-directional connection.&lt;br /&gt;&lt;br /&gt;Let's pick the public cloud (shell 1):&lt;br /&gt;&lt;span style="font-family: &amp;quot;Courier New&amp;quot;, Courier, monospace;"&gt;skupper connection-token gke.secret&lt;br /&gt;Connection token written to gke.secret&lt;/span&gt;&amp;nbsp;&lt;br /&gt;&lt;br /&gt;We now need to copy this file to the other (local) cloud. In my example, I'm using the home directory, but in real-life, this would have to be done secretly.&lt;br /&gt;&lt;br /&gt;The local Skupper instance now uses this file to connect to the Skupper instance in the public cluster and establish an encrypted VPN tunnel:&lt;br /&gt;&lt;span style="font-family: &amp;quot;Courier New&amp;quot;, Courier, monospace;"&gt;kupper connect gke.secret &lt;br /&gt;Skupper is now configured to connect to 35.192.126.100:55671 (name=conn1)&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;Now, we have to expose the GossipRouter service in each cloud to Skupper, so Skupper can create a local proxy of the service that transparently connects to the other cloud, via&amp;nbsp; a symbolic name:&lt;br /&gt;Shell 1:&lt;br /&gt;&lt;span style="font-family: &amp;quot;Courier New&amp;quot;, Courier, monospace;"&gt;skupper expose deployment gossiprouter --port 12001 --address gossiprouter-1&lt;/span&gt;&lt;br /&gt;Shell 2:&lt;br /&gt;&lt;span style="font-family: &amp;quot;Courier New&amp;quot;, Courier, monospace;"&gt;skupper expose deployment gossiprouter --port 12001 --address gossiprouter-2&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;b&gt;The symbolic names gossiprouter-1 and gossiprouter-2 are now available to any pod in both clusters.&lt;/b&gt;&lt;br /&gt;&lt;b&gt;Traffic sent from the local cluster to gossiprouter-1 in the public cluster is transparently (and encryptedly) forwarded by Skupper between the sites!&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;This means, we can set &lt;span style="font-family: &amp;quot;Courier New&amp;quot;, Courier, monospace;"&gt;TUNNEL_INITIAL_HOSTS&lt;/span&gt; (as used in the bridge cluster) to&lt;br /&gt;&lt;span style="font-family: &amp;quot;Courier New&amp;quot;, Courier, monospace;"&gt;gossiprouter1[12001],gossiprouter-2[12001]&lt;/span&gt;.&lt;br /&gt;&lt;br /&gt;This is used in &lt;a href="http://bridge.xml/"&gt;&lt;/a&gt;&lt;a href="https://github.com/belaban/jgroups-docker/blob/master/conf/bridge.xml"&gt;bridge.xml&lt;/a&gt;:&lt;br /&gt;&lt;span style="font-family: &amp;quot;Courier New&amp;quot;, Courier, monospace;"&gt;&amp;lt;TUNNEL bind_addr="match-interface:eth0,site-local"&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; gossip_router_hosts="${TUNNEL_INITIAL_HOSTS:127.0.0.1[12001]}"&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: &amp;quot;Courier New&amp;quot;, Courier, monospace;"&gt;...&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;Let's now run &lt;a href="https://github.com/belaban/JGroups/blob/master/src/org/jgroups/demos/RelayDemo.java"&gt;RelayDemo&lt;/a&gt; in the public and local clusters. This is the same procedure as in [1].&lt;br /&gt;&lt;br /&gt;Shell 1:&amp;nbsp;&lt;br /&gt;&lt;span style="font-family: &amp;quot;Courier New&amp;quot;, Courier, monospace;"&gt;curl https://raw.githubusercontent.com/belaban/jgroups-docker/master/yaml/nyc.yaml &amp;gt; public.yaml&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;Shell 2:&lt;br /&gt;&lt;span style="font-family: &amp;quot;Courier New&amp;quot;, Courier, monospace;"&gt;curl https://raw.githubusercontent.com/belaban/jgroups-docker/master/yaml/sfc.yaml &amp;gt; local.yaml&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;In both YAML files, change the number of replicas to 3 and the value of TUNNEL_INITIAL_HOSTS to &lt;span style="font-family: &amp;quot;Courier New&amp;quot;, Courier, monospace;"&gt;"gossiprouter-1[12001],gossiprouter-2[12001]"&lt;/span&gt;.&lt;br /&gt;&lt;br /&gt;Then start 3 pods in the public (NYC) and local (SFC) clusters:&lt;br /&gt;Shell 1:&lt;br /&gt;&lt;span style="font-family: &amp;quot;Courier New&amp;quot;, Courier, monospace;"&gt;kubectl apply -f public.yaml&lt;br /&gt;deployment.apps/nyc created&lt;br /&gt;service/nyc created&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;Shell 2:&lt;br /&gt;&lt;span style="font-family: &amp;quot;Courier New&amp;quot;, Courier, monospace;"&gt;kubectl apply -f local.yaml&lt;br /&gt;deployment.apps/sfc created&lt;br /&gt;service/sfc created&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;Verify that there are 3 pods running in each cluster.&lt;br /&gt;&lt;br /&gt;Let's now run RelayDemo on the local cluster:&lt;br /&gt;Shell 2:&amp;nbsp;&lt;br /&gt;&lt;span style="font-family: &amp;quot;Courier New&amp;quot;, Courier, monospace;"&gt;&amp;gt; kubectl get pods |grep sfc-&lt;br /&gt;sfc-7f448b7c94-6pb9m&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 1/1&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Running&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 2m44s&lt;br /&gt;sfc-7f448b7c94-d7zkp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 1/1&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Running&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 2m44s&lt;br /&gt;sfc-7f448b7c94-ddrhs&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 1/1&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Running&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 2m44s&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: &amp;quot;Courier New&amp;quot;, Courier, monospace;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style="font-family: &amp;quot;Courier New&amp;quot;, Courier, monospace;"&gt;&amp;gt; kubectl exec -it sfc-7f448b7c94-6pb9m bash&lt;br /&gt;bash-4.4$ relay.sh -props sfc.xml -name Local&lt;br /&gt;&lt;br /&gt;-------------------------------------------------------------------&lt;br /&gt;GMS: address=Local, cluster=RelayDemo, physical address=10.1.0.88:7801&lt;br /&gt;-------------------------------------------------------------------&lt;br /&gt;View: [sfc-7f448b7c94-6pb9m-4056|3]: sfc-7f448b7c94-6pb9m-4056, sfc-7f448b7c94-ddrhs-52643, sfc-7f448b7c94-d7zkp-11827, Local&lt;br /&gt;: hello&lt;br /&gt;: &amp;lt;&amp;lt; hello from Local&lt;br /&gt;&amp;lt;&amp;lt; response from sfc-7f448b7c94-6pb9m-4056&lt;br /&gt;&amp;lt;&amp;lt; response from sfc-7f448b7c94-ddrhs-52643&lt;br /&gt;&amp;lt;&amp;lt; response from sfc-7f448b7c94-d7zkp-11827&lt;br /&gt;&amp;lt;&amp;lt; response from Local&lt;br /&gt;&amp;lt;&amp;lt; response from nyc-6b4846f777-g2gqk-7743:nyc&lt;br /&gt;&amp;lt;&amp;lt; response from nyc-6b4846f777-7jm9s-23105:nyc&lt;br /&gt;&amp;lt;&amp;lt; response from nyc-6b4846f777-q2wrl-38225:nyc&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;We're first listing all pods, then exec into one of them.&lt;br /&gt;&lt;br /&gt;Next, we're running RelayDemo and send a message to all members of the local and remote clusters. We can see that we get a response from self (Local) and the other 3 members of the local (SFC) cluster, and we also get responses from the 3 members of the remote public cluster (NYC).&lt;br /&gt;&lt;br /&gt;JGroups load-balances messages across one of the two GossipRouters. Each time, the router is remote, Skupper forwards the traffic transparently over its VPN tunnel to the other site.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;[1] &lt;a href="http://belaban.blogspot.com/2019/12/spanning-jgroups-kubernetes-based.html"&gt;http://belaban.blogspot.com/2019/12/spanning-jgroups-kubernetes-based.html&lt;/a&gt;&lt;br /&gt;[2] &lt;a href="https://skupper.io/"&gt;https://skupper.io/&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/eEgLWNr6Fx8" height="1" width="1" alt=""/&gt;</content><summary>This is a follow-up post on [1], which showed how to connect two Kubernetes-based hybrid clouds (Google GKE and AWS EKS) with JGroups' TUNNEL and GossipRouter. Meanwhile, I've discovered Skupper, which (1) simplifies this task and (as a bonus) (2) encrypts the data exchanged between different clouds. In this post, I'm going to provide step-by-step instructions on how to connect a Google Kubernetes...</summary><dc:creator>Bela Ban</dc:creator><dc:date>2020-04-20T10:45:00Z</dc:date><feedburner:origLink>http://belaban.blogspot.com/2020/04/hybrid-clouds-with-jgroups-and-skupper.html</feedburner:origLink></entry><entry><title>Red Hat CodeReady Studio 12.14.0.GA and JBoss Tools 4.14.0.Final: Tool and UI updates</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/3szLv9btrCI/" /><category term="Containers" /><category term="Developer Tools" /><category term="DevOps" /><category term="Java" /><category term="Hibernate Tools" /><category term="Java 13" /><category term="jboss" /><category term="jdk" /><author><name>Jeff Maury</name></author><id>https://developers.redhat.com/blog/?p=708678</id><updated>2020-04-20T07:05:08Z</updated><published>2020-04-20T07:05:08Z</published><content type="html">&lt;p&gt;In &lt;a href="https://developers.redhat.com/blog/2020/04/20/red-hat-codeready-studio-12-14-0-ga-and-jboss-tools-4-14-0-final-openshift-application-explorer-view-feedback-loops-new-quarkus-tooling/"&gt;the previous article&lt;/a&gt;, I introduced &lt;a target="_blank" rel="nofollow" href="https://tools.jboss.org/downloads/jbosstools/2019-12/4.14.0.Final.html"&gt;JBoss Tools 4.14.0&lt;/a&gt; final and &lt;a href="https://developers.redhat.com/products/codeready-studio/overview" target="_blank" rel="noopener noreferrer"&gt;Red Hat CodeReady Studio 12.14&lt;/a&gt; for Eclipse 4.14 (2019-12), focusing on the big new features: OpenShift Application Explorer view, feedback loops, and new Quarkus tooling. This article focuses on the many smaller additions and updates. Here, I&amp;#8217;ll quickly run through the new features and small changes that improve the development experience in Hibernate Tools and the Java Developer Tools (JDT) extensions, which were updated for Java 13. I&amp;#8217;ll also highlight UI changes to platform views, dialogs, and toolbars.&lt;/p&gt; &lt;p&gt;&lt;span id="more-708678"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2 id="ht"&gt;Hibernate Tools updated&lt;/h2&gt; &lt;p&gt;The Hibernate 5.4 runtime provider now incorporates Hibernate Core version 5.4.12.Final and Hibernate Tools version 5.4.1.Final. The Hibernate 5.3 runtime provider now includes Hibernate Core version 5.3.15.Final and Hibernate Tools version 5.3.15.Final.&lt;/p&gt; &lt;h2&gt;Forge, JST, and VPE deprecated&lt;/h2&gt; &lt;p&gt;Forge, Java Server Tools (JST), and Visual Page Editor (VPE) were updated for this release, but we have no plans to maintain or add new features to future releases. We might remove them. We&amp;#8217;ve also deprecated the adapters for Red Hat JBoss Enterprise Application Server 4.3 and 5.0.&lt;/p&gt; &lt;h2&gt;Platform changes to views, dialogs, and toolbars&lt;/h2&gt; &lt;p&gt;We&amp;#8217;ve made a number of platform changes to views, dialogs, and toolbars.&lt;/p&gt; &lt;h3&gt;New views icon for accessing additional settings&lt;/h3&gt; &lt;p&gt;Almost every view has a menu that could contain additional configuration settings like filters, layout settings, and so on. The &lt;strong&gt;View&lt;/strong&gt; menu is often overlooked, so we&amp;#8217;ve replaced the old Chevron icon with a more modern equivalent, a vertical ellipsis. We expect the new icon, shown in Figure 1, will help more users locate and use the View menu.&lt;/p&gt; &lt;div id="attachment_697097" style="width: 284px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f32eec483c.png"&gt;&lt;img aria-describedby="caption-attachment-697097" class="wp-image-697097 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f32eec483c.png" alt="A screenshot of the new vertical ellipsis icon." width="274" height="101" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-697097" class="wp-caption-text"&gt;Figure 1. The new vertical ellipsis replaces the Chevron icon.&lt;/p&gt;&lt;/div&gt; &lt;h3&gt;Find actions replaces Quick Access with updated UI&lt;/h3&gt; &lt;p&gt;The feature formerly called &lt;strong&gt;Quick Access&lt;/strong&gt; has been renamed to &lt;strong&gt;Find actions&lt;/strong&gt;. We think the new name better describes what this feature does. We&amp;#8217;ve also changed the &lt;strong&gt;Find actions&lt;/strong&gt; UI to improve its usage and accessibility:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;The widget item is now a regular toolbar item (&lt;strong&gt;button-like&lt;/strong&gt;).&lt;/li&gt; &lt;li&gt;An icon is shown.&lt;/li&gt; &lt;li&gt;Right-clicking on the tool item works and shows typical actions such as &lt;strong&gt;Hide&lt;/strong&gt;.&lt;/li&gt; &lt;li&gt;Proposals are now a regular dialog, centered on the workbench.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;These changes will greatly improve user experience for people using a screen reader because those rely on a more standardized focus state. &lt;strong&gt;Find actions&lt;/strong&gt; also leverages all of the usual dialog accessibility features, such as making screens and toolbars moveable and resizable. We&amp;#8217;ve also improved proposal loading to avoid UI freezes during loading.&lt;/p&gt; &lt;p&gt;Let&amp;#8217;s walk through using &lt;strong&gt;Find actions&lt;/strong&gt; to run quick text searches, and locate workspace files.&lt;/p&gt; &lt;h4&gt;Do a quick text search in Find actions&lt;/h4&gt; &lt;p&gt;We&amp;#8217;ve extended &lt;strong&gt;Find actions&lt;/strong&gt; with the Quick Text Search feature, which shows potential text matches in file contents and proposals. Figure 2 shows a text search in progress.&lt;/p&gt; &lt;div id="attachment_697107" style="width: 559px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f330979231.png"&gt;&lt;img aria-describedby="caption-attachment-697107" class="wp-image-697107 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f330979231.png" alt="A screenshot of a text search." width="549" height="534" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f330979231.png 549w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f330979231-300x292.png 300w" sizes="(max-width: 549px) 100vw, 549px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-697107" class="wp-caption-text"&gt;Figure 2. A quick text search in progress.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;In the past, if you had not started the Quick Text Search bundle, you might miss those matches. Now, you can use &lt;strong&gt;Find actions&lt;/strong&gt; to activate Quick Text Search. All you need to do is find and select the &lt;strong&gt;Activate bundle for &amp;#8216;File content&amp;#8217;&lt;/strong&gt; proposals entry, as shown in Figure 3.&lt;/p&gt; &lt;div id="attachment_697117" style="width: 547px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f3321d1e98.png"&gt;&lt;img aria-describedby="caption-attachment-697117" class="wp-image-697117 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f3321d1e98.png" alt="A screenshot of the selected &amp;#34;Activate bundle for 'File content' proposals&amp;#34; entry." width="537" height="191" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f3321d1e98.png 537w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f3321d1e98-300x107.png 300w" sizes="(max-width: 537px) 100vw, 537px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-697117" class="wp-caption-text"&gt;Figure 3. Find and select the &amp;#8220;Activate bundle for &amp;#8216;File content&amp;#8217; proposals&amp;#8221; entry.&lt;/p&gt;&lt;/div&gt; &lt;h4&gt;Locate workspace files in Find actions&lt;/h4&gt; &lt;p&gt;&lt;strong&gt;Find actions&lt;/strong&gt; can now list matching file names from the workspace (similar to the &lt;strong&gt;Open Resource&lt;/strong&gt; dialog). Upon selection, the file is opened in the editor, as shown in Figure 4.&lt;/p&gt; &lt;div id="attachment_697127" style="width: 564px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f333e7cf85.png"&gt;&lt;img aria-describedby="caption-attachment-697127" class="wp-image-697127" src="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f333e7cf85.png" alt="A screenshot of the &amp;#34;bignumber.js&amp;#34; file selected in Find Actions." width="554" height="317" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f333e7cf85.png 554w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f333e7cf85-300x172.png 300w" sizes="(max-width: 554px) 100vw, 554px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-697127" class="wp-caption-text"&gt;Figure 44. Use Find actions to select a file and open it in the editor.&lt;/p&gt;&lt;/div&gt; &lt;h4&gt;Simple resource renaming inline&lt;/h4&gt; &lt;p&gt;&lt;strong&gt;Project Explorer&lt;/strong&gt; now offers inline renaming for simple resources. You can use the &lt;strong&gt;F2&lt;/strong&gt; shortcut or the &lt;strong&gt;Rename context&lt;/strong&gt; menu to rename normal resources, just as long as other files aren&amp;#8217;t affected by the rename. The new inline-renaming feature is shown in Figure 5.&lt;/p&gt; &lt;div id="attachment_697137" style="width: 254px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f3391c8412.png"&gt;&lt;img aria-describedby="caption-attachment-697137" class="wp-image-697137 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f3391c8412.png" alt="A screenshot of the inline-renaming feature selected in Project Explorer." width="244" height="98" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-697137" class="wp-caption-text"&gt;Figure 5. The new inline renaming feature in Project Explorer.&lt;/p&gt;&lt;/div&gt; &lt;h3&gt;Text editors&lt;/h3&gt; &lt;p&gt;Most of the text editors can now show problem markers like errors, warnings, and info markers inline. No more mousing around to see the actual error message. Figure 6 shows an example.&lt;/p&gt; &lt;div id="attachment_697147" style="width: 658px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f33b119949.png"&gt;&lt;img aria-describedby="caption-attachment-697147" class="wp-image-697147 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f33b119949.png" alt="Screenshot of A text editor identifies errors, warnings, and info markers highlighted in the code." width="648" height="218" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f33b119949.png 648w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f33b119949-300x101.png 300w" sizes="(max-width: 648px) 100vw, 648px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-697147" class="wp-caption-text"&gt;Figure 6. A text editor identifies errors, warnings, and info markers in the code.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;You can also see available quick fixes by clicking on the error or warning message, as shown in Figure 7.&lt;/p&gt; &lt;div id="attachment_697157" style="width: 658px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f33cccf663.png"&gt;&lt;img aria-describedby="caption-attachment-697157" class="wp-image-697157 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f33cccf663.png" alt="Screenshot showing that clicking on an error or warning message pops up a quick fix." width="648" height="216" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f33cccf663.png 648w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f33cccf663-300x100.png 300w" sizes="(max-width: 648px) 100vw, 648px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-697157" class="wp-caption-text"&gt;Figure 7. Clicking on an error or warning message pops up a quick fix.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;Use the &lt;strong&gt;General -&amp;#62; Editors -&amp;#62; Text Editors&lt;/strong&gt; preference page to enable this feature. You&amp;#8217;ll be asked to set the &lt;strong&gt;Show Code Minings for Annotations&lt;/strong&gt; preference to any of these options:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;None (default)&lt;/li&gt; &lt;li&gt;Errors only&lt;/li&gt; &lt;li&gt;Errors and Warnings&lt;/li&gt; &lt;li&gt;Errors, Warnings, and Info&lt;/li&gt; &lt;/ul&gt; &lt;h4&gt;Remove multiple spaces on backspace or delete&lt;/h4&gt; &lt;p&gt;If you use the &lt;strong&gt;Insert spaces for tabs&lt;/strong&gt; option in your text editor, you can now change the behavior of backspace and delete keys to remove multiple spaces at once, as if each space was a tab. The new setting is called &lt;strong&gt;Remove multiple spaces on backspace/delete&lt;/strong&gt;. You&amp;#8217;ll find it on the Text Editors preferences page, as shown in Figure 8.&lt;/p&gt; &lt;div id="attachment_697167" style="width: 658px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f33e86ea5f.png"&gt;&lt;img aria-describedby="caption-attachment-697167" class="wp-image-697167 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f33e86ea5f.png" alt="A screenshot of the &amp;#34;Remove multiple spaces on backspace/delete&amp;#34; option selected on the Text Editors preferences page." width="648" height="338" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f33e86ea5f.png 648w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f33e86ea5f-300x156.png 300w" sizes="(max-width: 648px) 100vw, 648px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-697167" class="wp-caption-text"&gt;Figure 8. Select the &amp;#8220;Remove multiple spaces on backspace/delete&amp;#8221; option on the Text Editors preferences page.&lt;/p&gt;&lt;/div&gt; &lt;h3&gt;Collapse All in Debug view&lt;/h3&gt; &lt;p&gt;We&amp;#8217;ve added a new &lt;strong&gt;Collapse All&lt;/strong&gt; button in the &lt;strong&gt;Debug&lt;/strong&gt; view. You can use this new button to collapse all of your project launches. Figure 9 shows the launch toolbar before collapsing.&lt;/p&gt; &lt;div id="attachment_697177" style="width: 410px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f340e73b15.png"&gt;&lt;img aria-describedby="caption-attachment-697177" class="wp-image-697177 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f340e73b15.png" alt="A screenshot of the expanded launch toolbar." width="400" height="283" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f340e73b15.png 400w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f340e73b15-300x212.png 300w" sizes="(max-width: 400px) 100vw, 400px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-697177" class="wp-caption-text"&gt;Figure 9. The launch toolbar before collapsing.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;And here&amp;#8217;s the list after collapsing, shown in Figure 10.&lt;/p&gt; &lt;div id="attachment_697187" style="width: 410px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f3426edd2d.png"&gt;&lt;img aria-describedby="caption-attachment-697187" class="wp-image-697187 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f3426edd2d.png" alt="A screenshot of the collapsed launch toolbar." width="400" height="142" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f3426edd2d.png 400w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f3426edd2d-300x107.png 300w" sizes="(max-width: 400px) 100vw, 400px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-697187" class="wp-caption-text"&gt;Figure 10. The launch toolbar after collapsing.&lt;/p&gt;&lt;/div&gt; &lt;h3&gt;Control characters in Console view&lt;/h3&gt; &lt;p&gt;We&amp;#8217;ve also updated the interpretation of control characters in the &lt;strong&gt;Console&lt;/strong&gt; view. You can now set the console to interpret the backslash (&lt;code&gt;\b&lt;/code&gt;) and carriage return (&lt;code&gt;\r&lt;/code&gt;) control characters. This feature is disabled by default. You can enable it on the &lt;strong&gt;Run/Debug -&amp;#62; Console&lt;/strong&gt; preference page. Figure 11 shows this new feature in action.&lt;/p&gt; &lt;div id="attachment_697197" style="width: 577px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f3446be3df.png"&gt;&lt;img aria-describedby="caption-attachment-697197" class="wp-image-697197 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f3446be3df.png" alt="A screenshot of the console with code." width="567" height="215" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f3446be3df.png 567w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f3446be3df-300x114.png 300w" sizes="(max-width: 567px) 100vw, 567px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-697197" class="wp-caption-text"&gt;Figure 11. The console can be set to interpret control characters.&lt;/p&gt;&lt;/div&gt; &lt;h3&gt;Improved themes and styling&lt;/h3&gt; &lt;p&gt;We&amp;#8217;ve improved UI form styling. Updates to Cascading Style Sheets (CSS) in ExpandableComposite and Section give you more control over styling these elements. In dark mode, both elements now integrate better with other form elements. Figure 12 shows UI forms styling prior to this release.&lt;/p&gt; &lt;div id="attachment_697207" style="width: 709px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f346b023d1.png"&gt;&lt;img aria-describedby="caption-attachment-697207" class="wp-image-697207 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f346b023d1.png" alt="A screenshot of UI forms." width="699" height="101" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f346b023d1.png 699w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f346b023d1-300x43.png 300w" sizes="(max-width: 699px) 100vw, 699px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-697207" class="wp-caption-text"&gt;Figure 12. The ExpandableComposite and Section forms prior to the new release.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;Figure 13 shows these forms in the new release.&lt;/p&gt; &lt;div id="attachment_697217" style="width: 705px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f3480b9534.png"&gt;&lt;img aria-describedby="caption-attachment-697217" class="wp-image-697217 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f3480b9534.png" alt="A screenshot of UI forms." width="695" height="99" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f3480b9534.png 695w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f3480b9534-300x43.png 300w" sizes="(max-width: 695px) 100vw, 695px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-697217" class="wp-caption-text"&gt;Figure 13. Updated UI forms in the new release.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;We&amp;#8217;ve also aligned the &lt;strong&gt;Perspective switcher&lt;/strong&gt; with normal toolbar styling and removed the special features seen in earlier releases. This change improves consistency in the appearance of the toolbar. It also reduces operating system (OS)-specific styling issues with this tool. Figure 14 shows the &lt;strong&gt;Perspective switcher&lt;/strong&gt; in the toolbar prior to this release.&lt;/p&gt; &lt;div id="attachment_697227" style="width: 710px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f3498973da.png"&gt;&lt;img aria-describedby="caption-attachment-697227" class="wp-image-697227 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f3498973da.png" alt="A screenshot of the old perspective switcher." width="700" height="123" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f3498973da.png 700w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f3498973da-300x53.png 300w" sizes="(max-width: 700px) 100vw, 700px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-697227" class="wp-caption-text"&gt;Figure 14. Perspective switcher in the toolbar.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;Figure 15 shows the new look.&lt;/p&gt; &lt;div id="attachment_697237" style="width: 652px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f34afbac9b.png"&gt;&lt;img aria-describedby="caption-attachment-697237" class="wp-image-697237" src="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f34afbac9b.png" alt="A screenshot of the updated perspective switcher." width="642" height="100" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f34afbac9b.png 700w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f34afbac9b-300x47.png 300w" sizes="(max-width: 642px) 100vw, 642px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-697237" class="wp-caption-text"&gt;Figure 15. Perspective switcher updated for the new JBoss Tools 4.14.0 release.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;We&amp;#8217;ve also updated the Dark theme to use more consistent colors and fewer shades of gray. Additionally, the widget&amp;#8217;s styling is no longer based on the selected view, which makes the UI more consistent.&lt;/p&gt; &lt;h2&gt;General updates&lt;/h2&gt; &lt;p&gt;We&amp;#8217;ve made a number of general updates to JBoss Tools 4.14.0, which I&amp;#8217;ll quickly review.&lt;/p&gt; &lt;h3&gt;Updated to Ant 1.10.7&lt;/h3&gt; &lt;p&gt;Eclipse has adopted Ant version 1.10.7, so we&amp;#8217;ve updated to the newer version. As a result of the update, the &lt;code&gt;ant-ui-plugin&lt;/code&gt; now recognizes and validates the Ant &lt;code&gt;include&lt;/code&gt; task. The &lt;code&gt;include&lt;/code&gt; task has been available in the Ant library since Ant 1.8.0.&lt;/p&gt; &lt;h3&gt;Updated to Java 13&lt;/h3&gt; &lt;p&gt;Eclipse supports Java 13 for the Eclipse 4.14 release. We&amp;#8217;ve accordingly updated to Java 13 for our Java Development Tools (JDT) extensions.&lt;/p&gt; &lt;h3&gt;Preview two new language features in JDK 13&lt;/h3&gt; &lt;p&gt;Two notable features included with the new release are &lt;a href="https://openjdk.java.net/jeps/354" target="_blank" target="_blank" rel="nofollow" noreferrer"&gt;JEP 354: Switch Expressions (preview)&lt;/a&gt;, and &lt;a href="https://openjdk.java.net/jeps/355" target="_blank" target="_blank" rel="nofollow" noreferrer"&gt;JEP 355: Text Blocks (preview)&lt;/a&gt;. Note that these are preview language features, so if you want to use them you&amp;#8217;ll need to turn on the &lt;strong&gt;Enable preview&lt;/strong&gt; option. See the &lt;a href="https://wiki.eclipse.org/Java13/Examples" target="_blank" target="_blank" rel="nofollow" noreferrer"&gt;Java 13 Examples wiki&lt;/a&gt; for an informal introduction to this support.&lt;/p&gt; &lt;p&gt;We&amp;#8217;ve added a keyboard shortcut (&lt;strong&gt;Ctrl+Shift+&amp;#8217;&lt;/strong&gt;) for creating text blocks in the Java Editor. Note that the new keyboard shortcut only works for Java projects that are compliant with Java 13 or higher, and which have the &lt;strong&gt;Enable preview&lt;/strong&gt; option selected. Additionally, this feature only works if the selection in the editor is not part of a string, a comment, or a text block. Consider the example in Figure 16.&lt;/p&gt; &lt;div id="attachment_697247" style="width: 382px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f34e931a8f.png"&gt;&lt;img aria-describedby="caption-attachment-697247" class="wp-image-697247 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f34e931a8f.png" alt="Screenshot of a preview." width="372" height="152" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f34e931a8f.png 372w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f34e931a8f-300x123.png 300w" sizes="(max-width: 372px) 100vw, 372px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-697247" class="wp-caption-text"&gt;Figure 16. The &amp;#8220;Enable preview&amp;#8221; option for text blocks.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;When you press the keyboard shortcut, you will see what&amp;#8217;s shown in Figure 17.&lt;/p&gt; &lt;div id="attachment_697257" style="width: 382px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f34ffbcf1d.png"&gt;&lt;img aria-describedby="caption-attachment-697257" class="wp-image-697257 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f34ffbcf1d.png" alt="Screenshot of another preview." width="372" height="179" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f34ffbcf1d.png 372w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f34ffbcf1d-300x144.png 300w" sizes="(max-width: 372px) 100vw, 372px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-697257" class="wp-caption-text"&gt;Figure 17. A preview for text blocks.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;You can also encompass selected text in a text block, as shown in Figure 18.&lt;/p&gt; &lt;div id="attachment_697267" style="width: 405px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f351ca2a92.png"&gt;&lt;img aria-describedby="caption-attachment-697267" class="wp-image-697267 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f351ca2a92.png" alt="Screenshot of a selected code block." width="395" height="161" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f351ca2a92.png 395w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f351ca2a92-300x122.png 300w" sizes="(max-width: 395px) 100vw, 395px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-697267" class="wp-caption-text"&gt;Figure 18. Selected code in a text block.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;Figure 19 displays what you will see when you execute the shortcut.&lt;/p&gt; &lt;div id="attachment_697277" style="width: 392px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f353e5253e.png"&gt;&lt;img aria-describedby="caption-attachment-697277" class="wp-image-697277 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f353e5253e.png" alt="Screenshot of new code after the shortcut has been applied." width="382" height="181" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f353e5253e.png 382w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f353e5253e-300x142.png 300w" sizes="(max-width: 382px) 100vw, 382px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-697277" class="wp-caption-text"&gt;Figure 19. Preview text in a text block.&lt;/p&gt;&lt;/div&gt; &lt;h3&gt;Improvements to the Java Editor&lt;/h3&gt; &lt;p&gt;We&amp;#8217;ve also improved the Java Editor itself, starting with a new cleanup action for removing unnecessary array creation. This new action removes explicit array creation for &lt;code&gt;varargs&lt;/code&gt; parameters, as shown in Figure 20.&lt;/p&gt; &lt;div id="attachment_697287" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f3560dfd3a.png"&gt;&lt;img aria-describedby="caption-attachment-697287" class="wp-image-697287" src="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f3560dfd3a.png" alt="Screenshot of the Java Editor selected to remove unnecessary arrays." width="640" height="469" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f3560dfd3a.png 720w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f3560dfd3a-300x220.png 300w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-697287" class="wp-caption-text"&gt;Figure 20. The new cleanup action in the Java Editor.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;Consider the code shown in Figure 21.&lt;/p&gt; &lt;div id="attachment_697297" style="width: 562px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f3577c6202.png"&gt;&lt;img aria-describedby="caption-attachment-697297" class="wp-image-697297 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f3577c6202.png" alt="A screenshot of code with unnecessary arrays." width="552" height="270" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f3577c6202.png 552w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f3577c6202-300x147.png 300w" sizes="(max-width: 552px) 100vw, 552px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-697297" class="wp-caption-text"&gt;Figure 21. Messy code in the Java Editor.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;Here&amp;#8217;s the code after cleanup, shown in Figure 22.&lt;/p&gt; &lt;div id="attachment_697307" style="width: 562px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f35911b1b9.png"&gt;&lt;img aria-describedby="caption-attachment-697307" class="wp-image-697307 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f35911b1b9.png" alt="A screenshot of the same code with arrays removed." width="552" height="270" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f35911b1b9.png 552w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f35911b1b9-300x147.png 300w" sizes="(max-width: 552px) 100vw, 552px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-697307" class="wp-caption-text"&gt;Figure 22. Cleaned-up code in the Java Editor.&lt;/p&gt;&lt;/div&gt; &lt;h4&gt;Reducing double negation&lt;/h4&gt; &lt;p&gt;The Java Editor has a new cleanup action called &lt;strong&gt;Push down negation&lt;/strong&gt; that reduces double negation by reverting arithmetic expressions, as shown in Figure 23. For instance, &lt;code&gt;!!isValid;&lt;/code&gt; becomes &lt;code&gt;isValid;&lt;/code&gt;, and &lt;code&gt;!(a != b);&lt;/code&gt; becomes &lt;code&gt;(a == b);&lt;/code&gt;.&lt;/p&gt; &lt;div id="attachment_697317" style="width: 425px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f35ab50f8e.png"&gt;&lt;img aria-describedby="caption-attachment-697317" class="wp-image-697317 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f35ab50f8e.png" alt="A screenshot of the selection for push-down negation." width="415" height="232" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f35ab50f8e.png 415w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f35ab50f8e-300x168.png 300w" sizes="(max-width: 415px) 100vw, 415px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-697317" class="wp-caption-text"&gt;Figure 23. Select the &amp;#8220;Push down negation&amp;#8221; option in the Java Editor.&lt;/p&gt;&lt;/div&gt; &lt;h4&gt;New templates for empty Java source files&lt;/h4&gt; &lt;p&gt;We&amp;#8217;ve made some basic templates available for populating empty Java source files. You&amp;#8217;ll find the new templates using the &lt;strong&gt;Content Assist&lt;/strong&gt; popup shown in Figure 24.&lt;/p&gt; &lt;div id="attachment_697327" style="width: 522px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f35c91365a.png"&gt;&lt;img aria-describedby="caption-attachment-697327" class="wp-image-697327 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f35c91365a.png" alt="Screenshot of a quick assist for creating classes." width="512" height="316" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f35c91365a.png 512w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f35c91365a-300x185.png 300w" sizes="(max-width: 512px) 100vw, 512px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-697327" class="wp-caption-text"&gt;Figure 24. Create a new class in an empty Java source file.&lt;/p&gt;&lt;/div&gt; &lt;h4&gt;Postfix completion&lt;/h4&gt; &lt;p&gt;Postfix completion is a new feature that allows certain kinds of language constructs to be applied to text that was previously entered. As an example, entering &lt;code&gt;"input text".var&lt;/code&gt; and selecting the &lt;strong&gt;var &amp;#8211; Creates a new variable&lt;/strong&gt; proposal results in &lt;code&gt;String name = "input text"&lt;/code&gt;. A different option is shown in Figure 25.&lt;/p&gt; &lt;div id="attachment_697337" style="width: 623px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f35e6138c5.png"&gt;&lt;img aria-describedby="caption-attachment-697337" class="wp-image-697337 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f35e6138c5.png" alt="Screenshot of a selection for &amp;#34;for - Creates a for statement.&amp;#34;" width="613" height="396" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f35e6138c5.png 613w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f35e6138c5-300x194.png 300w" sizes="(max-width: 613px) 100vw, 613px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-697337" class="wp-caption-text"&gt;Figure 25. Select &amp;#8220;for &amp;#8211; Create a for statement&amp;#8221; and see what happens.&lt;/p&gt;&lt;/div&gt; &lt;h4&gt;A new quickfix for try-with-resources&lt;/h4&gt; &lt;p&gt;We&amp;#8217;ve added a quickfix to create a &lt;code&gt;try-with-resources&lt;/code&gt; statement for selected lines of code. Selected lines must start with a declaration of one or more objects that implement &lt;code&gt;AutoCloseable&lt;/code&gt;. These declarations will then be added as the &lt;em&gt;resources&lt;/em&gt; within the &lt;code&gt;try-with-resources&lt;/code&gt; statement. If you select one or more statements that do not contain eligible resources (such as &lt;code&gt;Object&lt;/code&gt;s that don&amp;#8217;t implement &lt;code&gt;AutoCloseable&lt;/code&gt;), then all of the selected statements will be placed in the &lt;code&gt;try-with-resources&lt;/code&gt; body.&lt;/p&gt; &lt;p&gt;As an example, consider the following method before applying &lt;code&gt;try-with-resources&lt;/code&gt;, shown in Figure 26.&lt;/p&gt; &lt;div id="attachment_697347" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f360367016.png"&gt;&lt;img aria-describedby="caption-attachment-697347" class="wp-image-697347" src="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f360367016.png" alt="Screenshot of a method before applying try-with-resources." width="640" height="129" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f360367016.png 699w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f360367016-300x61.png 300w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-697347" class="wp-caption-text"&gt;Figure 26. A method before applying try-with-resources.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;Select all of the lines inside the method, followed by the keyboard shortcut, &lt;strong&gt;Ctrl+1&lt;/strong&gt;. Click &lt;strong&gt;Surround with try-with-resources&lt;/strong&gt; from the drop-down list shown in Figure 27.&lt;/p&gt; &lt;div id="attachment_697357" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f362aecdf2.png"&gt;&lt;img aria-describedby="caption-attachment-697357" class="wp-image-697357" src="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f362aecdf2.png" alt="A screenshot of the selection &amp;#34;Surround with try-with-resources&amp;#34;." width="640" height="223" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f362aecdf2.png 750w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f362aecdf2-300x104.png 300w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-697357" class="wp-caption-text"&gt;Figure 27. Select &amp;#8220;Surround with try-with-resources&amp;#8221; from the drop-down list.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;The code will be updated as shown in Figure 28.&lt;/p&gt; &lt;div id="attachment_697367" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f3644bdf4f.png"&gt;&lt;img aria-describedby="caption-attachment-697367" class="wp-image-697367" src="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f3644bdf4f.png" alt="A screenshot of the method surrounded by try-with-resouces." width="640" height="137" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f3644bdf4f.png 706w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f3644bdf4f-300x64.png 300w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-697367" class="wp-caption-text"&gt;Figure 28. The method is now surrounded by try-with-resources.&lt;/p&gt;&lt;/div&gt; &lt;h4&gt;Javadoc: Tag checking for dmodules&lt;/h4&gt; &lt;p&gt;We&amp;#8217;ve added support to check the Javadoc of a &lt;code&gt;module-info.java&lt;/code&gt; file and report missing and duplicate &lt;code&gt;@uses&lt;/code&gt; and &lt;code&gt;@provides&lt;/code&gt; tags, depending on the compiler settings. Access this feature at &lt;strong&gt;Preferences-&amp;#62;Java-&amp;#62;Compiler-&amp;#62;Javadoc&lt;/strong&gt;. Figure 29 shows the option to identify missing&lt;code&gt;@uses&lt;/code&gt; tags.&lt;/p&gt; &lt;div id="attachment_697377" style="width: 648px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f36a1e2113.png"&gt;&lt;img aria-describedby="caption-attachment-697377" class="wp-image-697377 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f36a1e2113.png" alt="A screenshot showing an alert for missing @uses tag." width="638" height="293" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f36a1e2113.png 638w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f36a1e2113-300x138.png 300w" sizes="(max-width: 638px) 100vw, 638px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-697377" class="wp-caption-text"&gt;Figure 29. Identity and fix a missing @uses tag.&lt;/p&gt;&lt;/div&gt; &lt;h3&gt;Updates to the Java Formatter&lt;/h3&gt; &lt;p&gt;We&amp;#8217;ve also made updates to the Java Formatter, which I&amp;#8217;ll describe next.&lt;/p&gt; &lt;h4&gt;Text block formatting&lt;/h4&gt; &lt;p&gt;The code formatter can now handle the new Text Blocks (preview) feature added in Java 13. It&amp;#8217;s controlled by the &lt;strong&gt;Text block indentation&lt;/strong&gt; setting, found in the Profile Editor&amp;#8217;s &lt;strong&gt;Indentation&lt;/strong&gt; section. The path for that is: &lt;strong&gt;Preferences-&amp;#62;Java-&amp;#62;Code Style-&amp;#62;Formatter-&amp;#62;Edit…​&lt;/strong&gt;.&lt;/p&gt; &lt;p&gt;By default, text-block lines are indented in the same way as wrapped code lines; that is, with two extra tabs relative to the starting indentation (or whatever you&amp;#8217;ve set as the default indentation for wrapped lines in the &lt;strong&gt;Line Wrapping&lt;/strong&gt; section). You can also set your preferences to use only one tab for indentation (&lt;strong&gt;Indent by one&lt;/strong&gt;), align all lines to the position of the opening quotes (&lt;strong&gt;Indent on column&lt;/strong&gt;), or preserve the original formatting (&lt;strong&gt;Do not touch&lt;/strong&gt;).&lt;/p&gt; &lt;div id="attachment_697387" style="width: 495px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f36bf4069b.png"&gt;&lt;img aria-describedby="caption-attachment-697387" class="wp-image-697387 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f36bf4069b.png" alt="Screenshot of a selection to &amp;#34;Default for wrapped lines&amp;#34;." width="485" height="221" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f36bf4069b.png 485w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f36bf4069b-300x137.png 300w" sizes="(max-width: 485px) 100vw, 485px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-697387" class="wp-caption-text"&gt;Figure 30. Select a default indentation for wrapped lines.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;Figure 30 shows the option to default for wrapped lines.&lt;/p&gt; &lt;h4&gt;Blank lines between Javadoc tags&lt;/h4&gt; &lt;p&gt;The code formatter can now divide Javadoc tags into groups by type (for example, &lt;code&gt;@param&lt;/code&gt;, &lt;code&gt;@throws&lt;/code&gt;, and &lt;code&gt;@returns&lt;/code&gt;) and separate these groups with blank lines. You can turn on this feature in the &lt;strong&gt;Comments &amp;#62; Javadocs&lt;/strong&gt; section, by checking the &lt;strong&gt;Blank lines between tags of different type&lt;/strong&gt; box.&lt;/p&gt; &lt;h3&gt;Space after not operator&lt;/h3&gt; &lt;p&gt;A new setting controls whether to add a space after the &lt;em&gt;not&lt;/em&gt; (&lt;code&gt;!&lt;/code&gt;) operator, independently from other unary operators. To find it, expand the &lt;strong&gt;Whitespace-&amp;#62;Expressions-&amp;#62;Unary&lt;/strong&gt; operators and go to the last checkbox, as shown in Figure 31.&lt;/p&gt; &lt;div id="attachment_697397" style="width: 309px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f36de06b97.png"&gt;&lt;img aria-describedby="caption-attachment-697397" class="wp-image-697397 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f36de06b97.png" alt="Screenshot of the selection as a space after the &amp;#34;not&amp;#34; (!) operator." width="299" height="190" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-697397" class="wp-caption-text"&gt;Figure 31. Selection to add a space after the not (!) operator.&lt;/p&gt;&lt;/div&gt; &lt;h3&gt;Update to the JUnit execution environment&lt;/h3&gt; &lt;p&gt;We&amp;#8217;ve updated the Bundle Required Execution Environment (BREE) for the &lt;code&gt;org.eclipse.jdt.junit.runtime&lt;/code&gt; J2SE-1.5 bundle.&lt;/p&gt; &lt;h3&gt;Handling exception breakpoints in JDT Debugger&lt;/h3&gt; &lt;p&gt;We&amp;#8217;ve added a new workspace preference for exception breakpoints: &lt;strong&gt;Suspend policy for recurring exception instances&lt;/strong&gt; controls whether the same exception instance may cause the debugger to suspend more than once. This new option is shown in Figure 32.&lt;/p&gt; &lt;div id="attachment_697407" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f36f9726f0.png"&gt;&lt;img aria-describedby="caption-attachment-697407" class="wp-image-697407" src="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f36f9726f0.png" alt="A screenshot of the new debug option for recurring exception instances." width="640" height="399" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f36f9726f0.png 732w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f36f9726f0-300x187.png 300w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-697407" class="wp-caption-text"&gt;Figure 32. A new workspace preference for exception breakpoints.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;You&amp;#8217;ll find this option relevant when debugging an application that has &lt;code&gt;try&lt;/code&gt; blocks at several levels of the architecture. In this situation, an exception breakpoint could fire multiple times for the same exception instance. For example, a &lt;code&gt;throw&lt;/code&gt; statement inside a &lt;code&gt;catch&lt;/code&gt; block could re-throw the same exception.&lt;/p&gt; &lt;p&gt;The same is true for each &lt;code&gt;finally&lt;/code&gt; block or &lt;code&gt;try-with-resources&lt;/code&gt; block. When the debugger stops due to an exception breakpoint, you might want to continue your debug session by pressing &lt;strong&gt;Resume (F8)&lt;/strong&gt;, but all that catching and re-throwing will force you to observe all locations where the same exception will surface again and again.&lt;/p&gt; &lt;p&gt;Suspending at all &lt;code&gt;try&lt;/code&gt; blocks on the call stack could also spoil your context of open Java editors, by opening more editors of classes that are likely irrelevant for the debugging task at hand. The JDT Debugger can now detect this situation. The first time it notices the same exception instance recurring at the surface, you&amp;#8217;ll see the question dialog in Figure 33.&lt;/p&gt; &lt;div id="attachment_697417" style="width: 553px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f37130799d.png"&gt;&lt;img aria-describedby="caption-attachment-697417" class="wp-image-697417 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f37130799d.png" alt="A screenshot of the JDT Debugger inquiring about a recurring exception instance." width="543" height="319" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f37130799d.png 543w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f37130799d-300x176.png 300w" sizes="(max-width: 543px) 100vw, 543px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-697417" class="wp-caption-text"&gt;Figure 33. The JDT Debugger spots a recurring exception instance.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;If you select &lt;strong&gt;Skip&lt;/strong&gt; in this dialog, the exception instance will be dismissed for good. If you do nothing more, new instances of the same exception type will cause a suspension when they are thrown. However, if you check &lt;strong&gt;Remember my decision&lt;/strong&gt;, your choice will be stored in your workspace preferences and applied at all exception breakpoints. Even after choosing &lt;strong&gt;Skip — reps&lt;/strong&gt; only once in the preferences, you can have the old behavior restored simply by pressing &lt;strong&gt;Step Return (F7)&lt;/strong&gt; instead of &lt;strong&gt;Resume&lt;/strong&gt;.&lt;/p&gt; &lt;h3&gt;Content assistance for JDT developers&lt;/h3&gt; &lt;p&gt;Three existing extension points now allow a new attribute, &lt;code&gt;requiresUIThread&lt;/code&gt;, which flags whether the Content Assist extension needs to run in a UI thread.  The extension points are:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;org.eclipse.jdt.ui.javaCompletionProposalComputer&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;org.eclipse.jdt.ui.javadocCompletionProposalComputer&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;org.eclipse.jdt.ui.javaCompletionProposalSorters&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Developers can use the &lt;code&gt;requiresUIThread&lt;/code&gt; attribute to declare whether running in the UI thread is required or not. The Content Assist operation will use this information to allow optimizations and prevent UI freezes by reducing the amount of work happening in the UI thread. To preserve backward compatibility, the default value for this attribute (if not set) is &lt;code&gt;true&lt;/code&gt;, meaning the extension is expected to run in the UI thread.&lt;/p&gt; &lt;h2&gt;Conclusion​&lt;/h2&gt; &lt;p&gt;The newest release of JBoss Tools improves container-based development with support for OpenShift Container Platform 4.3 and the new OpenShift Application Explorer view. We&amp;#8217;ve added tooling for &lt;a href="https://developers.redhat.com/topics/quarkus/" target="_blank" rel="noopener noreferrer"&gt;Quarkus&lt;/a&gt;, updated the Hibernate Tools runtime providers, and updated the Java Developer Tools (JDT) extensions for compatibility with Java 13.&lt;/p&gt; &lt;p&gt;In this article, I&amp;#8217;ve shared highlights of the changes for Hibernate Tools and the JDT extensions, as well as numerous smaller upgrades and feature additions to platform views, dialogs, and toolbars in JBoss Tools 4.14.0. Now that we&amp;#8217;ve released JBoss Tools 4.14.0 and Red Hat CodeReady Studio 12.14, we&amp;#8217;re already working on the next release for Eclipse 2020-03. Stay tuned for information about that upcoming release.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F04%2F20%2Fred-hat-codeready-studio-12-14-0-ga-and-jboss-tools-4-14-0-final-tool-and-ui-updates%2F&amp;#38;linkname=Red%20Hat%20CodeReady%20Studio%2012.14.0.GA%20and%20JBoss%20Tools%204.14.0.Final%3A%20Tool%20and%20UI%20updates" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F04%2F20%2Fred-hat-codeready-studio-12-14-0-ga-and-jboss-tools-4-14-0-final-tool-and-ui-updates%2F&amp;#38;linkname=Red%20Hat%20CodeReady%20Studio%2012.14.0.GA%20and%20JBoss%20Tools%204.14.0.Final%3A%20Tool%20and%20UI%20updates" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F04%2F20%2Fred-hat-codeready-studio-12-14-0-ga-and-jboss-tools-4-14-0-final-tool-and-ui-updates%2F&amp;#38;linkname=Red%20Hat%20CodeReady%20Studio%2012.14.0.GA%20and%20JBoss%20Tools%204.14.0.Final%3A%20Tool%20and%20UI%20updates" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F04%2F20%2Fred-hat-codeready-studio-12-14-0-ga-and-jboss-tools-4-14-0-final-tool-and-ui-updates%2F&amp;#38;linkname=Red%20Hat%20CodeReady%20Studio%2012.14.0.GA%20and%20JBoss%20Tools%204.14.0.Final%3A%20Tool%20and%20UI%20updates" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F04%2F20%2Fred-hat-codeready-studio-12-14-0-ga-and-jboss-tools-4-14-0-final-tool-and-ui-updates%2F&amp;#38;linkname=Red%20Hat%20CodeReady%20Studio%2012.14.0.GA%20and%20JBoss%20Tools%204.14.0.Final%3A%20Tool%20and%20UI%20updates" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F04%2F20%2Fred-hat-codeready-studio-12-14-0-ga-and-jboss-tools-4-14-0-final-tool-and-ui-updates%2F&amp;#38;linkname=Red%20Hat%20CodeReady%20Studio%2012.14.0.GA%20and%20JBoss%20Tools%204.14.0.Final%3A%20Tool%20and%20UI%20updates" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F04%2F20%2Fred-hat-codeready-studio-12-14-0-ga-and-jboss-tools-4-14-0-final-tool-and-ui-updates%2F&amp;#38;linkname=Red%20Hat%20CodeReady%20Studio%2012.14.0.GA%20and%20JBoss%20Tools%204.14.0.Final%3A%20Tool%20and%20UI%20updates" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F04%2F20%2Fred-hat-codeready-studio-12-14-0-ga-and-jboss-tools-4-14-0-final-tool-and-ui-updates%2F&amp;#038;title=Red%20Hat%20CodeReady%20Studio%2012.14.0.GA%20and%20JBoss%20Tools%204.14.0.Final%3A%20Tool%20and%20UI%20updates" data-a2a-url="https://developers.redhat.com/blog/2020/04/20/red-hat-codeready-studio-12-14-0-ga-and-jboss-tools-4-14-0-final-tool-and-ui-updates/" data-a2a-title="Red Hat CodeReady Studio 12.14.0.GA and JBoss Tools 4.14.0.Final: Tool and UI updates"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/04/20/red-hat-codeready-studio-12-14-0-ga-and-jboss-tools-4-14-0-final-tool-and-ui-updates/"&gt;Red Hat CodeReady Studio 12.14.0.GA and JBoss Tools 4.14.0.Final: Tool and UI updates&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/3szLv9btrCI" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;In the previous article, I introduced JBoss Tools 4.14.0 final and Red Hat CodeReady Studio 12.14 for Eclipse 4.14 (2019-12), focusing on the big new features: OpenShift Application Explorer view, feedback loops, and new Quarkus tooling. This article focuses on the many smaller additions and updates. Here, I&amp;#8217;ll quickly run through the new features and small [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/04/20/red-hat-codeready-studio-12-14-0-ga-and-jboss-tools-4-14-0-final-tool-and-ui-updates/"&gt;Red Hat CodeReady Studio 12.14.0.GA and JBoss Tools 4.14.0.Final: Tool and UI updates&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;</summary><post-id xmlns="com-wordpress:feed-additions:1">708678</post-id><dc:creator>Jeff Maury</dc:creator><dc:date>2020-04-20T07:05:08Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2020/04/20/red-hat-codeready-studio-12-14-0-ga-and-jboss-tools-4-14-0-final-tool-and-ui-updates/</feedburner:origLink></entry><entry><title>Red Hat CodeReady Studio 12.14.0.GA and JBoss Tools 4.14.0.Final: OpenShift and Quarkus updates</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/PrAh3dhwz5c/" /><category term="Developer Tools" /><category term="Java" /><category term="Kubernetes" /><category term="Microservices" /><category term="Quarkus" /><category term="apache maven" /><category term="CodeReady Containers" /><category term="feedback loop" /><category term="jboss" /><category term="openshift" /><author><name>Jeff Maury</name></author><id>https://developers.redhat.com/blog/?p=696637</id><updated>2020-04-20T07:00:48Z</updated><published>2020-04-20T07:00:48Z</published><content type="html">&lt;p&gt;&lt;a href="https://tools.jboss.org/downloads/jbosstools/2019-12/4.14.0.Final.html" target="_blank" target="_blank" rel="nofollow" noreferrer"&gt;JBoss Tools 4.14.0&lt;/a&gt; and &lt;a href="https://developers.redhat.com/products/codeready-studio/overview" target="_blank" rel="noopener noreferrer"&gt;Red Hat CodeReady Studio 12.14&lt;/a&gt; for Eclipse 4.14 (2019-12) are here and waiting for you. For this release, we focused on improving container-based development, adding tooling for the &lt;a href="https://developers.redhat.com/topics/quarkus/" target="_blank" rel="noopener noreferrer"&gt;Quarkus framework&lt;/a&gt;, and fixing bugs. We also updated the Hibernate Tools runtime provider and Java Developer Tools (JDT) extensions, which are now compatible with Java 13. Additionally, we made many UI changes to platform views, dialogs, and toolbars.&lt;/p&gt; &lt;p&gt;In these two articles, I introduce the highlights of these new releases and show you how to get started with using them in your Java projects. Keep reading to learn more about the updates and new features in JBoss Tools 4.14.0. In this first article, I focus on these features:&lt;/p&gt; &lt;ul&gt; &lt;li style="list-style-type: none;"&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="#OCPcompat"&gt;Red Hat OpenShift Container Platform 4.3 compatibility&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#OAEview"&gt;OpenShift Application Explorer view&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#OAEfeedback"&gt;OpenShift Application Explorer feedback loop&lt;/a&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="#devmicroservice"&gt;Develop a Java-based microservice with JBoss Tools 4.14.0&lt;/a&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="#mcstep1"&gt;Step 1: Create a new microservices component&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#bdstep2"&gt;Step 2: Build and deploy the component&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#dustep3"&gt;Step 3: Define a URL&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#scstep4"&gt;Step 4: Synchronize the configuration&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#tmstep5"&gt;Step 5: Test the new microservice&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;a href="#cfl"&gt;Create the feedback loop&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#tfldb"&gt;Test the feedback loop in the debugging console&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;a target="_blank" rel="nofollow" href="&amp;#34;#quarkust"&gt;New tooling for Quarkus&lt;/a&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="#cqstep1"&gt;Step 1: Create a new Quarkus project&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#brqstep2"&gt;Step 2: Build and run the Quarkus application&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#dqastep3"&gt;Step 3: Debug the Quarkus application&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;a href="#pcaq"&gt;Preview: Content assistance for Quarkus&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#conc"&gt;Conclusion&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h2&gt;Installation&lt;/h2&gt; &lt;p&gt;First, let&amp;#8217;s look at how to install these updates. Red Hat CodeReady Studio (previously Red Hat Developer Studio) comes with everything pre-bundled in its installer. Simply download the installer from the &lt;a href="https://developers.redhat.com/products/codeready-studio/overview"&gt;Red Hat CodeReady Studio product page&lt;/a&gt; and run it as follows:&lt;/p&gt; &lt;pre&gt;$ java -jar codereadystudio-&amp;#60;installername&amp;#62;.jar &lt;/pre&gt; &lt;p&gt;On the other hand, installing JBoss Tools 4.14.0—&lt;em&gt;aka&lt;/em&gt; &amp;#8220;bring-your-own Eclipse (BYOE) CodeReady Studio&amp;#8221;—requires a bit more effort. This release requires at least Eclipse 4.14 (2019-12), but we recommend installing the latest &lt;a href="http://www.eclipse.org/downloads/packages/release/2019-12/r/eclipse-ide-java-ee-developers" target="_blank" target="_blank" rel="nofollow" noreferrer"&gt;Eclipse 4.14 2019-12 Java EE bundle&lt;/a&gt;. Installing the newest bundle ensures you get the most current Java dependencies.&lt;/p&gt; &lt;p&gt;Once you have Eclipse 4.14 (2019-12) or higher installed, you can open the Eclipse Marketplace tab and look for either &lt;strong&gt;JBoss Tools&lt;/strong&gt; or &lt;strong&gt;Red Hat CodeReady Studio&lt;/strong&gt;. Alternatively, you could &lt;a href="http://download.jboss.org/jbosstools/photon/stable/updates/" target="_blank" target="_blank" rel="nofollow" noreferrer"&gt;download JBoss Tools 4.14.0&lt;/a&gt; directly from our update site.&lt;/p&gt; &lt;h2 id="OCPcompat"&gt;OpenShift Container Platform 4.3 compatibility&lt;/h2&gt; &lt;p&gt;JBoss Tools is now compatible with &lt;a href="https://blog.openshift.com/introducing-red-hat-openshift-4-3-to-enhance-kubernetes-security/" target="_blank" target="_blank" rel="nofollow" noreferrer"&gt;OpenShift Container Platform (OCP) 4.3&lt;/a&gt;. You can now access the new release in JBoss Tools by defining your connection to an OpenShift Container Platform 4.3 cluster, just as you did before for an OpenShift Container Platform 3 cluster.&lt;/p&gt; &lt;h2 id="OAEview"&gt;OpenShift Application Explorer view&lt;/h2&gt; &lt;p&gt;We&amp;#8217;ve also added a new OpenShift Application Explorer view, in addition to the standard OpenShift Explorer. Based on &lt;a href="https://github.com/openshift/odo/" target="_blank" target="_blank" rel="nofollow" noreferrer"&gt;OpenShift Do (odo)&lt;/a&gt;, the new view simplifies user experience and introduces feedback loops and an improved debugging console.&lt;/p&gt; &lt;p&gt;To see the new view in action, open your JBoss Tools 4.14.0 workspace. You should see OpenShift Application Explorer in the list of views available on the bottom part of the screen, as shown in Figure 1.&lt;/p&gt; &lt;div id="attachment_696647" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f29efe18e9.png"&gt;&lt;img aria-describedby="caption-attachment-696647" class="wp-image-696647 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f29efe18e9-1024x545.png" alt="A screenshot of the new OpenShift Application Explorer view." width="640" height="341" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f29efe18e9-1024x545.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f29efe18e9-300x160.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f29efe18e9-768x409.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-696647" class="wp-caption-text"&gt;Figure 1. The OpenShift Application Explorer view in JBoss Tools 4.14.0.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;If the view is not automatically listed, you can find it using &lt;strong&gt;Window -&amp;#62; Show View -&amp;#62; Other&lt;/strong&gt;. From the &lt;strong&gt;Other&lt;/strong&gt; window, type &lt;code&gt;open&lt;/code&gt; in the provided textbox, then select &lt;strong&gt;OpenShift Application Explorer&lt;/strong&gt; from the JBoss Tools drop-down list, as shown in Figure 2.&lt;/p&gt; &lt;div id="attachment_696657" style="width: 386px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2a3693aa9.png"&gt;&lt;img aria-describedby="caption-attachment-696657" class="wp-image-696657 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2a3693aa9.png" alt="A screenshot of the JBoss Tools drop-down list with the option to select OpenShift Application Explorer." width="376" height="471" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2a3693aa9.png 376w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2a3693aa9-239x300.png 239w" sizes="(max-width: 376px) 100vw, 376px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-696657" class="wp-caption-text"&gt;Figure 2. Select OpenShift Application Explorer from the drop-down list.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;You&amp;#8217;ll see OpenShift Application Explorer in a new tab, as shown in Figure 3.&lt;/p&gt; &lt;div id="attachment_696667" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2a876a32d.png"&gt;&lt;img aria-describedby="caption-attachment-696667" class="wp-image-696667 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2a876a32d-1024x545.png" alt="A screenshot of OpenShift Application Explorer in its own tab." width="640" height="341" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2a876a32d-1024x545.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2a876a32d-300x160.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2a876a32d-768x409.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-696667" class="wp-caption-text"&gt;Figure 3. OpenShift Application Explorer in a new tab.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;Expanding the root node will display the list of projects available on the OpenShift Container Platform cluster, as shown in Figure 4.&lt;/p&gt; &lt;div id="attachment_696677" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2ac7e681d.png"&gt;&lt;img aria-describedby="caption-attachment-696677" class="wp-image-696677" src="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2ac7e681d.png" alt="A screenshot of the expanded directory with a single project folder." width="640" height="176" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2ac7e681d.png 1002w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2ac7e681d-300x82.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2ac7e681d-768x211.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-696677" class="wp-caption-text"&gt;Figure 4. Expand the root node to display projects available on the cluster.&lt;/p&gt;&lt;/div&gt; &lt;h2 id="OAEfeedback"&gt;OpenShift Application Explorer feedback loop&lt;/h2&gt; &lt;p&gt;We also added a new &lt;em&gt;feedback loop&lt;/em&gt; feature, which gives you fast feedback on code changes. To best understand this feature, it helps to create a sample application. Once you have created the sample application, continue here.&lt;/p&gt; &lt;p&gt;Now that you have the new OpenShift Application Explorer open and running let&amp;#8217;s try it out with an example application.&lt;/p&gt; &lt;h3 id="devmicroservice"&gt;Develop a Java-based microservice with JBoss Tools 4.14.0&lt;/h3&gt; &lt;p&gt;In this section, I&amp;#8217;ll show you how to use OpenShift Container Platform 4.3 and the new OpenShift Application Explorer in JBoss Tools 4.14.0. We&amp;#8217;ll use these tools to develop a Java-based microservice.&lt;/p&gt; &lt;p&gt;Before we start working on the application, we need to load the component source code into our workspace. To start, click &lt;strong&gt;Ctrl+N&lt;/strong&gt; and select the &lt;strong&gt;Launcher project&lt;/strong&gt; wizard from the drop-down list, as shown in Figure 5.&lt;/p&gt; &lt;div id="attachment_696687" style="width: 694px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2b018dacf.png"&gt;&lt;img aria-describedby="caption-attachment-696687" class="wp-image-696687 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2b018dacf.png" alt="A screenshot showing the Launcher project wizard selected in a drop-down list." width="684" height="517" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2b018dacf.png 684w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2b018dacf-300x227.png 300w" sizes="(max-width: 684px) 100vw, 684px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-696687" class="wp-caption-text"&gt;Figure 5. Open the JBoss Tools &amp;#8220;Launcher project&amp;#8221; wizard.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;Click &lt;strong&gt;Next&lt;/strong&gt;, then enter the following information in the given fields:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Type &lt;code&gt;rest-http&lt;/code&gt; in the &lt;strong&gt;Mission&lt;/strong&gt; field.&lt;/li&gt; &lt;li&gt;Type &lt;code&gt;vert.x community&lt;/code&gt; in the &lt;strong&gt;Runtime&lt;/strong&gt; field.&lt;/li&gt; &lt;li&gt;Type &lt;code&gt;myservice&lt;/code&gt; in the &lt;strong&gt;Project name&lt;/strong&gt; field.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Figure 6 shows these entries.&lt;/p&gt; &lt;div id="attachment_696697" style="width: 612px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2b77aee89.png"&gt;&lt;img aria-describedby="caption-attachment-696697" class="wp-image-696697 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2b77aee89.png" alt="A screenshot of the project-generation page, where you will use the Mission, Runtime, and Project name fields to define the project." width="602" height="824" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2b77aee89.png 602w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2b77aee89-219x300.png 219w" sizes="(max-width: 602px) 100vw, 602px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-696697" class="wp-caption-text"&gt;Figure 6. Define and name your project.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;Click &lt;strong&gt;Finish&lt;/strong&gt; to add the new project to your workspace. Once the dependencies are resolved, we can start playing with the cluster.&lt;/p&gt; &lt;h4 id="mcstep1"&gt;Step 1: Create a new microservices component&lt;/h4&gt; &lt;p&gt;The first thing we&amp;#8217;ll do is create the microservices component. From OpenShift Application Explorer, right-select &lt;strong&gt;myproject&lt;/strong&gt;, then click &lt;strong&gt;New -&amp;#62; Component&lt;/strong&gt;. This action will lead you to the &lt;strong&gt;Create a component&lt;/strong&gt; window shown in Figure 7.&lt;/p&gt; &lt;div id="attachment_696707" style="width: 694px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2bab5d504.png"&gt;&lt;img aria-describedby="caption-attachment-696707" class="wp-image-696707 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2bab5d504.png" alt="A screenshot of the 'Create a component' window." width="684" height="497" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2bab5d504.png 684w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2bab5d504-300x218.png 300w" sizes="(max-width: 684px) 100vw, 684px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-696707" class="wp-caption-text"&gt;Figure 7. The &amp;#8220;Create a component&amp;#8221; window.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;In the &lt;strong&gt;Name&lt;/strong&gt; field, enter &lt;code&gt;myservice&lt;/code&gt;, then click the &lt;strong&gt;Browse&lt;/strong&gt; button to select the new project you&amp;#8217;ve just created. In the &lt;strong&gt;Component type&lt;/strong&gt; field, select &lt;code&gt;java&lt;/code&gt;. In the &lt;strong&gt;Component version&lt;/strong&gt; field, select &lt;code&gt;8&lt;/code&gt;. Finally, enter &lt;code&gt;myapp&lt;/code&gt; in the &lt;strong&gt;Application&lt;/strong&gt; field, then uncheck the &lt;strong&gt;Push after create&lt;/strong&gt; checkbox. All of these selections are shown in Figure 8.&lt;/p&gt; &lt;div id="attachment_696717" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2bc87bc7e.png"&gt;&lt;img aria-describedby="caption-attachment-696717" class="wp-image-696717" src="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2bc87bc7e.png" alt="A screenshot of the 'Create a component' window with the selections described." width="640" height="465" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2bc87bc7e.png 684w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2bc87bc7e-300x218.png 300w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-696717" class="wp-caption-text"&gt;Figure 8. Configuration for the new component.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;Click &lt;strong&gt;Finish&lt;/strong&gt; to create the component, then expand the project node to view the application. That view is shown in Figure 9.&lt;/p&gt; &lt;div id="attachment_696727" style="width: 649px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2be695a75.png"&gt;&lt;img aria-describedby="caption-attachment-696727" class="wp-image-696727" src="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2be695a75.png" alt="A screenshot of the expanded project node for the example application." width="639" height="175" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2be695a75.png 1002w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2be695a75-300x82.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2be695a75-768x211.png 768w" sizes="(max-width: 639px) 100vw, 639px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-696727" class="wp-caption-text"&gt;Figure 9. Expand the project node to view the application.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;Expanding the application displays the new component, as shown in Figure 10.&lt;/p&gt; &lt;div id="attachment_696737" style="width: 648px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2c02589a2.png"&gt;&lt;img aria-describedby="caption-attachment-696737" class="wp-image-696737" src="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2c02589a2.png" alt="A screenshot of the expanded project node, showing the new component nested under 'myapp'." width="638" height="175" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2c02589a2.png 1002w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2c02589a2-300x82.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2c02589a2-768x211.png 768w" sizes="(max-width: 638px) 100vw, 638px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-696737" class="wp-caption-text"&gt;Figure 10. Find the new service component.&lt;/p&gt;&lt;/div&gt; &lt;h4 id="bdstep2"&gt;Step 2: Build and deploy the component&lt;/h4&gt; &lt;p&gt;We&amp;#8217;ve created the &lt;code&gt;myservice&lt;/code&gt; component, but note that we unchecked the &lt;strong&gt;Push after create&lt;/strong&gt; checkbox. We&amp;#8217;ll have to deploy the component on our cluster manually. Deploy it by right-selecting the component and clicking the &lt;strong&gt;Push&lt;/strong&gt; button. OpenShift Container Platform will create the deployment and launch a build.&lt;/p&gt; &lt;p&gt;Once that&amp;#8217;s done, you&amp;#8217;ll see a new window created in the Console view. After a while, you should see the output in Figure 11.&lt;/p&gt; &lt;div id="attachment_696747" style="width: 440px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2c20bd567.png"&gt;&lt;img aria-describedby="caption-attachment-696747" class="wp-image-696747 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2c20bd567.png" alt="Build output shows the component has been successfully deployed." width="430" height="275" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2c20bd567.png 430w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2c20bd567-300x192.png 300w" sizes="(max-width: 430px) 100vw, 430px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-696747" class="wp-caption-text"&gt;Figure 11. The component has been successfully deployed.&lt;/p&gt;&lt;/div&gt; &lt;h4 id="dustep3"&gt;Step 3: Define a URL&lt;/h4&gt; &lt;p&gt;The component is now deployed to the cluster, but we cannot yet access it. Our next step is to define a URL that allows us to access the component externally. Right-select the component and click &lt;strong&gt;New -&amp;#62; URL&lt;/strong&gt;, as shown in Figure 12.&lt;/p&gt; &lt;div id="attachment_696757" style="width: 649px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2c483cc8b.png"&gt;&lt;img aria-describedby="caption-attachment-696757" class="wp-image-696757" src="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2c483cc8b.png" alt="Screenshot of the new window to create a URL for external access to the component." width="639" height="441" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2c483cc8b.png 684w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2c483cc8b-300x207.png 300w" sizes="(max-width: 639px) 100vw, 639px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-696757" class="wp-caption-text"&gt;Figure 12. Create a new URL for external access to the component.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;Enter &lt;code&gt;url1&lt;/code&gt; in the &lt;strong&gt;Name&lt;/strong&gt; field and select &lt;code&gt;8080&lt;/code&gt; in the &lt;strong&gt;Port&lt;/strong&gt; field, as shown in Figure 13.&lt;/p&gt; &lt;div id="attachment_696767" style="width: 649px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2c68bdf18.png"&gt;&lt;img aria-describedby="caption-attachment-696767" class="wp-image-696767" src="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2c68bdf18.png" alt="A screenshot of the new window to configure the URL endpoint." width="639" height="441" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2c68bdf18.png 684w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2c68bdf18-300x207.png 300w" sizes="(max-width: 639px) 100vw, 639px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-696767" class="wp-caption-text"&gt;Figure 13. Name the URL and configure it for port 8080.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;Now click &lt;strong&gt;Finish&lt;/strong&gt;.&lt;/p&gt; &lt;h4 id="scstep4"&gt;Step 4: Synchronize the configuration&lt;/h4&gt; &lt;p&gt;We have created the URL, but it&amp;#8217;s not yet live on the OpenShift Container Platform cluster. Pushing the component out again will synchronize the local configuration with the configuration on the cluster. In Figure 14, a message in the &lt;strong&gt;Console&lt;/strong&gt; view informs us that the push is required.&lt;/p&gt; &lt;div id="attachment_696777" style="width: 440px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2c935a857.png"&gt;&lt;img aria-describedby="caption-attachment-696777" class="wp-image-696777 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2c935a857.png" alt="A screenshot of the console window with instructions for creating the URL." width="430" height="275" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2c935a857.png 430w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2c935a857-300x192.png 300w" sizes="(max-width: 430px) 100vw, 430px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-696777" class="wp-caption-text"&gt;Figure 14. A push is required in order to create a URL on the OpenShift Container Platform cluster.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;To push the component out again, click &lt;strong&gt;component -&amp;#62; Push&lt;/strong&gt;.&lt;/p&gt; &lt;h4 id="tmstep5"&gt;Step 5: Test the new microservice&lt;/h4&gt; &lt;p&gt;Let&amp;#8217;s check that we can now access the service. Expanding the component to one more level lets us see the URL we&amp;#8217;ve just created, as shown in Figure 15.&lt;/p&gt; &lt;div id="attachment_696787" style="width: 648px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2cbc534fa.png"&gt;&lt;img aria-describedby="caption-attachment-696787" class="wp-image-696787" src="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2cbc534fa.png" alt="A screenshot of the OpenShift Application Explorer view showing the application directory. The new URL is shown under the 'myservice' component." width="638" height="175" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2cbc534fa.png 1002w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2cbc534fa-300x82.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2cbc534fa-768x211.png 768w" sizes="(max-width: 638px) 100vw, 638px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-696787" class="wp-caption-text"&gt;Figure 15. Find the new URL in OpenShift Application Explorer.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;Right-select the URL and click &lt;strong&gt;Open in Browser&lt;/strong&gt;. You should now see a new browser window, as shown in Figure 16.&lt;/p&gt; &lt;div id="attachment_696797" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2cefea1b1.png"&gt;&lt;img aria-describedby="caption-attachment-696797" class="wp-image-696797" src="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2cefea1b1.png" alt="A screenshot of the new service open in a browser window. The service includes a text box and a button labeled 'Invoke'." width="640" height="411" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2cefea1b1.png 1002w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2cefea1b1-300x193.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2cefea1b1-768x493.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-696797" class="wp-caption-text"&gt;Figure 16. The service opens in a browser window.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;To test the service, enter &lt;code&gt;demo&lt;/code&gt; in the text box, then click &lt;strong&gt;Invoke&lt;/strong&gt;. You&amp;#8217;ll see a new screen for the service, as shown in Figure 17.&lt;/p&gt; &lt;div id="attachment_696807" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2d0a3c56b.png"&gt;&lt;img aria-describedby="caption-attachment-696807" class="wp-image-696807" src="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2d0a3c56b.png" alt="A screenshot of the new service after clicking the 'Invoke' button. The screen shows the output 'Hello, demo!'" width="640" height="411" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2d0a3c56b.png 1002w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2d0a3c56b-300x193.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2d0a3c56b-768x493.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-696807" class="wp-caption-text"&gt;Figure 17. &amp;#8220;Hello, demo!&amp;#8221; output confirms the new service is running.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;With just a few configurations, we have a new microservice up and running on OpenShift Container Platform. Next, I&amp;#8217;ll introduce two additional features available in OpenShift Application Explorer: A feedback loop that lets you quickly see the results of code changes, and the new debugging console.&lt;/p&gt; &lt;h3 id="cfl"&gt;Create the feedback loop&lt;/h3&gt; &lt;p&gt;Now that we have an example application to work with, we can explore the new feedback loop in OpenShift Application Explorer. Let&amp;#8217;s modify the example application&amp;#8217;s code and try it out.&lt;/p&gt; &lt;p&gt;In the &lt;strong&gt;Project Explorer&lt;/strong&gt; tab, locate the &lt;code&gt;HttpApplication.java&lt;/code&gt; file, which is shown in Figure 18.&lt;/p&gt; &lt;div id="attachment_696817" style="width: 489px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2dfeb5da7.png"&gt;&lt;img aria-describedby="caption-attachment-696817" class="wp-image-696817 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2dfeb5da7.png" alt="A screenshot of the Project Explorer view showing the HttpApplication.java file in the project directory." width="479" height="459" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2dfeb5da7.png 479w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2dfeb5da7-300x287.png 300w" sizes="(max-width: 479px) 100vw, 479px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-696817" class="wp-caption-text"&gt;Figure 18. Find HttpApplication.java in the Project Explorer.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;Double-click on the file to open it in a new editor window, as shown in Figure 19.&lt;/p&gt; &lt;div id="attachment_696827" style="width: 650px" class="wp-caption alignnone"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2e1596280.png"&gt;&lt;img aria-describedby="caption-attachment-696827" class="wp-image-696827" src="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2e1596280.png" alt="A screenshot of the source code in the HttpApplication.java file." width="640" height="411" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2e1596280.png 1002w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2e1596280-300x193.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2e1596280-768x493.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-696827" class="wp-caption-text"&gt;Figure 19. Open the HttpApplication.java file in a new editor window.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;On line 14, change:&lt;/p&gt; &lt;pre&gt;protected static final String template = "Hello, %s!"; &lt;/pre&gt; &lt;p&gt;to:&lt;/p&gt; &lt;pre&gt;protected static final String template = "Hello, %s!, we modified the code"; &lt;/pre&gt; &lt;p&gt;When you&amp;#8217;re done, press &lt;strong&gt;Ctrl+S&lt;/strong&gt; to save the file.&lt;/p&gt; &lt;p&gt;Now, right-click the service component (&lt;code&gt;myservice&lt;/code&gt;) and click &lt;strong&gt;Push&lt;/strong&gt;. Doing this sends your changes to the cluster, where the component will be rebuilt with your code changes. After a few seconds, the component will be available again, as shown in Figure 20.&lt;/p&gt; &lt;div id="attachment_696837" style="width: 440px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2e85ecd1c.png"&gt;&lt;img aria-describedby="caption-attachment-696837" class="wp-image-696837 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2e85ecd1c.png" alt="A screenshot of console output showing that the build was successful." width="430" height="275" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2e85ecd1c.png 430w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2e85ecd1c-300x192.png 300w" sizes="(max-width: 430px) 100vw, 430px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-696837" class="wp-caption-text"&gt;Figure 20. The console output indicates a successful build.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;Return to the browser window and refresh it. Enter &lt;code&gt;demo1&lt;/code&gt; in the textbox (changing the value in this field avoids reloading the cached version), then click &lt;strong&gt;Invoke&lt;/strong&gt;. Figure 21 shows the resulting screen.&lt;/p&gt; &lt;div id="attachment_696847" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2ea5e9d36.png"&gt;&lt;img aria-describedby="caption-attachment-696847" class="wp-image-696847" src="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2ea5e9d36.png" alt="A screenshot shows the new message in the HttpExample application UI: 'Hello, demo1!, we modified the code.'" width="640" height="411" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2ea5e9d36.png 1002w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2ea5e9d36-300x193.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2ea5e9d36-768x493.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-696847" class="wp-caption-text"&gt;Figure 21. &amp;#8220;Hello, demo1!, we modified the code&amp;#8221;.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;While our change was straightforward, it&amp;#8217;s enough to demonstrate the new feedback loop. We were able to modify the code for our example microservice, synchronize the changes with a push to the cluster, and then get rapid feedback by simply refreshing the service in a browser.&lt;/p&gt; &lt;p style="padding-left: 40px;"&gt;&lt;strong&gt;Note&lt;/strong&gt;: If you don&amp;#8217;t want to manually push code changes back to the cluster, you could opt to automatically synchronize to the cluster with a watch action. If you set a watch action, a new build will be launched automatically on the cluster each time you change the code on your workstation.&lt;/p&gt; &lt;h3 id="tfldb"&gt;Test the feedback loop in the debugging console&lt;/h3&gt; &lt;p&gt;Testing an application with a quick feedback loop is a great achievement, but for more complex applications, we also need to understand how the code behaves. In this section, we&amp;#8217;ll use OpenShift Application Explorer&amp;#8217;s debugging console to debug the application live on the cluster.&lt;/p&gt; &lt;p&gt;To start, we&amp;#8217;ll set a breakpoint in the application code. Select the &lt;code&gt;HttpApplication.java&lt;/code&gt; file, then scroll down to the &lt;code&gt;greeting()&lt;/code&gt; method, which is shown in Figure 22.&lt;/p&gt; &lt;div id="attachment_696857" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2ee257bbc.png"&gt;&lt;img aria-describedby="caption-attachment-696857" class="wp-image-696857" src="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2ee257bbc.png" alt="A screenshot of the HttpApplication.java file." width="640" height="411" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2ee257bbc.png 1002w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2ee257bbc-300x193.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2ee257bbc-768x493.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-696857" class="wp-caption-text"&gt;Figure 22. Find the greeting() method in HttpApplication.java.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;Find line 41, then double-click that number in the left-hand ruler column. Doing that sets the breakpoint, as shown in Figure 23.&lt;/p&gt; &lt;div id="attachment_696867" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2efca6a57.png"&gt;&lt;img aria-describedby="caption-attachment-696867" class="wp-image-696867" src="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2efca6a57.png" alt="Double-clicking the left-ruler column sets the breakpoint, which is shown in this screenshot." width="640" height="411" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2efca6a57.png 1002w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2efca6a57-300x193.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2efca6a57-768x493.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-696867" class="wp-caption-text"&gt;Figure 23. Double-clicking the left-hand ruler column sets the breakpoint.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;We are now ready to debug the application. To start, we need to launch a local debugger (a Java debugger, in this case), which will connect to our application on the cluster. Right-select &lt;code&gt;myservice&lt;/code&gt; in the console, then click &lt;strong&gt;Debug&lt;/strong&gt;. As shown in Figure 24, this initiates port forwarding, which will allow our local debugger to connect to the remote Java virtual machine (JVM).&lt;/p&gt; &lt;div id="attachment_696877" style="width: 440px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2f183150d.png"&gt;&lt;img aria-describedby="caption-attachment-696877" class="wp-image-696877 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2f183150d.png" alt="A screenshot of output following the 'debug' command." width="430" height="275" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2f183150d.png 430w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2f183150d-300x192.png 300w" sizes="(max-width: 430px) 100vw, 430px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-696877" class="wp-caption-text"&gt;Figure 24. Port forwarding has been initiated.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;Next, we&amp;#8217;ll check that we can debug the application. Select the browser window again, enter &lt;code&gt;demo2&lt;/code&gt; in the textbox, and click &lt;strong&gt;Invoke&lt;/strong&gt;. When the debugger hits the breakpoint at line 41, you&amp;#8217;ll be asked if you want to switch to the &lt;strong&gt;Debug&lt;/strong&gt; perspective, as shown in Figure 25. (Note that you might not see this message if you&amp;#8217;ve previously selected the &lt;strong&gt;Remember my decision&lt;/strong&gt; option.)&lt;/p&gt; &lt;div id="attachment_696887" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2f30dff16.png"&gt;&lt;img aria-describedby="caption-attachment-696887" class="wp-image-696887" src="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2f30dff16.png" alt="A screenshot with the option to select the Debug perspective." width="640" height="265" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2f30dff16.png 686w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2f30dff16-300x124.png 300w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-696887" class="wp-caption-text"&gt;Figure 25. Select the Debug perspective.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;When you click the &lt;strong&gt;Switch&lt;/strong&gt; button, you will see the &lt;strong&gt;Debug&lt;/strong&gt; perspective, as shown in Figure 26.&lt;/p&gt; &lt;div id="attachment_696897" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2f4acd30b.png"&gt;&lt;img aria-describedby="caption-attachment-696897" class="wp-image-696897 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2f4acd30b-1024x557.png" alt="A screenshot of the new Debug window with the HttpExample application code." width="640" height="348" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2f4acd30b-1024x557.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2f4acd30b-300x163.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2f4acd30b-768x418.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-696897" class="wp-caption-text"&gt;Figure 26. The new Debug window.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;You can now debug the Java component running on a remote cluster in the same way that you would if it was running locally on your workstation.&lt;/p&gt; &lt;p style="padding-left: 40px;"&gt;&lt;strong&gt;Note&lt;/strong&gt;: We used a Java-based component for this example, but JBoss Tools also supports the debugging console for Node.js-based components.&lt;/p&gt; &lt;h2 id="&amp;#34;quarkust"&gt;New tooling for Quarkus&lt;/h2&gt; &lt;p&gt;With JBoss Tools 4.14.0, we&amp;#8217;ve also added new tooling for applications built on top of the &lt;em&gt;supersonic, subatomic&lt;/em&gt; Java-based framework, &lt;a href="https://developers.redhat.com/topics/quarkus/" target="_blank" rel="noopener noreferrer"&gt;Quarkus&lt;/a&gt;. In this section, we&amp;#8217;ll set up and debug an example application using the new tools.&lt;/p&gt; &lt;h3 id="cqstep1"&gt;Step 1: Create a new Quarkus project&lt;/h3&gt; &lt;p&gt;We&amp;#8217;ve added a wizard for creating a new Quarkus application project in your JBoss Tools workspace. To get started with it, click &lt;strong&gt;Ctrl+N&lt;/strong&gt; to get the list of available wizards, shown in Figure 27.&lt;/p&gt; &lt;div id="attachment_696907" style="width: 612px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2fa5cfc97.png"&gt;&lt;img aria-describedby="caption-attachment-696907" class="wp-image-696907 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2fa5cfc97.png" alt="A screenshot of the drop-down list to select a new project wizard." width="602" height="686" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2fa5cfc97.png 602w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2fa5cfc97-263x300.png 263w" sizes="(max-width: 602px) 100vw, 602px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-696907" class="wp-caption-text"&gt;Figure 27. Select a wizard.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;In the text box, enter &lt;code&gt;qu&lt;/code&gt;. Doing this filters the list of wizards for Quarkus, as shown in Figure 28.&lt;/p&gt; &lt;div id="attachment_696917" style="width: 612px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2fc0c5a25.png"&gt;&lt;img aria-describedby="caption-attachment-696917" class="wp-image-696917 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2fc0c5a25.png" alt="A screenshot of the drop-down list of available wizards, now filtered for Quarkus." width="602" height="686" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2fc0c5a25.png 602w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2fc0c5a25-263x300.png 263w" sizes="(max-width: 602px) 100vw, 602px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-696917" class="wp-caption-text"&gt;Figure 28. Select the Quarkus Project wizard.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;After you select the &lt;strong&gt;Quarkus Project&lt;/strong&gt; wizard, click the &lt;strong&gt;Next&lt;/strong&gt; button. This leads to the &lt;strong&gt;Project type&lt;/strong&gt; screen shown in Figure 29.&lt;/p&gt; &lt;div id="attachment_696927" style="width: 612px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2fe1aac90.png"&gt;&lt;img aria-describedby="caption-attachment-696927" class="wp-image-696927 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2fe1aac90.png" alt="A screenshot of the 'Project type' window." width="602" height="686" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2fe1aac90.png 602w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f2fe1aac90-263x300.png 263w" sizes="(max-width: 602px) 100vw, 602px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-696927" class="wp-caption-text"&gt;Figure 29. Select your project type.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;This screen invites you to choose either Maven or Gradle for managing your project. We&amp;#8217;ll use Maven for this example.&lt;/p&gt; &lt;p&gt;After you&amp;#8217;ve selected Maven, enter a project name (&lt;code&gt;code-with-quarkus&lt;/code&gt;), then click &lt;strong&gt;Next&lt;/strong&gt;. The dialog shown in Figure 30 asks you to define project coordinates such as group ID, artifact ID, and the version number for your application, as well as information about your REST endpoint. Defaults are already filled in, so we can just accept these and click &lt;strong&gt;Next&lt;/strong&gt;.&lt;/p&gt; &lt;div id="attachment_696937" style="width: 612px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f300bb7efc.png"&gt;&lt;img aria-describedby="caption-attachment-696937" class="wp-image-696937 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f300bb7efc.png" alt="A screenshot of the dialog to define your new Quarkus project." width="602" height="686" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f300bb7efc.png 602w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f300bb7efc-263x300.png 263w" sizes="(max-width: 602px) 100vw, 602px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-696937" class="wp-caption-text"&gt;Figure 30. Define the parameters for your project.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;Then, you&amp;#8217;ll be asked to select the Quarkus extensions you want for your project. As shown in Figure 31, the extensions are grouped by category. We&amp;#8217;ll select the Web category.&lt;/p&gt; &lt;div id="attachment_696947" style="width: 649px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f302b79029.png"&gt;&lt;img aria-describedby="caption-attachment-696947" class="wp-image-696947" src="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f302b79029.png" alt="A screenshot of the Quarkus extensions page, showing a list of categories for extension types." width="639" height="472" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f302b79029.png 902w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f302b79029-300x222.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f302b79029-768x567.png 768w" sizes="(max-width: 639px) 100vw, 639px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-696947" class="wp-caption-text"&gt;Figure 31. Select the Web category to see a list of Quarkus web extensions.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;Now, you see the list of extensions shown in Figure 32. If you want to add an extension, double-click on it.&lt;/p&gt; &lt;div id="attachment_696957" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f3046c5b83.png"&gt;&lt;img aria-describedby="caption-attachment-696957" class="wp-image-696957" src="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f3046c5b83.png" alt="A screenshot of the Quarkus extensions page showing a list of available extensions for the web category." width="640" height="470" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f3046c5b83.png 902w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f3046c5b83-300x220.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f3046c5b83-768x564.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-696957" class="wp-caption-text"&gt;Figure 32. Select the Quarkus extensions you want for your project.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;As shown in Figure 33, we&amp;#8217;ll select the RESTEasy JAX-RS and RESTEasy Qute extensions. (Note that RESTEasy Qute is a templating engine.)&lt;/p&gt; &lt;div id="attachment_696967" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f306372ba6.png"&gt;&lt;img aria-describedby="caption-attachment-696967" class="wp-image-696967" src="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f306372ba6.png" alt="This screenshot shows the 'RESTEasy Qute (Experimental)' extension has been selected." width="640" height="470" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f306372ba6.png 902w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f306372ba6-300x220.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f306372ba6-768x564.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-696967" class="wp-caption-text"&gt;Figure 33. Select the RESTEasy JAX-RS and RESTEasy Qute extensions.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;You should see that the extensions you&amp;#8217;ve selected have been added to the table on the far-right side of the screen. If you want to remove an extension from your list, just double-click it again in either of the tables where it appears.&lt;/p&gt; &lt;p&gt;We&amp;#8217;re done setting up the project, so click &lt;strong&gt;Finish&lt;/strong&gt;. The project will be launched, and its dependencies will be retrieved. After a while, you&amp;#8217;ll see the new project in your &lt;strong&gt;Project Explorer&lt;/strong&gt; view, as shown in Figure 34.&lt;/p&gt; &lt;div id="attachment_696977" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f307f9466a.png"&gt;&lt;img aria-describedby="caption-attachment-696977" class="wp-image-696977 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f307f9466a-1024x545.png" alt="A screenshot of the new project window." width="640" height="341" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f307f9466a-1024x545.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f307f9466a-300x160.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f307f9466a-768x409.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-696977" class="wp-caption-text"&gt;Figure 34. The new project has been created.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;We&amp;#8217;ve successfully created a new Quarkus project. Next, I&amp;#8217;ll show you how to build and run the Quarkus application.&lt;/p&gt; &lt;h3 id="brqstep2"&gt;Step 2: Build and run the Quarkus application&lt;/h3&gt; &lt;p&gt;Select &lt;strong&gt;Run&amp;#8211;&amp;#62;Run Configurations…​&lt;/strong&gt; to display the dialog shown in Figure 35.&lt;/p&gt; &lt;div id="attachment_696987" style="width: 794px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f30ac48f1c.png"&gt;&lt;img aria-describedby="caption-attachment-696987" class="wp-image-696987 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f30ac48f1c.png" alt="A screenshot of the run configuration page with options to configure the application launch settings." width="784" height="632" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f30ac48f1c.png 784w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f30ac48f1c-300x242.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f30ac48f1c-768x619.png 768w" sizes="(max-width: 784px) 100vw, 784px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-696987" class="wp-caption-text"&gt;Figure 35. Configure the application launch settings.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;Scroll down to &lt;strong&gt;Quarkus Application&lt;/strong&gt; and select that option, as shown in Figure 36.&lt;/p&gt; &lt;div id="attachment_696997" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f30d70f70e.png"&gt;&lt;img aria-describedby="caption-attachment-696997" class="wp-image-696997" src="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f30d70f70e.png" alt="A screenshot shows the 'Quarkus Application' option in the left-side toolbar." width="640" height="516" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f30d70f70e.png 784w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f30d70f70e-300x242.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f30d70f70e-768x619.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-696997" class="wp-caption-text"&gt;Figure 36. Select &amp;#8220;Quarkus Application&amp;#8221;.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;Select the &lt;strong&gt;New configuration&lt;/strong&gt; option, as shown in Figure 37.&lt;/p&gt; &lt;div id="attachment_697007" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f30f50f6a6.png"&gt;&lt;img aria-describedby="caption-attachment-697007" class="wp-image-697007" src="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f30f50f6a6.png" alt="A screenshot shows the 'New configuration' option under 'Quarkus application'." width="640" height="655" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f30f50f6a6.png 678w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f30f50f6a6-293x300.png 293w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-697007" class="wp-caption-text"&gt;Figure 37. Create a new configuration for your Quarkus application.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;Next, you need to associate a workspace project with the configuration, so click &lt;strong&gt;Browse&lt;/strong&gt;. You will see a single project, as shown in Figure 38.&lt;/p&gt; &lt;div id="attachment_697017" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f31297ad14.png"&gt;&lt;img aria-describedby="caption-attachment-697017" class="wp-image-697017" src="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f31297ad14.png" alt="A screenshot shows the 'code-with-quarkus' project has been selected." width="640" height="655" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f31297ad14.png 678w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f31297ad14-293x300.png 293w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-697017" class="wp-caption-text"&gt;Figure 38. The code-with-quarkus project.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;Because the workspace contains a single project, it has been automatically selected. Click &lt;strong&gt;OK&lt;/strong&gt;, and you will move to the dialog shown in Figure 39.&lt;/p&gt; &lt;div id="attachment_697027" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f3146d9d1a.png"&gt;&lt;img aria-describedby="caption-attachment-697027" class="wp-image-697027" src="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f3146d9d1a.png" alt="A screenshot shows the new configuration page for code-with-quarkus." width="640" height="655" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f3146d9d1a.png 678w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f3146d9d1a-293x300.png 293w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-697027" class="wp-caption-text"&gt;Figure 39. The new configuration page for code-with-quarkus.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;The configuration needs to be built before we can use it, so start that process by clicking &lt;strong&gt;Run&lt;/strong&gt;. The new &lt;strong&gt;Console&lt;/strong&gt; view shows the build output, as displayed in Figure 40.&lt;/p&gt; &lt;div id="attachment_697037" style="width: 1012px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f316900efd.png"&gt;&lt;img aria-describedby="caption-attachment-697037" class="wp-image-697037 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f316900efd.png" alt="A screenshot shows the console in a new tab, with build output." width="1002" height="275" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f316900efd.png 1002w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f316900efd-300x82.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f316900efd-768x211.png 768w" sizes="(max-width: 1002px) 100vw, 1002px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-697037" class="wp-caption-text"&gt;Figure 40. The Console view is shown in a new tab.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;At this point, the application is being built. After a while, it will be started. Figure 41 shows the remaining build output.&lt;/p&gt; &lt;div id="attachment_697047" style="width: 651px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f319632dee.png"&gt;&lt;img aria-describedby="caption-attachment-697047" class="wp-image-697047" src="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f319632dee.png" alt="A screenshot shows the console with build output." width="641" height="176" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f319632dee.png 1002w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f319632dee-300x82.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f319632dee-768x211.png 768w" sizes="(max-width: 641px) 100vw, 641px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-697047" class="wp-caption-text"&gt;Figure 41. Build output in the Console view.&lt;/p&gt;&lt;/div&gt; &lt;h3 id="dqastep3"&gt;Step 3: Debug the Quarkus application&lt;/h3&gt; &lt;p&gt;Debugging a Quarkus application is simple: All we need to do is launch the new configuration we&amp;#8217;ve just created in Debug. Select the &lt;strong&gt;Run -&amp;#62; Debug Configurations&lt;/strong&gt; menu option, then click &lt;strong&gt;Debug&lt;/strong&gt;.&lt;/p&gt; &lt;p&gt;Doing this connects a remote JVM debug configuration to your running Quarkus application. If you&amp;#8217;ve set breakpoints in your application code (like we did in the Java microservices demo), then the execution will automatically stop on the first breakpoint.&lt;/p&gt; &lt;h2 id="pcaq"&gt;Preview: Content assistance for Quarkus&lt;/h2&gt; &lt;p&gt;I&amp;#8217;ve shown you how to create, run, and debug a Quarkus application using the new tooling features introduced in JBoss Tools 4.14.0. I also want to introduce a feature that is scheduled for integration with our next JBoss Tools release: Content assistance with the &lt;code&gt;application.properties&lt;/code&gt; file. that you can begin experimenting with now.&lt;/p&gt; &lt;h5&gt;The application.properties file&lt;/h5&gt; &lt;p&gt;Every Quarkus application is configured using the &lt;code&gt;application.properties&lt;/code&gt; file. The content of &lt;code&gt;application.properties&lt;/code&gt; depends on the Quarkus extensions you&amp;#8217;ve selected for your application. Some settings are mandatory, and some are not. The possible values for each setting are specific to its nature; for instance, you might have &lt;code&gt;boolean&lt;/code&gt;, &lt;code&gt;integer&lt;/code&gt;, or a limited set of values (enumerations).&lt;/p&gt; &lt;p&gt;As a developer, it&amp;#8217;s up to you to study the guides and documentation for your project and its extensions. Starting with JBoss Tools 4.14.0, you can also find content assistance for specific files under &lt;strong&gt;Quarkus Tools&lt;/strong&gt;. Content assistance is provided for tools that validate the content of your &lt;code&gt;application.properties&lt;/code&gt; files, and that feature provides possibly setting names and values.&lt;/p&gt; &lt;p&gt;To see the new content assistance feature in action, go to &lt;code&gt;src/main/resources/application.properties&lt;/code&gt; in the example project we just created. Right-click the &lt;code&gt;application.properties&lt;/code&gt; file and select &lt;strong&gt;Open With -&amp;#62; Generic Text Editor&lt;/strong&gt;. The &lt;strong&gt;Text Editor&lt;/strong&gt; view is shown in Figure 42.&lt;/p&gt; &lt;div id="attachment_697057" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f31df1ebd6.png"&gt;&lt;img aria-describedby="caption-attachment-697057" class="wp-image-697057 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f31df1ebd6-1024x545.png" alt="A screenshot of the application.properties file open in an editor window." width="640" height="341" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f31df1ebd6-1024x545.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f31df1ebd6-300x160.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f31df1ebd6-768x409.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-697057" class="wp-caption-text"&gt;Figure 42. Open the application.properties file in a generic text editor.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;Go to the third line of the file shown in Figure 43 and enter &lt;strong&gt;Ctrl+Space&lt;/strong&gt;. Doing this invokes code completion, as shown in Figure 43.&lt;/p&gt; &lt;div id="attachment_697067" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f31f8ee158.png"&gt;&lt;img aria-describedby="caption-attachment-697067" class="wp-image-697067 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f31f8ee158-1024x549.png" alt="A screenshot of the code completion window." width="640" height="343" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f31f8ee158-1024x549.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f31f8ee158-300x161.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f31f8ee158-768x412.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-697067" class="wp-caption-text"&gt;Figure 43. Press Ctrl + Space to invoke code completion.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;Mouse over a setting to display its documentation. As an example, try adding &lt;code&gt;quarkus.http.port&lt;/code&gt; to the &lt;code&gt;application.properties&lt;/code&gt; file, then mouse over it. The resulting documentation is shown in Figure 44.&lt;/p&gt; &lt;div id="attachment_697077" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f3215986c7.png"&gt;&lt;img aria-describedby="caption-attachment-697077" class="wp-image-697077 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f3215986c7-1024x546.png" alt="A screenshot of documentation for the quarkus.http.port setting." width="640" height="341" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f3215986c7-1024x546.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f3215986c7-300x160.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f3215986c7-768x410.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-697077" class="wp-caption-text"&gt;Figure 44. Documentation for quarkus.http.port.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;If you enter a wrong value, such as entering &lt;code&gt;false&lt;/code&gt; instead of a numeric value, the content assistant will highlight the error, as shown in Figure 45.&lt;/p&gt; &lt;div id="attachment_697087" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f323b371f7.png"&gt;&lt;img aria-describedby="caption-attachment-697087" class="wp-image-697087 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f323b371f7-1024x550.png" alt="A screenshot shows the 'false' value highlighted in the editor window." width="640" height="344" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f323b371f7-1024x550.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f323b371f7-300x161.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/03/img_5e6f323b371f7-768x412.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-697087" class="wp-caption-text"&gt;Figure 45. The content assistant highlights an error.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;The new content assistant is the first of a set of features that will be integrated into the next version of JBoss Tools. We encourage you to use it, and if you find we&amp;#8217;re missing features or enhancements, don&amp;#8217;t hesitate to report them using the &lt;a href="https://issues.redhat.com/issues/?jql=project%20%3D%20JBIDE%20AND%20component%20%3D%20quarkus%20and%20status%20!%3D%20Closed%20and%20status%20!%3D%20Resolved%20" target="_blank" target="_blank" rel="nofollow" noreferrer"&gt;JBoss Tools issue tracker&lt;/a&gt;.&lt;/p&gt; &lt;h2 id="conc"&gt;Conclusion&lt;/h2&gt; &lt;p&gt;These are only some of the new and updated features available through &lt;a href="https://tools.jboss.org/downloads/jbosstools/2019-12/4.14.0.Final.html" target="_blank" target="_blank" rel="nofollow" noreferrer"&gt;JBoss Tools 4.14.0&lt;/a&gt; and &lt;a href="https://developers.redhat.com/products/codeready-studio/overview" target="_blank" rel="noopener noreferrer"&gt;Red Hat CodeReady Studio 12.14&lt;/a&gt; for Eclipse 4.14 (2019-12). This article addressed the features related to OpenShift Container Platform, OpenShift Application Explorer, and Quarkus. &lt;a href="https://developers.redhat.com/blog/2020/04/20/red-hat-codeready-studio-12-14-0-ga-and-jboss-tools-4-14-0-final-tool-and-ui-updates/"&gt;The next article&lt;/a&gt; will focus on:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Hibernate Tools updates.&lt;/li&gt; &lt;li&gt;Forge, JST, and VPE last updates before deprecation.&lt;/li&gt; &lt;li&gt;Platform changes to views, dialogs, and toolbars.&lt;/li&gt; &lt;li&gt;Many general updates.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F04%2F20%2Fred-hat-codeready-studio-12-14-0-ga-and-jboss-tools-4-14-0-final-openshift-application-explorer-view-feedback-loops-new-quarkus-tooling%2F&amp;#38;linkname=Red%20Hat%20CodeReady%20Studio%2012.14.0.GA%20and%20JBoss%20Tools%204.14.0.Final%3A%20OpenShift%20and%20Quarkus%20updates" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F04%2F20%2Fred-hat-codeready-studio-12-14-0-ga-and-jboss-tools-4-14-0-final-openshift-application-explorer-view-feedback-loops-new-quarkus-tooling%2F&amp;#38;linkname=Red%20Hat%20CodeReady%20Studio%2012.14.0.GA%20and%20JBoss%20Tools%204.14.0.Final%3A%20OpenShift%20and%20Quarkus%20updates" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F04%2F20%2Fred-hat-codeready-studio-12-14-0-ga-and-jboss-tools-4-14-0-final-openshift-application-explorer-view-feedback-loops-new-quarkus-tooling%2F&amp;#38;linkname=Red%20Hat%20CodeReady%20Studio%2012.14.0.GA%20and%20JBoss%20Tools%204.14.0.Final%3A%20OpenShift%20and%20Quarkus%20updates" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F04%2F20%2Fred-hat-codeready-studio-12-14-0-ga-and-jboss-tools-4-14-0-final-openshift-application-explorer-view-feedback-loops-new-quarkus-tooling%2F&amp;#38;linkname=Red%20Hat%20CodeReady%20Studio%2012.14.0.GA%20and%20JBoss%20Tools%204.14.0.Final%3A%20OpenShift%20and%20Quarkus%20updates" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F04%2F20%2Fred-hat-codeready-studio-12-14-0-ga-and-jboss-tools-4-14-0-final-openshift-application-explorer-view-feedback-loops-new-quarkus-tooling%2F&amp;#38;linkname=Red%20Hat%20CodeReady%20Studio%2012.14.0.GA%20and%20JBoss%20Tools%204.14.0.Final%3A%20OpenShift%20and%20Quarkus%20updates" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F04%2F20%2Fred-hat-codeready-studio-12-14-0-ga-and-jboss-tools-4-14-0-final-openshift-application-explorer-view-feedback-loops-new-quarkus-tooling%2F&amp;#38;linkname=Red%20Hat%20CodeReady%20Studio%2012.14.0.GA%20and%20JBoss%20Tools%204.14.0.Final%3A%20OpenShift%20and%20Quarkus%20updates" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F04%2F20%2Fred-hat-codeready-studio-12-14-0-ga-and-jboss-tools-4-14-0-final-openshift-application-explorer-view-feedback-loops-new-quarkus-tooling%2F&amp;#38;linkname=Red%20Hat%20CodeReady%20Studio%2012.14.0.GA%20and%20JBoss%20Tools%204.14.0.Final%3A%20OpenShift%20and%20Quarkus%20updates" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F04%2F20%2Fred-hat-codeready-studio-12-14-0-ga-and-jboss-tools-4-14-0-final-openshift-application-explorer-view-feedback-loops-new-quarkus-tooling%2F&amp;#038;title=Red%20Hat%20CodeReady%20Studio%2012.14.0.GA%20and%20JBoss%20Tools%204.14.0.Final%3A%20OpenShift%20and%20Quarkus%20updates" data-a2a-url="https://developers.redhat.com/blog/2020/04/20/red-hat-codeready-studio-12-14-0-ga-and-jboss-tools-4-14-0-final-openshift-application-explorer-view-feedback-loops-new-quarkus-tooling/" data-a2a-title="Red Hat CodeReady Studio 12.14.0.GA and JBoss Tools 4.14.0.Final: OpenShift and Quarkus updates"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/04/20/red-hat-codeready-studio-12-14-0-ga-and-jboss-tools-4-14-0-final-openshift-application-explorer-view-feedback-loops-new-quarkus-tooling/"&gt;Red Hat CodeReady Studio 12.14.0.GA and JBoss Tools 4.14.0.Final: OpenShift and Quarkus updates&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/PrAh3dhwz5c" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;Eclipse 4.14 2019-12 Java EE bundle. Installing the newest bundle ensures you get the most current Java dependencies. Once you have Eclipse 4.14 (2019-12) or higher installed, you can open the Eclipse Marketplace tab and look for either JBoss Tools or Red Hat CodeReady Studio. Alternatively, you could OpenShift Container Platform (OCP) 4.3. You can [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/04/20/red-hat-codeready-studio-12-14-0-ga-and-jboss-tools-4-14-0-final-openshift-application-explorer-view-feedback-loops-new-quarkus-tooling/"&gt;Red Hat CodeReady Studio 12.14.0.GA and JBoss Tools 4.14.0.Final: OpenShift and Quarkus updates&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;</summary><post-id xmlns="com-wordpress:feed-additions:1">696637</post-id><dc:creator>Jeff Maury</dc:creator><dc:date>2020-04-20T07:00:48Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2020/04/20/red-hat-codeready-studio-12-14-0-ga-and-jboss-tools-4-14-0-final-openshift-application-explorer-view-feedback-loops-new-quarkus-tooling/</feedburner:origLink></entry></feed>
